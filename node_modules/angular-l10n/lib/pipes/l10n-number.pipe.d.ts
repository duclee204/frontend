import { PipeTransform } from '@angular/core';
import { L10nLocale, L10nNumberFormatOptions } from '../models/types';
import { L10nAsyncPipe } from '../models/l10n-async-pipe';
import { L10nIntlService } from '../services/l10n-intl.service';
import * as i0 from "@angular/core";
export declare class L10nNumberPipe implements PipeTransform {
    protected intl: L10nIntlService;
    constructor(intl: L10nIntlService);
    transform(value: any, language: string, options?: L10nNumberFormatOptions, currency?: string, convert?: (value: number, locale: L10nLocale, params: any) => number, convertParams?: any): string | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<L10nNumberPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<L10nNumberPipe, "l10nNumber", true>;
}
export declare class L10nNumberAsyncPipe extends L10nAsyncPipe implements PipeTransform {
    protected intl: L10nIntlService;
    constructor(intl: L10nIntlService);
    transform(value: any, options?: L10nNumberFormatOptions, convert?: (value: number, locale: L10nLocale, params: any) => number, convertParams?: any, language?: string, currency?: string): string | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<L10nNumberAsyncPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<L10nNumberAsyncPipe, "l10nNumberAsync", true>;
}
