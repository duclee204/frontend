import { L10nLocale, L10nNumberFormatOptions } from '../models/types';
import { L10nDirective } from '../models/l10n-directive';
import { L10nIntlService } from '../services/l10n-intl.service';
import * as i0 from "@angular/core";
export declare class L10nNumberDirective extends L10nDirective {
    protected intl: L10nIntlService;
    set l10nNumber(options: L10nNumberFormatOptions | '');
    options?: L10nNumberFormatOptions;
    currency?: string;
    convert?: (value: number, locale: L10nLocale, params: any) => number;
    convertParams?: any;
    constructor(intl: L10nIntlService);
    protected getValue(text: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<L10nNumberDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<L10nNumberDirective, "[l10nNumber]", never, { "l10nNumber": { "alias": "l10nNumber"; "required": false; }; "options": { "alias": "options"; "required": false; }; "currency": { "alias": "currency"; "required": false; }; "convert": { "alias": "convert"; "required": false; }; "convertParams": { "alias": "convertParams"; "required": false; }; }, {}, never, never, true, never>;
}
