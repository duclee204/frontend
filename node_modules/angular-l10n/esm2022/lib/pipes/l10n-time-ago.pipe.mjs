import { Pipe } from '@angular/core';
import { L10nAsyncPipe } from '../models/l10n-async-pipe';
import * as i0 from "@angular/core";
import * as i1 from "../services/l10n-intl.service";
class L10nTimeAgoPipe {
    constructor(intl) {
        this.intl = intl;
    }
    transform(value, language, unit, options) {
        if (value == null || value === '')
            return null;
        return this.intl.formatRelativeTime(value, unit, options, language);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nTimeAgoPipe, deps: [{ token: i1.L10nIntlService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: L10nTimeAgoPipe, isStandalone: true, name: "l10nTimeAgo" }); }
}
export { L10nTimeAgoPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nTimeAgoPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'l10nTimeAgo',
                    pure: true,
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.L10nIntlService }]; } });
class L10nTimeAgoAsyncPipe extends L10nAsyncPipe {
    constructor(intl) {
        super();
        this.intl = intl;
    }
    transform(value, unit, options, language) {
        if (value == null || value === '')
            return null;
        return this.intl.formatRelativeTime(value, unit, options, language);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nTimeAgoAsyncPipe, deps: [{ token: i1.L10nIntlService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: L10nTimeAgoAsyncPipe, isStandalone: true, name: "l10nTimeAgoAsync", pure: false }); }
}
export { L10nTimeAgoAsyncPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nTimeAgoAsyncPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'l10nTimeAgoAsync',
                    pure: false,
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.L10nIntlService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDEwbi10aW1lLWFnby5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1sMTBuL3NyYy9saWIvcGlwZXMvbDEwbi10aW1lLWFnby5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7O0FBRzFELE1BS2EsZUFBZTtJQUV4QixZQUFzQixJQUFxQjtRQUFyQixTQUFJLEdBQUosSUFBSSxDQUFpQjtJQUFJLENBQUM7SUFFekMsU0FBUyxDQUNaLEtBQVUsRUFDVixRQUFnQixFQUNoQixJQUFpQyxFQUNqQyxPQUF3QztRQUV4QyxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEVBQUU7WUFBRSxPQUFPLElBQUksQ0FBQztRQUUvQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDeEUsQ0FBQzs4R0FiUSxlQUFlOzRHQUFmLGVBQWU7O1NBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUwzQixJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxhQUFhO29CQUNuQixJQUFJLEVBQUUsSUFBSTtvQkFDVixVQUFVLEVBQUUsSUFBSTtpQkFDbkI7O0FBa0JELE1BS2Esb0JBQXFCLFNBQVEsYUFBYTtJQUVuRCxZQUFzQixJQUFxQjtRQUN2QyxLQUFLLEVBQUUsQ0FBQztRQURVLFNBQUksR0FBSixJQUFJLENBQWlCO0lBRTNDLENBQUM7SUFFTSxTQUFTLENBQ1osS0FBVSxFQUNWLElBQWlDLEVBQ2pDLE9BQXdDLEVBQ3hDLFFBQWlCO1FBRWpCLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRS9DLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN4RSxDQUFDOzhHQWZRLG9CQUFvQjs0R0FBcEIsb0JBQW9COztTQUFwQixvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFMaEMsSUFBSTttQkFBQztvQkFDRixJQUFJLEVBQUUsa0JBQWtCO29CQUN4QixJQUFJLEVBQUUsS0FBSztvQkFDWCxVQUFVLEVBQUUsSUFBSTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBMMTBuQXN5bmNQaXBlIH0gZnJvbSAnLi4vbW9kZWxzL2wxMG4tYXN5bmMtcGlwZSc7XHJcbmltcG9ydCB7IEwxMG5JbnRsU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2wxMG4taW50bC5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6ICdsMTBuVGltZUFnbycsXHJcbiAgICBwdXJlOiB0cnVlLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTDEwblRpbWVBZ29QaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGludGw6IEwxMG5JbnRsU2VydmljZSkgeyB9XHJcblxyXG4gICAgcHVibGljIHRyYW5zZm9ybShcclxuICAgICAgICB2YWx1ZTogYW55LFxyXG4gICAgICAgIGxhbmd1YWdlOiBzdHJpbmcsXHJcbiAgICAgICAgdW5pdDogSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXRVbml0LFxyXG4gICAgICAgIG9wdGlvbnM/OiBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdE9wdGlvbnNcclxuICAgICk6IHN0cmluZyB8IG51bGwge1xyXG4gICAgICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8IHZhbHVlID09PSAnJykgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmludGwuZm9ybWF0UmVsYXRpdmVUaW1lKHZhbHVlLCB1bml0LCBvcHRpb25zLCBsYW5ndWFnZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgICBuYW1lOiAnbDEwblRpbWVBZ29Bc3luYycsXHJcbiAgICBwdXJlOiBmYWxzZSxcclxuICAgIHN0YW5kYWxvbmU6IHRydWVcclxufSlcclxuZXhwb3J0IGNsYXNzIEwxMG5UaW1lQWdvQXN5bmNQaXBlIGV4dGVuZHMgTDEwbkFzeW5jUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpbnRsOiBMMTBuSW50bFNlcnZpY2UpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0cmFuc2Zvcm0oXHJcbiAgICAgICAgdmFsdWU6IGFueSxcclxuICAgICAgICB1bml0OiBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdFVuaXQsXHJcbiAgICAgICAgb3B0aW9ucz86IEludGwuUmVsYXRpdmVUaW1lRm9ybWF0T3B0aW9ucyxcclxuICAgICAgICBsYW5ndWFnZT86IHN0cmluZ1xyXG4gICAgKTogc3RyaW5nIHwgbnVsbCB7XHJcbiAgICAgICAgaWYgKHZhbHVlID09IG51bGwgfHwgdmFsdWUgPT09ICcnKSByZXR1cm4gbnVsbDtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW50bC5mb3JtYXRSZWxhdGl2ZVRpbWUodmFsdWUsIHVuaXQsIG9wdGlvbnMsIGxhbmd1YWdlKTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19