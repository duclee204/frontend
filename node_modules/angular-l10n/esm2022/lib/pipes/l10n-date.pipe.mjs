import { Pipe } from '@angular/core';
import { L10nAsyncPipe } from '../models/l10n-async-pipe';
import * as i0 from "@angular/core";
import * as i1 from "../services/l10n-intl.service";
class L10nDatePipe {
    constructor(intl) {
        this.intl = intl;
    }
    transform(value, language, options, timezone) {
        if (value == null || value === '')
            return null;
        return this.intl.formatDate(value, options, language, timezone);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nDatePipe, deps: [{ token: i1.L10nIntlService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: L10nDatePipe, isStandalone: true, name: "l10nDate" }); }
}
export { L10nDatePipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nDatePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'l10nDate',
                    pure: true,
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.L10nIntlService }]; } });
class L10nDateAsyncPipe extends L10nAsyncPipe {
    constructor(intl) {
        super();
        this.intl = intl;
    }
    transform(value, options, timezone, language) {
        if (value == null || value === '')
            return null;
        return this.intl.formatDate(value, options, language, timezone);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nDateAsyncPipe, deps: [{ token: i1.L10nIntlService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: L10nDateAsyncPipe, isStandalone: true, name: "l10nDateAsync", pure: false }); }
}
export { L10nDateAsyncPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nDateAsyncPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'l10nDateAsync',
                    pure: false,
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.L10nIntlService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDEwbi1kYXRlLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLWwxMG4vc3JjL2xpYi9waXBlcy9sMTBuLWRhdGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUdwRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7OztBQUcxRCxNQUthLFlBQVk7SUFFckIsWUFBc0IsSUFBcUI7UUFBckIsU0FBSSxHQUFKLElBQUksQ0FBaUI7SUFBSSxDQUFDO0lBRXpDLFNBQVMsQ0FBQyxLQUFVLEVBQUUsUUFBZ0IsRUFBRSxPQUFtQyxFQUFFLFFBQWlCO1FBQ2pHLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRS9DLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDcEUsQ0FBQzs4R0FSUSxZQUFZOzRHQUFaLFlBQVk7O1NBQVosWUFBWTsyRkFBWixZQUFZO2tCQUx4QixJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxVQUFVO29CQUNoQixJQUFJLEVBQUUsSUFBSTtvQkFDVixVQUFVLEVBQUUsSUFBSTtpQkFDbkI7O0FBYUQsTUFLYSxpQkFBa0IsU0FBUSxhQUFhO0lBRWhELFlBQXNCLElBQXFCO1FBQ3ZDLEtBQUssRUFBRSxDQUFDO1FBRFUsU0FBSSxHQUFKLElBQUksQ0FBaUI7SUFFM0MsQ0FBQztJQUVNLFNBQVMsQ0FBQyxLQUFVLEVBQUUsT0FBbUMsRUFBRSxRQUFpQixFQUFFLFFBQWlCO1FBQ2xHLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRS9DLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDcEUsQ0FBQzs4R0FWUSxpQkFBaUI7NEdBQWpCLGlCQUFpQjs7U0FBakIsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBTDdCLElBQUk7bUJBQUM7b0JBQ0YsSUFBSSxFQUFFLGVBQWU7b0JBQ3JCLElBQUksRUFBRSxLQUFLO29CQUNYLFVBQVUsRUFBRSxJQUFJO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEwxMG5EYXRlVGltZUZvcm1hdE9wdGlvbnMgfSBmcm9tICcuLi9tb2RlbHMvdHlwZXMnO1xyXG5pbXBvcnQgeyBMMTBuQXN5bmNQaXBlIH0gZnJvbSAnLi4vbW9kZWxzL2wxMG4tYXN5bmMtcGlwZSc7XHJcbmltcG9ydCB7IEwxMG5JbnRsU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2wxMG4taW50bC5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6ICdsMTBuRGF0ZScsXHJcbiAgICBwdXJlOiB0cnVlLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTDEwbkRhdGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGludGw6IEwxMG5JbnRsU2VydmljZSkgeyB9XHJcblxyXG4gICAgcHVibGljIHRyYW5zZm9ybSh2YWx1ZTogYW55LCBsYW5ndWFnZTogc3RyaW5nLCBvcHRpb25zPzogTDEwbkRhdGVUaW1lRm9ybWF0T3B0aW9ucywgdGltZXpvbmU/OiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsIHtcclxuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PT0gJycpIHJldHVybiBudWxsO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5pbnRsLmZvcm1hdERhdGUodmFsdWUsIG9wdGlvbnMsIGxhbmd1YWdlLCB0aW1lem9uZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgICBuYW1lOiAnbDEwbkRhdGVBc3luYycsXHJcbiAgICBwdXJlOiBmYWxzZSxcclxuICAgIHN0YW5kYWxvbmU6IHRydWVcclxufSlcclxuZXhwb3J0IGNsYXNzIEwxMG5EYXRlQXN5bmNQaXBlIGV4dGVuZHMgTDEwbkFzeW5jUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpbnRsOiBMMTBuSW50bFNlcnZpY2UpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0cmFuc2Zvcm0odmFsdWU6IGFueSwgb3B0aW9ucz86IEwxMG5EYXRlVGltZUZvcm1hdE9wdGlvbnMsIHRpbWV6b25lPzogc3RyaW5nLCBsYW5ndWFnZT86IHN0cmluZyk6IHN0cmluZyB8IG51bGwge1xyXG4gICAgICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8IHZhbHVlID09PSAnJykgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmludGwuZm9ybWF0RGF0ZSh2YWx1ZSwgb3B0aW9ucywgbGFuZ3VhZ2UsIHRpbWV6b25lKTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19