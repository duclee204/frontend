import { Pipe } from '@angular/core';
import { L10nAsyncPipe } from '../models/l10n-async-pipe';
import * as i0 from "@angular/core";
import * as i1 from "../services/l10n-intl.service";
class L10nPluralPipe {
    constructor(intl) {
        this.intl = intl;
    }
    transform(value, language, prefix, options) {
        if (value == null || value === '')
            return null;
        return this.intl.plural(value, prefix, options, language);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nPluralPipe, deps: [{ token: i1.L10nIntlService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: L10nPluralPipe, isStandalone: true, name: "l10nPlural" }); }
}
export { L10nPluralPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nPluralPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'l10nPlural',
                    pure: true,
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.L10nIntlService }]; } });
class L10nPluralAsyncPipe extends L10nAsyncPipe {
    constructor(intl) {
        super();
        this.intl = intl;
    }
    transform(value, prefix, options, language) {
        if (value == null || value === '')
            return null;
        return this.intl.plural(value, prefix, options, language);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nPluralAsyncPipe, deps: [{ token: i1.L10nIntlService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: L10nPluralAsyncPipe, isStandalone: true, name: "l10nPluralAsync", pure: false }); }
}
export { L10nPluralAsyncPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: L10nPluralAsyncPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'l10nPluralAsync',
                    pure: false,
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.L10nIntlService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDEwbi1wbHVyYWwucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItbDEwbi9zcmMvbGliL3BpcGVzL2wxMG4tcGx1cmFsLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7QUFHMUQsTUFLYSxjQUFjO0lBRXZCLFlBQXNCLElBQXFCO1FBQXJCLFNBQUksR0FBSixJQUFJLENBQWlCO0lBQUksQ0FBQztJQUV6QyxTQUFTLENBQUMsS0FBVSxFQUFFLFFBQWdCLEVBQUUsTUFBZSxFQUFFLE9BQWlDO1FBQzdGLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRS9DLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDOUQsQ0FBQzs4R0FSUSxjQUFjOzRHQUFkLGNBQWM7O1NBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUwxQixJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxZQUFZO29CQUNsQixJQUFJLEVBQUUsSUFBSTtvQkFDVixVQUFVLEVBQUUsSUFBSTtpQkFDbkI7O0FBYUQsTUFLYSxtQkFBb0IsU0FBUSxhQUFhO0lBRWxELFlBQXNCLElBQXFCO1FBQ3ZDLEtBQUssRUFBRSxDQUFDO1FBRFUsU0FBSSxHQUFKLElBQUksQ0FBaUI7SUFFM0MsQ0FBQztJQUVNLFNBQVMsQ0FBQyxLQUFVLEVBQUUsTUFBZSxFQUFFLE9BQWlDLEVBQUUsUUFBaUI7UUFDOUYsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxFQUFFO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFFL0MsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUM5RCxDQUFDOzhHQVZRLG1CQUFtQjs0R0FBbkIsbUJBQW1COztTQUFuQixtQkFBbUI7MkZBQW5CLG1CQUFtQjtrQkFML0IsSUFBSTttQkFBQztvQkFDRixJQUFJLEVBQUUsaUJBQWlCO29CQUN2QixJQUFJLEVBQUUsS0FBSztvQkFDWCxVQUFVLEVBQUUsSUFBSTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBMMTBuQXN5bmNQaXBlIH0gZnJvbSAnLi4vbW9kZWxzL2wxMG4tYXN5bmMtcGlwZSc7XHJcbmltcG9ydCB7IEwxMG5JbnRsU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2wxMG4taW50bC5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6ICdsMTBuUGx1cmFsJyxcclxuICAgIHB1cmU6IHRydWUsXHJcbiAgICBzdGFuZGFsb25lOiB0cnVlXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMMTBuUGx1cmFsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpbnRsOiBMMTBuSW50bFNlcnZpY2UpIHsgfVxyXG5cclxuICAgIHB1YmxpYyB0cmFuc2Zvcm0odmFsdWU6IGFueSwgbGFuZ3VhZ2U6IHN0cmluZywgcHJlZml4Pzogc3RyaW5nLCBvcHRpb25zPzogSW50bC5QbHVyYWxSdWxlc09wdGlvbnMpOiBzdHJpbmcgfCBudWxsIHtcclxuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PT0gJycpIHJldHVybiBudWxsO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5pbnRsLnBsdXJhbCh2YWx1ZSwgcHJlZml4LCBvcHRpb25zLCBsYW5ndWFnZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgICBuYW1lOiAnbDEwblBsdXJhbEFzeW5jJyxcclxuICAgIHB1cmU6IGZhbHNlLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTDEwblBsdXJhbEFzeW5jUGlwZSBleHRlbmRzIEwxMG5Bc3luY1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaW50bDogTDEwbkludGxTZXJ2aWNlKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdHJhbnNmb3JtKHZhbHVlOiBhbnksIHByZWZpeD86IHN0cmluZywgb3B0aW9ucz86IEludGwuUGx1cmFsUnVsZXNPcHRpb25zLCBsYW5ndWFnZT86IHN0cmluZyk6IHN0cmluZyB8IG51bGwge1xyXG4gICAgICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8IHZhbHVlID09PSAnJykgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmludGwucGx1cmFsKHZhbHVlLCBwcmVmaXgsIG9wdGlvbnMsIGxhbmd1YWdlKTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19