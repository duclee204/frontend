{"version":3,"file":"angularx-score.mjs","sources":["../../../projects/angularx-score/src/lib/shared/services/crypto.service.ts","../../../projects/angularx-score/src/lib/shared/services/HrStorage.ts","../../../projects/angularx-score/src/lib/shared/app-config.ts","../../../projects/angularx-score/src/lib/shared/services/validation.service.ts","../../../projects/angularx-score/src/lib/shared/models/base.control.ts","../../../projects/angularx-score/src/lib/shared/services/helper.service.ts","../../../projects/angularx-score/src/lib/shared/services/common-utils.service.ts","../../../projects/angularx-score/src/lib/shared/components/base-component/base-component.component.ts","../../../projects/angularx-score/src/lib/shared/components/base-component/base-component.component.html","../../../projects/angularx-score/src/lib/shared/directive/shared-directive.module.ts","../../../projects/angularx-score/src/lib/shared/directive/input-special.directive.ts","../../../projects/angularx-score/src/lib/shared/directive/auto-focus.directive.ts","../../../projects/angularx-score/src/lib/shared/components/control-messages/control-messages.component.ts","../../../projects/angularx-score/src/lib/shared/components/control-messages/control-messages.component.html","../../../projects/angularx-score/src/lib/shared/directive/input-trim.directive.ts","../../../projects/angularx-score/src/lib/shared/components/text-input/text-input.component.ts","../../../projects/angularx-score/src/lib/shared/components/text-input/text-input.component.html","../../../projects/angularx-score/src/lib/shared/components/drop-down/drop-down.component.ts","../../../projects/angularx-score/src/lib/shared/components/drop-down/drop-down.component.html","../../../projects/angularx-score/src/lib/shared/components/org-tree/org-tree.component.ts","../../../projects/angularx-score/src/lib/shared/components/org-tree/org-tree.component.html","../../../projects/angularx-score/src/lib/shared/components/org-selector-dialog/org-selector-dialog.component.ts","../../../projects/angularx-score/src/lib/shared/components/org-selector-dialog/org-selector-dialog.component.html","../../../projects/angularx-score/src/lib/shared/components/org-selector/org-selector.component.ts","../../../projects/angularx-score/src/lib/shared/components/org-selector/org-selector.component.html","../../../projects/angularx-score/src/lib/shared/components/auth-layout/auth-layout.component.ts","../../../projects/angularx-score/src/lib/shared/components/auth-layout/auth-layout.component.html","../../../projects/angularx-score/src/lib/shared/components/category-selector/category-selector.component.ts","../../../projects/angularx-score/src/lib/shared/components/category-selector/category-selector.component.html","../../../projects/angularx-score/src/lib/shared/components/change-password-form/change-password-form.component.ts","../../../projects/angularx-score/src/lib/shared/components/change-password-form/change-password-form.component.html","../../../projects/angularx-score/src/lib/shared/components/import-error-list/import-error-list.component.ts","../../../projects/angularx-score/src/lib/shared/components/import-error-list/import-error-list.component.html","../../../projects/angularx-score/src/lib/shared/services/basic.service.ts","../../../projects/angularx-score/src/lib/shared/services/import-form.service.ts","../../../projects/angularx-score/src/lib/shared/directive/drag-drop.directive.ts","../../../projects/angularx-score/src/lib/shared/components/choose-file-import-dialog/choose-file-import-dialog.component.ts","../../../projects/angularx-score/src/lib/shared/components/choose-file-import-dialog/choose-file-import-dialog.component.html","../../../projects/angularx-score/src/lib/shared/components/employee-picker-dialog/employee-picker-dialog.component.ts","../../../projects/angularx-score/src/lib/shared/components/employee-picker-dialog/employee-picker-dialog.component.html","../../../projects/angularx-score/src/lib/shared/components/employee-picker/employee-picker.component.ts","../../../projects/angularx-score/src/lib/shared/components/employee-picker/employee-picker.component.html","../../../projects/angularx-score/src/lib/shared/components/input-switch/input-switch.component.ts","../../../projects/angularx-score/src/lib/shared/components/input-switch/input-switch.component.html","../../../projects/angularx-score/src/lib/shared/components/multi-select/multi-select.component.ts","../../../projects/angularx-score/src/lib/shared/components/multi-select/multi-select.component.html","../../../projects/angularx-score/src/lib/shared/components/radio-button/radio-button.component.ts","../../../projects/angularx-score/src/lib/shared/components/radio-button/radio-button.component.html","../../../projects/angularx-score/src/lib/shared/components/shared-plugin/shared-plugin.component.ts","../../../projects/angularx-score/src/lib/shared/components/shared-plugin/shared-plugin.component.html","../../../projects/angularx-score/src/lib/shared/directive/has-not-permission.directive.ts","../../../projects/angularx-score/src/lib/shared/directive/has-permission.directive.ts","../../../projects/angularx-score/src/lib/shared/models/language.model.ts","../../../projects/angularx-score/src/lib/shared/models/model.ts","../../../projects/angularx-score/src/lib/shared/models/sys-property-details.model.ts","../../../projects/angularx-score/src/lib/shared/services/user-token.model.ts","../../../projects/angularx-score/src/lib/shared/public-api.ts","../../../projects/angularx-score/src/lib/shared/components/date-picker/date-picker.component.ts","../../../projects/angularx-score/src/lib/shared/components/date-picker/date-picker.component.html","../../../projects/angularx-score/src/lib/shared/shared.module.ts","../../../projects/angularx-score/src/lib/s-core.module.ts","../../../projects/angularx-score/src/public-api.ts","../../../projects/angularx-score/src/angularx-score.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CryptoService {\r\n    private static encrText = 'rNZSYvtgfyUPx75Okf6ArEx2SiktAW9j';\r\n    public static encr(data: any) {\r\n        try {\r\n          return CryptoJS.AES.encrypt(JSON.stringify(data), this.encrText).toString();\r\n        } catch (e) {\r\n          console.log(e);\r\n          return '';\r\n        }\r\n    }\r\n    public static decr(data: any) {\r\n        try {\r\n          const bytes = CryptoJS.AES.decrypt(data, this.encrText);\r\n          if (bytes) {\r\n            return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n          }\r\n          return data;\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserToken } from './user-token.model';\r\nimport { CommonUtils } from './common-utils.service';\r\nimport { CryptoService } from './crypto.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nclass StorageData {\r\n    userToken?: UserToken;\r\n    navState?: boolean;\r\n    navFlipState?: boolean;\r\n    searchState?: any;\r\n    listLang?: any;\r\n    listMarket?: any;\r\n    currentUrl?: any;\r\n    intro?: any;\r\n}\r\nexport class HrStorage {\r\n    public static data: StorageData;\r\n    private static expriteIn = '_expriteIn';\r\n    private static instanceName = '_HrStorage';\r\n\r\n    private static storage = localStorage;\r\n\r\n    /**\r\n     * init\r\n     */\r\n    public static init(): void {\r\n\r\n    }\r\n    /**\r\n     * isExprited\r\n     */\r\n    public static isExprited(): boolean {\r\n        return false;\r\n    }\r\n    /**\r\n     * clear\r\n     */\r\n    public static clear(): void {\r\n        this.storage.removeItem(this.instanceName);\r\n    }\r\n    /**\r\n     * storedData\r\n     */\r\n    public static storedData(): StorageData {\r\n        const storedData = this.storage.getItem(this.instanceName);\r\n        if (CommonUtils.isNullOrEmpty(storedData)) {\r\n            return {};\r\n        }\r\n        return CryptoService.decr(storedData);\r\n    }\r\n    /**\r\n     * get\r\n     */\r\n    public static get(key: string): any {\r\n        if (this.isExprited()) {\r\n            return null;\r\n        }\r\n        const storedData = this.storedData();\r\n        if (storedData == null) {\r\n            return null;\r\n        }\r\n        return (storedData as any)[key];\r\n    }\r\n    /**\r\n     * get\r\n     */\r\n    public static set(key: string, val: any): any {\r\n        let storedData = this.storedData();\r\n        if (storedData == null) {\r\n            storedData = new StorageData();\r\n        }\r\n        (storedData as any)[key] = val;\r\n\r\n        this.storage.setItem(this.instanceName, CryptoService.encr(storedData));\r\n    }\r\n    /**\r\n     * getUserToken\r\n     */\r\n    public static getUserToken(): UserToken {\r\n        return this.get('userToken');\r\n    }\r\n    /**\r\n     * setUserToken\r\n     */\r\n    public static setUserToken(userToken: UserToken) {\r\n        return this.set('userToken', userToken);\r\n    }\r\n    /**\r\n     * getNavState\r\n     */\r\n    public static getNavState(): boolean {\r\n        const navState = this.get('navState');\r\n        return navState === null ? false : navState;\r\n    }\r\n    /**\r\n     * setNavState\r\n     */\r\n    public static setNavState(navState: boolean): void {\r\n        this.set('navState', navState);\r\n    }\r\n    /**\r\n     * getNavFlipState\r\n     */\r\n    public static getNavFlipState(): boolean {\r\n        const navFlipState = this.get('navFlipState');\r\n        return navFlipState === null ? false : navFlipState;\r\n    }\r\n    /**\r\n     * setNavFlipState\r\n     */\r\n    public static setNavFlipState(navFlipState: boolean): void {\r\n        this.set('navFlipState', navFlipState);\r\n    }\r\n    /**\r\n     * getSearchState\r\n     */\r\n    public static getSearchState(): any {\r\n        return this.get('searchState');\r\n    }\r\n    /**\r\n     * setNavFlipState\r\n     */\r\n    public static setSearchState(searchState: any): void {\r\n        this.set('searchState', searchState);\r\n    }\r\n    /**\r\n     * getSelectedLang\r\n     */\r\n    public static getSelectedLang(): any {\r\n        const listLang = this.getListLang();\r\n        if (listLang == null) {\r\n            return null;\r\n        }\r\n        for (const item of listLang) {\r\n            if (item.isDefault === 1) {\r\n                return item;\r\n            }\r\n        }\r\n        return listLang[0];\r\n    }\r\n    /**\r\n    * setSelectedLang\r\n    */\r\n    public static setSelectedLang(object: any): void {\r\n        const listLang = this.getListLang();\r\n        if (listLang == null) {\r\n            return;\r\n        }\r\n        for (const item of listLang) {\r\n            if (object.code === item.code) {\r\n                item.isDefault = 1;\r\n            } else {\r\n                item.isDefault = null;\r\n            }\r\n        }\r\n        this.setListLang(listLang);\r\n    }\r\n    /**\r\n     * getListLang\r\n     */\r\n    public static getListLang(): any {\r\n        return this.get('listLang');\r\n    }\r\n    /**\r\n     * setListLang\r\n     */\r\n    public static setListLang(listLang: any): void {\r\n        this.set('listLang', listLang);\r\n    }\r\n    /**\r\n     * getCurrentMarket\r\n     */\r\n    public static getSelectedMarket(): any {\r\n        const listMarket = this.getListMarket();\r\n        if (listMarket == null) {\r\n            return null;\r\n        }\r\n        for (const item of listMarket) {\r\n            if (item.isDefault && item.isDefault === 1) {\r\n                return item;\r\n            }\r\n        }\r\n        return listMarket[0];\r\n    }\r\n    /**\r\n     * setSelectedMarket\r\n     */\r\n    public static setSelectedMarket(object: any): void {\r\n        const listMarket = this.getListMarket();\r\n        if (listMarket == null) {\r\n            return;\r\n        }\r\n        for (const item of listMarket) {\r\n            if (object.marketCompanyId === item.marketCompanyId) {\r\n                item.isDefault = 1;\r\n            } else {\r\n                item.isDefault = null;\r\n            }\r\n        }\r\n        this.setListMarket(listMarket);\r\n    }\r\n    /**\r\n     * getListMarket\r\n     */\r\n    public static getListMarket(): any {\r\n        return this.get('listMarket');\r\n    }\r\n    /**\r\n     * setListMarket\r\n     */\r\n    public static setListMarket(listMarket: any): void {\r\n        this.set('listMarket', listMarket);\r\n    }\r\n\r\n    /**\r\n     * getCurrentUrl\r\n     */\r\n    public static getCurrentUrl(): any {\r\n        return this.get('currentUrl');\r\n    }\r\n    /**\r\n     * setCurrentUrl\r\n     */\r\n    public static setCurrentUrl(currentUrl: any): void {\r\n        this.set('currentUrl', currentUrl);\r\n    }\r\n    /**\r\n     * getIntro\r\n     */\r\n    public static getIntro(): any {\r\n        return this.get('intro');\r\n    }\r\n    /**\r\n     * setIntro\r\n     */\r\n    public static setIntro(intro: any): void {\r\n        this.set('intro', intro);\r\n    }\r\n    /**\r\n     * introIsDone\r\n     * @ param screenCode\r\n     */\r\n    public static introIsDone(screenCode: string) {\r\n        const intro = this.getIntro();\r\n        if (intro == null || intro.length === 0) {\r\n            return false;\r\n        }\r\n        return intro.indexOf(screenCode) > -1;\r\n    }\r\n    /**\r\n     * introIsDone\r\n     * @ param screenCode\r\n     */\r\n    public static introSetDone(screenCode: string) {\r\n        let intro = this.getIntro();\r\n        if (intro == null || intro.length === 0) {\r\n            intro = [];\r\n        }\r\n        if (intro.indexOf(screenCode) > -1) {\r\n            return;\r\n        }\r\n        intro.push(screenCode);\r\n        this.setIntro(intro);\r\n    }\r\n\r\n    /**\r\n     * getTheme\r\n     */\r\n    public static getTheme(): any {\r\n        return this.get('theme');\r\n    }\r\n    /**\r\n     * setTheme\r\n     */\r\n    public static setTheme(theme: any): void {\r\n        this.set('theme', theme);\r\n    }\r\n    /**\r\n     * setSessionId\r\n     */\r\n    public static setSessionId(id: any): void {\r\n        this.set('sessionId', id);\r\n    }\r\n\r\n    /**\r\n    * getSessionId\r\n    */\r\n    public static getSessionId(): any {\r\n        return this.get('sessionId');\r\n    }\r\n\r\n}\r\n","export const APP_CONSTANTS = {\r\n\r\n}\r\n\r\nexport const CONFIG_DEFAULT = {\r\n    dateFormat: 'dd/MM/yyyy'\r\n};\r\n  \r\n\r\nexport const CONFIG: any = {\r\n    API_PATH: {\r\n        home: '/v1/home',\r\n        categoryType: '/v1/category-type',\r\n        category: '/v1/category',\r\n        organization: '/v1/organization',\r\n        employee: '/v1/employee',\r\n        educationType: '/v1/education-type',\r\n        trainingCourse: '/v1/training-course',\r\n        course: '/v1/course',\r\n        classroom: '/v1/classroom',\r\n        classroomSchedule: '/v1/classroom-schedule',\r\n        employeeRequest: '/v1/employee-request',\r\n        employeeClassroom: '/v1/employee-classroom',\r\n        employeeClassroomAttend: '/v1/employee-classroom-attend',\r\n        certificateApproval: '/v1/certificate-approval',\r\n        certificateBook: '/v1/certificate-book',\r\n        role: '/v1/role',\r\n        resource: '/v1/resource',\r\n        user: '/v1/user',\r\n        auth: '/v1/auth',\r\n        student: '/v1/student',\r\n        subject: '/v1/subject',\r\n        schoolYear: '/v1/school-year',\r\n        classSubject: '/v1/class-subject',\r\n        studentClassSubject: '/v1/student-class-subject',\r\n    }\r\n};\r\n\r\nexport const PERMISSION_CODE: any = {\r\n    // action tac dong\r\n    'action.view': 'VIEW'\r\n    , 'action.insert': 'INSERT'\r\n    , 'action.update': 'UPDATE'\r\n    , 'action.delete': 'DELETE'\r\n    , 'action.import': 'IMPORT'\r\n    , 'action.export': 'EXPORT'\r\n    , 'action.approve': 'APPROVE'\r\n    , 'action.decide': 'DECIDE'\r\n    , 'action.unDecide': 'UN_DECIDE'\r\n    , 'action.unApproveAll': 'UN_APPROVE_ALL'\r\n    , 'action.approveAll': 'APPROVE_ALL'\r\n    , 'action.removeEmp': 'REMOVE_EMP'\r\n    , 'action.addEmp': 'ADD_EMP'\r\n    , 'action.unApprove': 'UN_APPROVE'\r\n    , 'action.unLock': 'UN_LOCK'\r\n    , 'action.lock': 'LOCK'\r\n    , 'action.calculate': 'CALCULATE'\r\n    , 'action.viewHistory': 'VIEW_HISTORY'\r\n    , 'action.enable': 'ENABLE'\r\n    , 'action.disable': 'DISABLE'\r\n    , 'action.issueAgain': 'ISSUE_AGAIN'\r\n    , 'action.issueChange': 'ISSUE_CHANGE'\r\n    , 'action.quickImport': 'QUICK_IMPORT'\r\n    , 'action.transfer': 'TRANSFER'\r\n    , 'action.manage': 'MANAGE'\r\n    , 'action.viewAll': 'VIEW_ALL'\r\n    , 'action.payrollCalculate': 'PAYROLL_CALCULATE'\r\n    , 'action.payrollDestroy': 'DESTROY_PAYROLL'\r\n    , 'action.syncTax': 'SYNC_TAX'\r\n    , 'action.syncPayroll': 'SYNC_PAYROLL'\r\n    , 'action.addAction': 'ADD_ACTION'\r\n    , 'action.grantRole': 'GRANT_ROLE'\r\n    , 'action.grantMenu': 'GRANT_MENU'\r\n    , 'action.grantPermission': 'GRANT_PERMISSION'\r\n    , 'action.updateStatus': 'UPDATE_STATUS'\r\n    , 'action.resetPassword': 'RESET_PASSWORD'\r\n    , 'action.lockUser': 'LOCK_USER'\r\n    , 'action.brag': 'BRAG' // Dồn túi & làm phách\r\n    , 'action.dataSynthesis': 'DATA_SYNTHESIS' // Tổng hợp dữ liệu\r\n    , 'action.mngStudent': 'MNG_STUDENT' // Tổng hợp dữ liệu\r\n\r\n\r\n    , 'resource.organization': 'ORGANIZATION'\r\n    , 'resource.employee': 'EMPLOYEE'\r\n    , 'resource.trainingCourse': 'TRAINING_COURSE'\r\n    , 'resource.educationType': 'EDUCATION_TYPE'\r\n    , 'resource.category': 'CATEGORY'\r\n    , 'resource.employeeRequest': 'EMPLOYEE_REQUEST'\r\n    , 'resource.employeeClassroom': 'EMPLOYEE_CLASSROOM'\r\n    , 'resource.employeeClassroomAttend': 'EMPLOYEE_CLASSROOM_ATTEND'\r\n    , 'resource.course': 'COURSE'\r\n    , 'resource.classroom': 'CLASSROOM'\r\n    , 'resource.classroomSchedule': 'CLASSROOM_SCHEDULE'\r\n    , 'resource.gradingAssignments': 'GRADING_ASSIGNMENTS' // Chấm bài thu hoạch\r\n    , 'resource.certificateApproval': 'CERTIFICATE_APPROVAL' // Xét duyệt cấp chứng chỉ\r\n    , 'resource.certificateBook': 'CERTIFICATE_BOOK' // Sổ cấp chứng chỉ\r\n    , 'resource.role': 'ROLE'\r\n    , 'resource.user': 'USER'\r\n    , 'resource.student': 'STUDENT'\r\n    , 'resource.subject': 'SUBJECT'\r\n    , 'resource.schoolYear': 'SCHOOL_YEAR'\r\n    , 'resource.classSubject': 'CLASS_SUBJECT'\r\n    , 'resource.roomType': 'ROOM_TYPE'\r\n    , 'resource.room': 'ROOM'\r\n    , 'resource.contract': 'CONTRACT'\r\n    , 'resource.waterElectric': 'WATER_ELECTRIC'\r\n    , 'resource.waterElectricBill': 'WATER_ELECTRIC_BILL'\r\n};\r\n\r\nexport enum RESOURCE {\r\n    HOME = 'HOME',\r\n    OVERALL_STATISTICS = 'OVERALL_STATISTICS',\r\n    SYS_PROPERTY = 'SYS_PROPERTY',\r\n    SETTING = 'SETTING',\r\n    CATEGORY_TYPE = 'CATEGORY_TYPE',\r\n    CATEGORY = 'CATEGORY',\r\n    // Tổ chức - bộ máy, biên chế\r\n    MNG_ORGANIZATION = 'MNG_ORGANIZATION',\r\n    ORGANIZATION = 'ORGANIZATION',\r\n    EMPLOYEE = 'EMPLOYEE',\r\n    EDUCATION_TYPE = 'EDUCATION_TYPE',\r\n    TRAINING_COURSE = 'TRAINING_COURSE',\r\n    COURSE = 'COURSE',\r\n    CLASSROOM = 'CLASSROOM',\r\n    ROLE = 'ROLE',\r\n    USER = 'USER',\r\n    AUTH = 'AUTH',\r\n    STUDENT = 'STUDENT',\r\n    SUBJECT = 'SUBJECT',\r\n    SCHOOL_YEAR = 'SCHOOL_YEAR',\r\n    CLASS_SUBJECT = 'CLASS_SUBJECT',\r\n    STUDENT_CLASS_SUBJECT = 'STUDENT_CLASS_SUBJECT',\r\n    ROOM_TYPE = 'ROOM_TYPE',\r\n    ROOM = 'ROOM',\r\n    CONTRACT = 'CONTRACT',\r\n    WATER_ELECTRIC = 'WATER_ELECTRIC',\r\n    WATER_ELECTRIC_BILL = 'WATER_ELECTRIC_BILL',\r\n}\r\n\r\nexport enum INPUT_TYPE {\r\n    TEXT = 'text',\r\n    NUMBER = 'number',\r\n    TEXT_AREA = 'text-area',\r\n    CURRENCY = 'currency',\r\n    DATE = 'date',\r\n    URL = 'url',\r\n    PASSWORD = 'password',\r\n}\r\n\r\nexport enum ACTION_FORM {\r\n    SEARCH = 'SEARCH',\r\n    INSERT = 'INSERT',\r\n    UPDATE = 'UPDATE',\r\n    IMPORT = 'IMPORT',\r\n    VIEW = 'VIEW',\r\n    DELETE = 'DELETE',\r\n    CONFIG = 'CONFIG',\r\n    UPDATE_STATUS = 'UPDATE_STATUS',\r\n\r\n    SYS_CAT_TYPE_INSERT = 'SYS_CAT_TYPE_INSERT'\r\n}\r\n\r\n\r\nexport enum SEARCH_OPERATION {\r\n    IN = 'in',\r\n    GREATER_THAN = 'gt',\r\n    LESS_THAN = 'lt',\r\n    GREATER_THAN_EQUAL = 'gte',\r\n    LESS_THAN_EQUAL = 'lte',\r\n    NOT_EQUAL = 'neq',\r\n    EQUAL = 'eq',\r\n    MATCH = 'ma',\r\n    MATCH_END = 'mae',\r\n}\r\n\r\nexport const GENDER_OPTIONS = [\r\n    { label: \"Nam\", value: 1 },\r\n    { label: \"Nữ\", value: 0 },\r\n]\r\nexport const OBJ_TYPE_OPTIONS = [\r\n    { label: \"Cán bộ\", value: \"OFFICERS\" },\r\n    { label: \"Học viên\", value: \"STUDENT\" }\r\n]\r\n\r\nexport const STATUS_DEFENCE_SECURITY = [\r\n    { label: \"Chưa học\", value: 0 },\r\n    { label: \"Đã học\", value: 1 },\r\n    { label: \"Chưa đủ điều kiện\", value: 2 },\r\n    { label: \"Đã đăng ký học\", value: 3 },\r\n]\r\n\r\n\r\nexport enum CLASSROOM_STATUS_ENUM {\r\n    TAO_MOI = 'TAO_MOI',\r\n    DANG_HOC = 'DANG_HOC',\r\n    DA_THAM_QUAN = 'DA_THAM_QUAN',\r\n    DA_THI = 'DA_THI',\r\n    DA_KET_THUC = 'DA_KET_THUC',\r\n}\r\nexport const CLASSROOM_STATUS = [\r\n    { label: \"Tạo mới\", value: CLASSROOM_STATUS_ENUM.TAO_MOI },\r\n    { label: \"Đang học\", value: CLASSROOM_STATUS_ENUM.DANG_HOC },\r\n    { label: \"Đã đi tham quan\", value: CLASSROOM_STATUS_ENUM.DA_THAM_QUAN },\r\n    { label: \"Đã thi\", value: CLASSROOM_STATUS_ENUM.DA_THI },\r\n    { label: \"Đã kết thúc\", value: CLASSROOM_STATUS_ENUM.DA_KET_THUC },\r\n]\r\nexport enum CLASSROOM_SCHEDULE_TYPE_ENUM {\r\n    LY_THUYET = 'LY_THUYET',\r\n    THAM_QUAN = 'THAM_QUAN',\r\n    THI = 'THI',\r\n}\r\n\r\nexport const CLASSROOM_SCHEDULE_TYPE = [\r\n    { label: \"Lý thuyết\", value: CLASSROOM_SCHEDULE_TYPE_ENUM.LY_THUYET },\r\n    { label: \"Tham quan\", value: CLASSROOM_SCHEDULE_TYPE_ENUM.THAM_QUAN },\r\n    { label: \"Thi\", value: CLASSROOM_SCHEDULE_TYPE_ENUM.THI },\r\n]","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, ValidatorFn, FormGroup, Validators, FormBuilder, FormArray, FormControl, ValidationErrors } from '@angular/forms';\r\nimport { CommonUtils } from './common-utils.service';\r\n// import { isString } from 'util';\r\nimport { SysPropertyDetailBean } from '../models/sys-property-details.model';\r\nimport { BaseControl } from '../models/base.control';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidationService {\r\n\r\n  /**\r\n   * validate required with no space\r\n   */\r\n  public static required(control: AbstractControl): any {\r\n    if (control.value === null || control.value === '') {\r\n      return { required: true };\r\n    } else if (('' + control.value).trim() === '') {\r\n      return { required: true };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * validate required with no space\r\n   */\r\n  public static noWhiteSpace(control: AbstractControl): any {\r\n    if ((control.value as string).indexOf(' ') >= 0) {\r\n      return { cannotContainSpace: true }\r\n    }\r\n    return null;\r\n  }\r\n  public static maxLength(length: number): ValidatorFn | any{\r\n    return (c: AbstractControl): any | null => {\r\n      if (c.value) {\r\n        if ((c.value + '').replace(/\\n/g, '\\r\\n').length > length) {\r\n          return { 'maxlength': { 'requiredLength': length } };\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  public static passwordValidator(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n\r\n    // {6,100}           - Assert password is between 6 and 100 characters\r\n    // (?=.*[0-9])       - Assert a string has at least one number\r\n    // (?!.*\\s)          - Spaces are not allowed\r\n    return (control.value.match(/^(?=.*\\d)(?=.*[a-zA-Z!@#$%^&*])(?!.*\\s).{6,100}$/)) ? '' : { invalidPassword: true };\r\n  }\r\n\r\n  /**\r\n   * validate onlyLetterNumber\r\n   */\r\n  public static onlyLetterNumber(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.match(/^[0-9a-zA-Z]+$/)) ? '' : { onlyLetterNumber: true };\r\n  }\r\n\r\n  /**\r\n   * validate onlyLetterNumberSp\r\n   */\r\n  public static onlyLetterNumberSp(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.match(/^[0-9a-zA-Z\\ ]+$/)) ? '' : { onlyLetterNumber: true };\r\n  }\r\n\r\n  /**\r\n   * validate database tableColumnName\r\n   */\r\n  public static dbTableColumnName(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.match(/^[0-9a-zA-Z_]+$/)) ? '' : { dbTableColumnName: true };\r\n  }\r\n\r\n  /**\r\n   * validate personalIdNumber\r\n   */\r\n  public static personalIdNumber(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.match(/^[0-9a-zA-Z]{8,15}$/)) ? '' : { personalIdNumber: true };\r\n  }\r\n\r\n  /**\r\n   * validate phone\r\n   */\r\n  public static phone(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.match(/^([\\+])?(\\d([.\\s])?){1,15}$/)) ? '' : { phone: true };\r\n  }\r\n\r\n  /**\r\n   * validate mobileNumber\r\n   */\r\n  public static mobileNumber(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.match(/^([+][0-9]{1,3}([ .-])?)?([(][0-9]{1,6}[)])?([0-9 .-]{1,32})(([A-Za-z :]{1,11})?[0-9]{1,4}?)$/))\r\n      ? '' : { mobileNumber: true };\r\n  }\r\n\r\n  /**\r\n   * validate integer\r\n   */\r\n  public static integer(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.toString().trim().match(/^[\\-\\+]?\\d+$/)) ? '' : { integer: true };\r\n  }\r\n\r\n  /**\r\n   * validate positiveInteger\r\n   */\r\n  public static positiveInteger(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.toString().trim().match(/^\\d+$/)) ? '' : { positiveInteger: true };\r\n  }\r\n\r\n  /**\r\n   * validate number\r\n   */\r\n  public static number(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.toString().trim().match(/^[\\-\\+]?(([0-9]+)([\\.]([0-9]+))?|([\\.]([0-9]+))?)$/))\r\n      ? '' : { number: true };\r\n  }\r\n\r\n  /**\r\n   * validate positiveNumber\r\n   */\r\n  public static positiveNumber(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.toString().trim().match(/^(([0-9]+)([\\.]([0-9]+))?|([\\.]([0-9]+))?)$/))\r\n      ? '' : { positiveNumber: true };\r\n  }\r\n\r\n  /**\r\n * validate beforeCurrentDate\r\n */\r\n  public static beforeCurrentDate(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    const x = new Date().getTime();\r\n    return (control.value < x)\r\n      ? '' : { beforeCurrentDate: true };\r\n  }\r\n  public static afterCurrentDate(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    const x = new Date().getTime();\r\n    return (control.value >= x || x - control.value < 99999999)\r\n      ? '' : { afterCurrentDate: true };\r\n  }\r\n\r\n  /**\r\n   * Validate IP\r\n   * @param control : any\r\n   */\r\n  public static isIp(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    const str: string = '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.'\r\n      + '){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$';\r\n    const regExp = new RegExp(str);\r\n    if (!regExp.test(control.value)) {\r\n      return { isIp: true };\r\n    }\r\n    return '';\r\n  }\r\n  /**\r\n * Validate URL\r\n * @param control : any\r\n */\r\n  public static isUrl(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    const str = '(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|' +\r\n      'www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|' +\r\n      'https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})';\r\n    const regExp = new RegExp(str);\r\n    if (!regExp.test(control.value)) {\r\n      return { isUrl: true };\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /** Validate email format */\r\n  public static emailFormat(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    // tslint:disable-next-line: max-line-length\r\n    return (control.value.toString().trim().match(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i))\r\n      ? '' : { invalidEmail: true };\r\n  }\r\n\r\n  /**\r\n   * Validate date not affter date\r\n   * @param targetKey: any\r\n   * @param toMatchKey: any\r\n   */\r\n  public static notAffter(targetKey: string, toMatchKey: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n      const toMatch = group.controls[toMatchKey];\r\n      if (target.hasError('dateNotAffter')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n\r\n      if (target.value && toMatch.value) {\r\n        const isCheck = target.value <= toMatch.value;\r\n        // set equal value error on dirty controls\r\n        if (!isCheck && target.valid && toMatch.valid) {\r\n          target.setErrors({ dateNotAffter: { dateNotAffter: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n  * Validate date not before date\r\n  * @param targetKey: any\r\n  * @param toMatchKey: any\r\n  */\r\n  public static notBefore(targetKey: string, toMatchKey: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n      const toMatch = group.controls[toMatchKey];\r\n      if (target.hasError('dateNotBefore')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n\r\n      if (target.value && toMatch.value) {\r\n        const isCheck = target.value >= toMatch.value;\r\n        // set equal value error on dirty controls\r\n        if (!isCheck && target.valid && toMatch.valid) {\r\n          target.setErrors({ dateNotBefore: { dateNotBefore: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n  /**\r\n   * Validate date not affter number\r\n   * @param targetKey: any\r\n   * @param toMatchKey: any\r\n   */\r\n  public static notAffterNumber(targetKey: string, toMatchKey: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n      const toMatch = group.controls[toMatchKey];\r\n      // neu mot trong hai truong null thi chuyen sang require\r\n      if (!target || !toMatch) {\r\n        return null;\r\n      }\r\n      // dieu kien kiem tra\r\n      if (target.hasError('dateNotAffter')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n      const targetValue = parseFloat(target.value);\r\n      const toMatchValue = parseFloat(toMatch.value);\r\n      if (targetValue && toMatchValue) {\r\n        const isCheck = targetValue <= toMatchValue;\r\n        // set equal value error on dirty controls\r\n        if (!isCheck && target.valid && toMatch.valid) {\r\n          target.setErrors({ dateNotAffter: { dateNotAffter: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate date in range 6 Month\r\n   * @param targetKey: any\r\n   * @param toMatchKey: any\r\n   */\r\n  public static isRangeOf6Month(targetKey: string, toMatchKey: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n      const toMatch = group.controls[toMatchKey];\r\n      // kiem tra null\r\n      if (target.hasError('isRangeOf6Month')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n\r\n      let temp = new Date(target.value);\r\n      temp.setMonth(temp.getMonth() + 6);\r\n\r\n\r\n      // kiem tra  gia tri\r\n      if (target.value && toMatch.value) {\r\n        const isCheck = temp >= new Date(toMatch.value);\r\n        // set equal value error on dirty controls\r\n        if (!isCheck) {\r\n          target.setErrors({ isRangeOf6Month: { dateNotAffter: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate date not before a specify date\r\n   * @param targetKey: any\r\n   * @param specifyDate: any\r\n   */\r\n  public static beforeSpecifyDate(targetKey: string, specifyDate: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n\r\n      // Neu mot trong hai truong null\r\n      if (!target || !specifyDate) {\r\n        return null;\r\n      }\r\n\r\n      // Dieu kien kiem tra\r\n      if (target.hasError('dateNotBefore')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n      const targetValue = parseFloat(target.value);\r\n      const toMatchValue = parseFloat(specifyDate);\r\n      if (targetValue || targetValue === 0 && toMatchValue) {\r\n        const isCheck = targetValue >= toMatchValue;\r\n        // Set equal value error on dirty controls\r\n        if (!isCheck && target.valid) {\r\n          target.setErrors({ dateNotBefore: { dateNotBefore: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate date not after a specify date\r\n   * @param targetKey: any\r\n   * @param specifyDate: any\r\n   */\r\n  public static afterSpecifyDate(targetKey: string, specifyDate: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n\r\n      // Neu mot trong hai truong null\r\n      if (!target || !specifyDate) {\r\n        return null;\r\n      }\r\n\r\n      // Dieu kien kiem tra\r\n      if (target.hasError('dateNotAffter')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n      const targetValue = parseFloat(target.value);\r\n      const toMatchValue = parseFloat(specifyDate);\r\n      if (targetValue || targetValue === 0 && toMatchValue) {\r\n        const isCheck = targetValue <= toMatchValue;\r\n        // Set equal value error on dirty controls\r\n        if (!isCheck && target.valid) {\r\n          target.setErrors({ dateNotAffter: { dateNotAffter: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate date not before number\r\n   * @param targetKey: any\r\n   * @param toMatchKey: any\r\n   */\r\n  public static notBeforeNumber(targetKey: string, toMatchKey: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n      const toMatch = group.controls[toMatchKey];\r\n      // neu mot trong hai truong null thi chuyen sang require\r\n      if (!target || !toMatch) {\r\n        return null;\r\n      }\r\n      // dieu kien kiem tra\r\n      if (target.hasError('dateNotBefore')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n      const targetValue = parseFloat(target.value);\r\n      const toMatchValue = parseFloat(toMatch.value);\r\n      if (targetValue || targetValue === 0 && toMatchValue) {\r\n        const isCheck = targetValue >= toMatchValue;\r\n        // set equal value error on dirty controls\r\n        if (!isCheck && target.valid && toMatch.valid) {\r\n          target.setErrors({ dateNotBefore: { dateNotBefore: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n  public static getValidatorArr(oldArr: Array<ValidatorFn>, prop?: SysPropertyDetailBean): Array<ValidatorFn> {\r\n    const validators = new Array<ValidatorFn>();\r\n    if (oldArr && oldArr.length > 0 && (prop === null || prop === undefined)) {\r\n      return oldArr;\r\n    }\r\n    if (prop === null || prop === undefined || prop.isHide === true) {\r\n      return validators;\r\n    }\r\n    if (prop.isRequire) {\r\n      validators.push(ValidationService.required);\r\n    }\r\n    if (prop.isEmail) {\r\n      validators.push(Validators.email);\r\n    }\r\n    if (prop.isNumber) {\r\n      validators.push(ValidationService.number);\r\n    }\r\n    if (prop.isUrl) {\r\n      validators.push(ValidationService.isUrl);\r\n    }\r\n    if (prop.isIp) {\r\n      validators.push(ValidationService.isIp);\r\n    }\r\n    if (prop.minLength) {\r\n      validators.push(Validators.minLength(prop.minLength));\r\n    }\r\n    if (prop.maxLength) {\r\n      validators.push(ValidationService.maxLength(prop.maxLength));\r\n    }\r\n    if (prop.numberMin) {\r\n      validators.push(Validators.min(prop.numberMin));\r\n    }\r\n    if (prop.numberMax) {\r\n      validators.push(Validators.max(prop.numberMax));\r\n    }\r\n    if (prop.password) {\r\n      validators.push(ValidationService.passwordValidator);\r\n    }\r\n    if (prop.phone) {\r\n      validators.push(ValidationService.phone);\r\n    }\r\n    if (prop.mobileNumber) {\r\n      validators.push(ValidationService.mobileNumber);\r\n    }\r\n    if (prop.personalIdNumber) {\r\n      validators.push(ValidationService.personalIdNumber);\r\n    }\r\n    if (prop.beforeCurrentDate) {\r\n      validators.push(ValidationService.beforeCurrentDate);\r\n    }\r\n    if (prop.numberType) {\r\n      switch (prop.numberType) {\r\n        case 'isNumber':\r\n          validators.push(ValidationService.number);\r\n          break;\r\n        case 'positiveNumber':\r\n          validators.push(ValidationService.positiveNumber);\r\n          break;\r\n        case 'integer':\r\n          validators.push(ValidationService.integer);\r\n          break;\r\n        case 'positiveInteger':\r\n          validators.push(ValidationService.positiveInteger);\r\n          break;\r\n        case 'positiveRealNumber':\r\n          validators.push(ValidationService.positiveRealNumber);\r\n          break;\r\n      }\r\n    }\r\n    if (prop.emailFormat) {\r\n      validators.push(ValidationService.emailFormat);\r\n    }\r\n    return validators;\r\n  }\r\n  /**\r\n     * Validate 'Đơn vị, Chức danh công việc không được phép trùng'\r\n     * @param targetKey: any\r\n     * @param toMatchKey: any\r\n     */\r\n  public static duplicateArray(controlKeys: Array<string>, target: string, messageKey?: string): ValidatorFn | any{\r\n    return (array: FormArray) => {\r\n      // target.setErrors({duplicateArray: {duplicateName: messageKey}});\r\n      // target.markAsTouched();\r\n      const map: object = {};\r\n      for (const group of array.controls) {\r\n        const controlTaget = group.get(target) as FormControl;\r\n        let count = 0;\r\n        const values = [];\r\n        for (const key of controlKeys) {\r\n          const control = group.get(key) as FormControl;\r\n          if (control.value !== null && control.value !== '') {\r\n            values.push(control.value);\r\n            count++;\r\n          }\r\n        }\r\n        let k = '/' + values.join('/') + '/';\r\n        k = k.toLowerCase();\r\n        if (controlKeys.length === count) {\r\n          if (map.hasOwnProperty(k)) {\r\n            controlTaget.setErrors({ duplicateArray: { duplicateArray: messageKey } });\r\n            controlTaget.markAsTouched();\r\n          } else {\r\n            (map as any)[k] = true;\r\n            // fix bug khi xoa row dau khi bi duplicate\r\n            if (controlTaget.hasError('duplicateArray')) {\r\n              controlTaget.setErrors(null);\r\n              controlTaget.markAsUntouched();\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n  // Hàm xử lý validate bắt buộc nhập các trường còn lại nếu có 1 trường trong danh sách được nhập\r\n  public static requiredIfHaveOne(control: AbstractControl): any {\r\n    let isRequire = false;\r\n    const group = control.parent as FormGroup;\r\n    Object.keys(group.controls).forEach(key => {\r\n      const controlEl = group.get(key) as BaseControl;\r\n      if (controlEl.propertyName !== (control as BaseControl).propertyName) {\r\n        if (controlEl.listValidation) {\r\n          for (const f of controlEl.listValidation) {\r\n            const fn = f as ValidatorFn;\r\n            if (fn === ValidationService.requiredIfHaveOne && controlEl.value) {\r\n              isRequire = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (isRequire && !control.value) {\r\n      return { requiredIfHaveOne: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Xu ly neu nhu co gia tri tai truong hien tai thi validate bat buoc nhap tai truong duoc set\r\n   * @param controlKeys Ten truong bat buoc nhap\r\n   */\r\n  public static ifHaveOneIsRequired(controlKeys: string): ValidatorFn | any{\r\n    return (c: AbstractControl): any | null => {\r\n      const group = c.parent as FormGroup;\r\n      const controlRequired = group.get(controlKeys) as FormControl;\r\n      if (c.value !== null && c.value.toString().length > 0) { //  vi co th value = []\r\n        if (controlRequired.value === null || controlRequired.value === '') {\r\n          controlRequired.setErrors({ ifHaveOneIsRequired: true });\r\n          controlRequired.markAsTouched();\r\n        } else {\r\n          if (controlRequired.hasError('ifHaveOneIsRequired')) {\r\n            controlRequired.setErrors(null);\r\n            controlRequired.markAsUntouched();\r\n          }\r\n        }\r\n      } else {\r\n        if (controlRequired.hasError('ifHaveOneIsRequired')) {\r\n          controlRequired.setErrors(null);\r\n          controlRequired.markAsUntouched();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Xu ly bat buoc nhap truong hien tai khi truong truyen vao co gia tri\r\n   * @param controlKeys Ten truong nhap gia tri\r\n   */\r\n  public static isRequiredIfHaveOne(controlKeys: string): ValidatorFn | any{\r\n    return (c: AbstractControl): any | null => {\r\n      const group = c.parent as FormGroup;\r\n      const controlHaveOne = group.get(controlKeys) as FormControl;\r\n      if (c.value === null || c.value === '') {\r\n        if (controlHaveOne && (controlHaveOne.value === null || controlHaveOne.value.toString().length === 0)) { //  vi co th value = []\r\n          return null;\r\n        } else {\r\n          return { ifHaveOneIsRequired: true };\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * validate array form requird\r\n   * Neu ko nhap truong nao thi ko validate, khi nhap 1 trong cac truong  thi bat buoc nhap tat ca cac truong cau hinh\r\n   */\r\n  public static requiredControlInGroup(controlKeys: Array<string>, controlKeysIgnore?: Array<string>): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      let checkExitsValue = false;\r\n      Object.keys(group.controls).forEach(key => {\r\n        if (controlKeysIgnore && controlKeysIgnore.includes(key)) {\r\n          return true;\r\n        }\r\n        const controlEl = group.get(key) as BaseControl;\r\n        if (!(controlEl.value === null || controlEl.value === '' || !controlEl.value)) {\r\n          checkExitsValue = true;\r\n        }\r\n        return false;\r\n      });\r\n      controlKeys.forEach(key => {\r\n        const formControl = group.controls[key];\r\n        if (checkExitsValue) {\r\n          if (formControl.value === null || formControl.value === '') {\r\n            formControl.setErrors({ requiredControlInGroup: true });\r\n            // formControl.markAsTouched();\r\n          } else if (('' + formControl.value).trim() === '') {\r\n            formControl.setErrors({ requiredControlInGroup: true });\r\n            // formControl.markAsTouched();\r\n          } else {\r\n            if (formControl.hasError('requiredControlInGroup')) {\r\n              formControl.setErrors(null);\r\n              formControl.markAsUntouched();\r\n            }\r\n          }\r\n        } else {\r\n          if (formControl.hasError('requiredControlInGroup')) {\r\n            formControl.setErrors(null);\r\n            formControl.markAsUntouched();\r\n          }\r\n        }\r\n      });\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n  * Xu ly validate bat buoc nhap 1 truong trong danh sach cau hinh\r\n  */\r\n  public static justRequiredOneField(controlKeys: Array<string>): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      let checkExitsValue = false;\r\n      controlKeys.forEach(key => {\r\n        const controlEl = group.get(key) as BaseControl;\r\n        if (controlEl.value !== null && controlEl.value !== '') {\r\n          checkExitsValue = true;\r\n        }\r\n      });\r\n      controlKeys.forEach(key => {\r\n        const formControl = group.get(key) as BaseControl;\r\n        if (checkExitsValue) {\r\n          if (formControl.hasError('justRequiredOneField')) {\r\n            formControl.setErrors(null);\r\n            formControl.markAsUntouched();\r\n          }\r\n        } else {\r\n          if (!formControl.hasError('justRequiredOneField')) {\r\n            formControl.setErrors({ justRequiredOneField: true });\r\n            // formControl.markAsTouched();\r\n          }\r\n        }\r\n      });\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  public static positiveRealNumber(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.toString().trim().match(/^(([0-9]+)([\\.]([5]{1}))?)$/))\r\n      ? '' : { positiveRealNumber: true };\r\n  }\r\n\r\n  public static isRequiredIfHaveOneValue(controlKeys: string): ValidatorFn | any{\r\n    return (c: AbstractControl): any | null => {\r\n      const group = c.parent as FormGroup;\r\n      const controlHaveOne = group.get(controlKeys) as FormControl;\r\n      if (c.value === null || c.value == \"\" || c.value.toString().length === 0) {\r\n        if (controlHaveOne && (controlHaveOne.value === null || controlHaveOne.value === 0)) { //  vi co th value = []\r\n          return null;\r\n        } else {\r\n          return { ifHaveOneIsRequired: true };\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  public static isRequiredReason(sabbaticalLeaveId: string, addDay: string, subDay: string): ValidatorFn | any{\r\n    return (c: AbstractControl): any | null => {\r\n      const group = c.parent as FormGroup;\r\n      const controlSabbaticalLeaveId = group.get(sabbaticalLeaveId) as FormControl;\r\n      const controlAddAnuualDayLeave = group.get(addDay) as FormControl;\r\n      const controlSubAnuualDayLeave = group.get(subDay) as FormControl;\r\n      if (controlSabbaticalLeaveId.value) {\r\n        if (c.value === null || c.value === \"\") {\r\n          return null;\r\n        } else {\r\n          return { ifHaveOneIsRequired: true };\r\n        }\r\n      } else {\r\n        if (controlSabbaticalLeaveId.value == null) {\r\n          if (controlAddAnuualDayLeave.value != null || controlSubAnuualDayLeave.value != null) {\r\n            if (c.value === null || c.value === \"\") {\r\n              return null;\r\n            }\r\n          } else {\r\n            return { ifHaveOneIsRequired: true };\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  public static isHaveSabbaticalLeaveId(controlKeys: string): ValidatorFn | any{\r\n    return (c: AbstractControl): any | null => {\r\n      const group = c.parent as FormGroup;\r\n      const controlHaveOne = group.get(controlKeys) as FormControl;\r\n      if (controlHaveOne.value) {\r\n        if (c.value === null || c.value === \"\") {\r\n          return { ifHaveOneIsRequired: true };\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate number not greater than number (selector)\r\n   * @param targetKey: any\r\n   * @param toMatchKey: any\r\n   */\r\n  public static notGreater(targetKey: string, toMatchKey: string, labelMatchCode: string): ValidatorFn | any{\r\n    return (group: FormGroup): { [key: string]: any } | null => {\r\n      const target = group.controls[targetKey];\r\n      const toMatch = group.controls[toMatchKey];\r\n      if (target.hasError('numberNotGreater')) {\r\n        target.setErrors(null);\r\n        target.markAsUntouched();\r\n      }\r\n\r\n      if (target.value && toMatch.value) {\r\n        const isCheck = Number(target.value) <= Number(toMatch.value);\r\n        // set equal value error on dirty controls\r\n        if (!isCheck && target.valid && toMatch.valid) {\r\n          target.setErrors({ numberNotGreater: { numberNotGreater: labelMatchCode } });\r\n          target.markAsTouched();\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  /**\r\n  * validate beforeCurrentMonth\r\n  */\r\n  public static beforeCurrentMonth(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    const x = new Date().getMonth() + 1;\r\n    const y = new Date().getFullYear();\r\n    var date = new Date(control.value);\r\n    var month = date.getMonth() + 1;\r\n    var year = date.getFullYear();\r\n    var check = false;\r\n    if (year < y) {\r\n      check = true;\r\n    } else if (year == y && month <= x) {\r\n      check = true;\r\n    }\r\n    return (check == true)\r\n      ? '' : { beforeCurrentMonth: true };\r\n  }\r\n\r\n  public static afterCurrentMonth(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    const x = new Date().getMonth() + 1;\r\n    return (control.value >= x || x - control.value < 99999999)\r\n      ? '' : { afterCurrentMonth: true };\r\n  }\r\n\r\n  /**\r\n   * validate 9 or 12\r\n   */\r\n  public static lenght9or12(control: AbstractControl): any {\r\n    if (!control.value) { return; }\r\n    return (control.value.toString().trim().length == 9 || control.value.toString().trim().length == 12) ? '' : { lenght9or12: true };\r\n  }\r\n}\r\n\r\n\r\n","import { FormControl, ValidatorFn, Validators } from '@angular/forms';\r\nimport { SysPropertyDetailBean } from './sys-property-details.model';\r\nimport { INPUT_TYPE } from '../app-config';\r\nimport { CommonUtils } from '../services/common-utils.service';\r\nimport { ValidationService } from '../services/validation.service';\r\n\r\nexport class BaseControl extends FormControl {\r\n  public propertyName = '';\r\n  public actionForm = '';\r\n  public resource = '';\r\n  public css? = '';\r\n  public propertyConfig!: SysPropertyDetailBean;\r\n  public listValidation!: Array<ValidatorFn>;\r\n  public isHide? = false;\r\n  public isRequire? = false;\r\n  public dateFormat = CommonUtils.getDateFormat();\r\n  public isMultiLanguage? = false;\r\n  public type!: INPUT_TYPE; // text, number, text-area\r\n  public configBaseControl(propertyConfig?: any, oldValidator?: any, type?: INPUT_TYPE, ) {\r\n    if (type) {\r\n      this.type = type;\r\n    }\r\n    // Xu ly set mac dinh required neu khong co cau hinh trong database\r\n    if (oldValidator) {\r\n      if (typeof oldValidator === 'function') {\r\n        const val = oldValidator as ValidatorFn;\r\n        if ( val === ValidationService.required) {\r\n          this.isRequire = true;\r\n        }\r\n      } else {\r\n        for (const index in oldValidator) {\r\n          const val = oldValidator[index] as ValidatorFn;\r\n          if ( val === ValidationService.required) {\r\n            this.isRequire = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (propertyConfig) {\r\n      this.propertyConfig = propertyConfig;\r\n      this.isHide = this.propertyConfig.isHide;\r\n      this.isRequire = this.propertyConfig.isRequire;\r\n      this.isMultiLanguage = this.propertyConfig.isTranslation;\r\n      this.css = this.propertyConfig.css;\r\n      this.dateFormat = this.propertyConfig.dateFormat ? this.propertyConfig.dateFormat : this.dateFormat;\r\n      this.setType();\r\n    }\r\n    this.listValidation = ValidationService.getValidatorArr(oldValidator, this.propertyConfig);\r\n  }\r\n\r\n  public getPropertyConfig(): SysPropertyDetailBean {\r\n    return this.propertyConfig;\r\n  }\r\n  public getListValidation(): Array<ValidatorFn> {\r\n    return this.listValidation;\r\n  }\r\n  private setType(): void {\r\n    if (this.propertyConfig.moneyFormat) {\r\n      this.type = INPUT_TYPE.CURRENCY;\r\n      return;\r\n    }\r\n    if (this.propertyConfig.numberFormat) {\r\n      this.type = INPUT_TYPE.NUMBER;\r\n      return;\r\n    }\r\n    if (this.propertyConfig.dateFormat) {\r\n      this.type = INPUT_TYPE.DATE;\r\n      return;\r\n    }\r\n    // if (this.propertyConfig.maxLength >= 200) {\r\n    //   this.type = INPUT_TYPE.TEXT_AREA;\r\n    //   return;\r\n    // }\r\n    this.type = INPUT_TYPE.TEXT;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n  public ORGANIZATION = new BehaviorSubject<any>([]);\r\n  public APP_TOAST_MESSAGE = new BehaviorSubject<any>([]);\r\n  public APP_CONFIRM_DELETE = new BehaviorSubject(null);\r\n  public APP_SHOW_HIDE_LEFT_MENU = new BehaviorSubject<any>([]);\r\n  public APP_SHOW_PROCESSING = new BehaviorSubject<any>([]);\r\n  public EMPLOYEE_URL = new BehaviorSubject<any>([]);\r\n  public INSERT_WORK_PROCESS = new BehaviorSubject<any>([]);\r\n  public CHECK_WORK_PROCESS = new BehaviorSubject<any>([]);\r\n  public LANGUAGE_CHANGE: Subject<any> = new BehaviorSubject<any>(null);\r\n  public PROCESS_LOADER: Subject<any> = new BehaviorSubject<any>(null);\r\n  public MESSAGE_TOASTER: Subject<any> = new BehaviorSubject<any>(null);\r\n  public CONFIRM: Subject<any> = new BehaviorSubject<any>(null);\r\n  public LOAD_USER: Subject<any> = new BehaviorSubject<any>(null);\r\n  constructor() { }\r\n  /**\r\n   * afterSaveOrganization\r\n   * param data\r\n   */\r\n  afterSaveOrganization(data: any) {\r\n    this.ORGANIZATION.next(data);\r\n  }\r\n  /**\r\n   * createMessage\r\n   * param data\r\n   */\r\n  processReturnMessage(data: any) {\r\n    this.APP_TOAST_MESSAGE.next(data);\r\n  }\r\n  /**\r\n   * processing\r\n   * param data\r\n   */\r\n  isProcessing(isProcessing: boolean) {\r\n    this.APP_SHOW_PROCESSING.next(isProcessing);\r\n  }\r\n  /**\r\n   * confirmDelete\r\n   * param data\r\n   */\r\n  confirmDelete(data: any) {\r\n    this.APP_CONFIRM_DELETE.next(data);\r\n    // this.APP_CONFIRM_DELETE.pipe(data);\r\n  }\r\n\r\n  refreshConfirmDelete() {\r\n    this.APP_CONFIRM_DELETE = new BehaviorSubject(null)\r\n  }\r\n  /**\r\n   * Load lại cây đơn vị\r\n   */\r\n  reloadTreeOrganization(data: any) {\r\n    this.ORGANIZATION.next({type: 'RELOAD_TREE', data: data});\r\n  }\r\n\r\n  reloadGridOrganization(data: any) {\r\n    this.ORGANIZATION.next({type: 'RELOAD_GRID', data: data});\r\n  }\r\n  \r\n  resolveUrlEmployee(data: any) {\r\n    this.EMPLOYEE_URL.next(data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, } from '@angular/forms';\r\nimport { HrStorage } from './HrStorage';\r\nimport { HttpParams, HttpParameterCodec } from '@angular/common/http';\r\nimport { HelperService } from './helper.service';\r\nimport * as moment from 'moment';\r\nimport { Router } from '@angular/router';\r\nimport { SysPropertyDetailBean } from '../models/sys-property-details.model';\r\nimport { ACTION_FORM, CONFIG_DEFAULT, PERMISSION_CODE } from '../app-config';\r\nimport { BaseControl } from '../models/base.control';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommonUtils {\r\n    constructor(\r\n        private helperService: HelperService\r\n    ) {\r\n    }\r\n\r\n    public static isNullOrEmpty(str: any): boolean {\r\n        return !str || (str + '').trim() === '';\r\n    }\r\n\r\n    /**\r\n   * Hàm lấy DateFormat hiện tại theo MarketCompany. Ko có trả về mặc định\r\n   */\r\n    public static getDateFormat(): string {\r\n        const nationProperty = HrStorage.getSelectedMarket();\r\n        if (nationProperty === null || nationProperty === undefined || !nationProperty.dateFormat) {\r\n            return CONFIG_DEFAULT.dateFormat;\r\n        }\r\n        return nationProperty.dateFormat;\r\n    }\r\n\r\n\r\n    /**\r\n   * createFormNew use Dynamic Input\r\n   */\r\n    public static createFormNew(resource: string\r\n        , actionForm: ACTION_FORM\r\n        , formData: any\r\n        , options: any\r\n        , propConfigs?: Array<SysPropertyDetailBean>\r\n        , validate?: any): FormGroup {\r\n        const formGroup = new FormGroup({});\r\n        for (const property in options) {\r\n            const config = propConfigs && propConfigs.length > 0\r\n                ? propConfigs.filter(item => item.propertyCode === property && item.actionForm === actionForm)[0] : null;\r\n            const control = new BaseControl();\r\n            control.propertyName = property;\r\n            control.actionForm = actionForm;\r\n            control.resource = resource;\r\n            control.configBaseControl(config, options[property][1]);\r\n            control.setValue(options[property][0]);\r\n\r\n            if (formData.hasOwnProperty(property)) {\r\n                control.setValue(formData[property]);\r\n            }\r\n            control.setValidators(control.getListValidation());\r\n            formGroup.addControl(property, control);\r\n            formGroup.get(property)?.updateValueAndValidity();\r\n        }\r\n        if (validate) {\r\n            formGroup.setValidators(validate);\r\n        }\r\n        return formGroup;\r\n    }\r\n\r\n    /**\r\n   * convert To FormData mutilpart request post\r\n   */\r\n    public static convertFormFile(dataPost: any): FormData {\r\n        const filteredData = CommonUtils.convertData(dataPost);\r\n        const formData = CommonUtils.objectToFormData(filteredData, '', []);\r\n        return formData;\r\n    }\r\n    /**\r\n     * objectToFormData\r\n     */\r\n    public static objectToFormData(obj: any, rootName: any, ignoreList: any): FormData {\r\n        const formData = new FormData();\r\n        function appendFormData(data: any, root: any) {\r\n            if (!ignore(root)) {\r\n                root = root || '';\r\n                if (data instanceof File) {\r\n                    if (data.type !== 'x_stored_file') {\r\n                        formData.append(root, data);\r\n                    }\r\n                } else if (Array.isArray(data)) {\r\n                    let index = 0;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i] instanceof File) {\r\n                            if (data[i].type !== 'x_stored_file') {\r\n                                appendFormData(data[i], root + '[' + index + ']');\r\n                                index++;\r\n                            }\r\n                        } else {\r\n                            appendFormData(data[i], root + '[' + i + ']');\r\n                        }\r\n                    }\r\n                } else if (data && typeof data === 'object') {\r\n                    for (const key in data) {\r\n                        if (data.hasOwnProperty(key)) {\r\n                            if (root === '') {\r\n                                appendFormData(data[key], key);\r\n                            } else {\r\n                                appendFormData(data[key], root + '.' + key);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (data !== null && typeof data !== 'undefined') {\r\n                        formData.append(root, data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function ignore(root: any) {\r\n            return Array.isArray(ignoreList) && ignoreList.some(function (x) { return x === root; });\r\n        }\r\n\r\n        appendFormData(obj, rootName);\r\n        return formData;\r\n    }\r\n\r\n    /**\r\n   * convertData\r\n   */\r\n    public static convertData(data: any): any {\r\n        if (typeof data === typeof {}) {\r\n            return CommonUtils.convertDataObject(data);\r\n        } else if (typeof data === typeof []) {\r\n            return CommonUtils.convertDataArray(data);\r\n        } else if (typeof data === typeof true) {\r\n            return CommonUtils.convertBoolean(data);\r\n        }\r\n        return data;\r\n    }\r\n    /**\r\n     * convertDataObject\r\n     * param data\r\n     */\r\n    public static convertDataObject(data: Object): Object {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if ((data as any)[key] instanceof File) {\r\n\r\n                } else {\r\n                    (data as any)[key] = CommonUtils.convertData((data as any)[key]);\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    public static convertDataArray(data: Array<any>): Array<any> {\r\n        if (data && data.length > 0) {\r\n            for (const i in data) {\r\n                data[i] = CommonUtils.convertData(data[i]);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    public static convertBoolean(value: Boolean): number {\r\n        return value ? 1 : 0;\r\n    }\r\n\r\n    /**\r\n   * copyProperties\r\n   * param dest\r\n   * param orgs\r\n   */\r\n    public static buildParams(obj: any): HttpParams {\r\n        return Object.entries(obj || {})\r\n            .reduce((params, [key, value]) => {\r\n                if (value === null) {\r\n                    return params.set(key, String(''));\r\n                } else if (typeof value === typeof {}) {\r\n                    return params.set(key, JSON.stringify(value));\r\n                } else {\r\n                    return params.set(key, String(value));\r\n                }\r\n            }, new HttpParams({ encoder: new CustomEncoder() }));\r\n    }\r\n\r\n    public static buildParamsArray(obj: any): HttpParams {\r\n        return Object.entries(obj || {})\r\n            .reduce((params, [key, value]) => {\r\n                if (value === null) {\r\n                    return params.set(key, String(''));\r\n                } else if (typeof value === typeof {}) {\r\n                    if (Array.isArray(value)) {\r\n                        const temp = value as [];\r\n                        if (temp && temp.length > 0) {\r\n                            return temp.reduce((res, element, index) => {\r\n                                return res.set(`${key}[${index}]`, JSON.stringify(element))\r\n                            }, params)\r\n                        }\r\n                        return params;\r\n                    } else {\r\n                        return params.set(key, JSON.stringify(value));\r\n                    }\r\n                } else {\r\n                    return params.set(key, String(value));\r\n                }\r\n            }, new HttpParams({ encoder: new CustomEncoder() }));\r\n    }\r\n\r\n    /**\r\n   * validateForm\r\n   * @param form: FormGroup\r\n   */\r\n    public static isValidForm(form: any): boolean {\r\n        setTimeout(() => {\r\n            this.markAsTouched(form);\r\n        }, 200);\r\n\r\n        if (form.invalid) {\r\n            setTimeout(() => {\r\n                CommonUtils.scrollToSmoothly('.errorMessageDiv.show');\r\n            }, 200);\r\n        }\r\n        return !form.invalid;\r\n    }\r\n\r\n    public static offset(el: Element): any {\r\n        const rect = el.getBoundingClientRect(),\r\n            scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n            scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n    }\r\n\r\n    public static scrollToSmoothly(querySelectorAll: string, time?: number) {\r\n        const elements = document.querySelectorAll(querySelectorAll);\r\n        if (!elements) {\r\n            return;\r\n        }\r\n        const first = elements[0];\r\n        if (!first) {\r\n            return;\r\n        }\r\n        const position = CommonUtils.offset(first);\r\n        if (isNaN(position.top)) {\r\n            console.warn('Position must be a number');\r\n            return;\r\n        }\r\n        if (position.top < 0) {\r\n            console.warn('Position can not be negative');\r\n            return;\r\n        }\r\n        let top = position.top - 100;\r\n        const currentPos = window.scrollY || window.screenTop;\r\n        if (currentPos > position.top) {\r\n            top = position.top + 100;\r\n        }\r\n        try {\r\n            window.scrollTo({ left: 0, top: top, behavior: 'smooth' });\r\n        } catch (e) {\r\n            window.scrollTo(0, top);\r\n        }\r\n    }\r\n\r\n    public static markAsTouched(form: any) {\r\n        if (form instanceof FormGroup) {\r\n            CommonUtils.isValidFormGroup(form);\r\n        } else if (form instanceof FormArray) {\r\n            CommonUtils.isValidFormArray(form);\r\n        } else if (form instanceof FormControl) {\r\n            form.markAsTouched({ onlySelf: true });\r\n            if (form.invalid) {\r\n                console.warn('Validate error field:', form);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static isValidFormArray(form: FormArray) {\r\n        if ((form as any)['isHidden'] === true) {// neu form đang bị ẩn thì không cần validate\r\n            return;\r\n        }\r\n        for (const i in form.controls) {\r\n            CommonUtils.markAsTouched(form.controls[i]); // neu form đang bị ẩn thì không cần validate\r\n        }\r\n    }\r\n    public static isValidFormGroup(form: FormGroup) {\r\n        if ((form as any)['isHidden'] === true) {\r\n            return;\r\n        }\r\n        Object.keys(form.controls).forEach(key => {\r\n            CommonUtils.markAsTouched(form.get(key));\r\n        });\r\n    }\r\n\r\n    /**\r\n   * convertData\r\n   */\r\n    public convertData(data: any): any {\r\n        if (typeof data === typeof {}) {\r\n            return data;\r\n        } else if (typeof data === typeof []) {\r\n            return this.convertDataArray(data);\r\n        } else if (typeof data === typeof true) {\r\n            return this.convertBoolean(data);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public convertDataArray(data: Array<any>): Array<any> {\r\n        if (data && data.length > 0) {\r\n            // tslint:disable-next-line: forin\r\n            for (const i in data) {\r\n                data[i] = this.convertData(data[i]);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    public convertBoolean(value: boolean): number {\r\n        return value ? 1 : 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * copyProperties\r\n     * param dest\r\n     * param orgs\r\n     */\r\n    public buildParams(obj: any): HttpParams {\r\n        return Object.entries(obj || {})\r\n            .reduce((params, [key, value]) => {\r\n                if (value === null) {\r\n                    return params.set(key, String(''));\r\n                } else if (typeof value === typeof {}) {\r\n                    if (Array.isArray(value)) {\r\n                        return params.set(key, value.join());\r\n                    } else {\r\n                        return params.set(key, JSON.stringify(value));\r\n                    }\r\n                } else {\r\n                    return params.set(key, String(value));\r\n                }\r\n            }, new HttpParams());\r\n    }\r\n\r\n    public toastMessage(severity: 'success' | 'info' | 'warn' | 'error', code: string, data?: string): void {\r\n        this.helperService.MESSAGE_TOASTER.next({\r\n            severity,\r\n            code,\r\n            value: data\r\n        });\r\n    }\r\n\r\n    /**\r\n   * convert To FormData mutilpart request post\r\n   */\r\n    public convertFormFile(dataPost: any): FormData {\r\n        const filteredData = this.convertData(dataPost);\r\n        const formData = this.objectToFormData(filteredData, '', []);\r\n        return formData;\r\n    }\r\n    /**\r\n     * objectToFormData\r\n     */\r\n    public objectToFormData(obj: any, rootName: any, ignoreList: any): FormData {\r\n        const formData = new FormData();\r\n        function appendFormData(data: any, root: any): void {\r\n            if (!ignore(root)) {\r\n                root = root || '';\r\n                if (data instanceof File) {\r\n                    if (data.type !== 'stored_file') {\r\n                        formData.append(root, data);\r\n                    }\r\n                } else if (Array.isArray(data)) {\r\n                    let index = 0;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i] instanceof File) {\r\n                            if (data[i].type !== 'stored_file') {\r\n                                appendFormData(data[i], root + '[' + index + ']');\r\n                                index++;\r\n                            }\r\n                        } else {\r\n                            appendFormData(data[i], root + '[' + i + ']');\r\n                        }\r\n                    }\r\n                } else if (data && typeof data === 'object') {\r\n                    for (const key in data) {\r\n                        if (data.hasOwnProperty(key)) {\r\n                            if (root === '') {\r\n                                appendFormData(data[key], key);\r\n                            } else {\r\n                                appendFormData(data[key], root + '.' + key);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (data !== null && typeof data !== 'undefined') {\r\n                        formData.append(root, data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function ignore(root: any): any {\r\n            return Array.isArray(ignoreList) && ignoreList.some(x => x === root);\r\n        }\r\n\r\n        appendFormData(obj, rootName);\r\n        return formData;\r\n    }\r\n\r\n    public static isSuccessRequest(res: any) {\r\n        return res && res.type === 'SUCCESS';\r\n    }\r\n\r\n    public static dateToString(date: Date) {\r\n        return moment(date).format('DD/MM/YYYY');\r\n    }\r\n\r\n    public static logoutAction(router: Router) {\r\n        HrStorage.clear();\r\n        router.navigate(['/auth/login']);\r\n    }\r\n\r\n    /**\r\n   * getPermissionCode\r\n   * @param code: string\r\n   */\r\n  public static getPermissionCode(code: string): string {\r\n    return PERMISSION_CODE[code] || '';\r\n  }\r\n\r\n    /**\r\n   * has Permission\r\n   */\r\n  public static havePermission(operationKey: string, adResourceKey: string): boolean {\r\n    const permissionCode = this.getPermissionCode(adResourceKey) + '__' + this.getPermissionCode(operationKey);\r\n    const userInfo = HrStorage.getUserToken();\r\n    if (userInfo == null) {\r\n      return false;\r\n    }\r\n\r\n    // if (!userInfo.userId) {\r\n    //   return false;\r\n    // }\r\n\r\n    const userPermissionList = userInfo.userPermissionList;\r\n    if (userPermissionList == null || userPermissionList.length <= 0) {\r\n      return false;\r\n    }\r\n\r\n    for (const userPermission of userPermissionList) {\r\n      if (userPermission.permission === permissionCode) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public static setWidthDiaglog(defaultValue: string) {\r\n    var isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i)\r\n    return isMobile ? '90%' : defaultValue;\r\n  }\r\n}\r\n\r\nclass CustomEncoder implements HttpParameterCodec {\r\n    encodeKey(key: string): string {\r\n        return encodeURIComponent(key);\r\n    }\r\n\r\n    encodeValue(value: string): string {\r\n        return encodeURIComponent(value);\r\n    }\r\n\r\n    decodeKey(key: string): string {\r\n        return decodeURIComponent(key);\r\n    }\r\n\r\n    decodeValue(value: string): string {\r\n        return decodeURIComponent(value);\r\n    }\r\n}","import { Component, Injectable, Inject, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CommonUtils } from '../../services/common-utils.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ConfirmationService, MessageService, ConfirmEventType } from 'primeng/api';\r\nimport { Injector } from '@angular/core';\r\nimport { L10N_LOCALE } from 'angular-l10n';\r\nimport { ACTION_FORM, INPUT_TYPE } from '../../app-config';\r\nimport { SysPropertyDetailBean } from '../../models/sys-property-details.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-base-component',\r\n  templateUrl: './base-component.component.html',\r\n})\r\n\r\n@Injectable()\r\nexport class BaseComponent {\r\n  public actionForm: ACTION_FORM = ACTION_FORM.VIEW;\r\n  public resource = '';\r\n  public propertyConfigs = new Array<SysPropertyDetailBean>();\r\n  public confirmationService: ConfirmationService;\r\n  public commonUtil: CommonUtils;\r\n   \r\n  locale = inject(L10N_LOCALE);\r\n  INPUT_TYPE = INPUT_TYPE;\r\n  constructor(public injector: Injector\r\n    , public actr?: ActivatedRoute\r\n    , @Inject('isFactory') private _resource?: string\r\n    , actionForm?: ACTION_FORM) {\r\n    this.confirmationService = injector.get(ConfirmationService);\r\n    this.commonUtil = injector.get(CommonUtils);\r\n    if (actionForm) {\r\n      this.actionForm = actionForm;\r\n    }\r\n    if (_resource) {\r\n      this.resource = _resource;\r\n    }\r\n    // this.findPropertyDetails();\r\n    // this.getPermissions();\r\n  }\r\n\r\n\r\n  /**\r\n   * Build FormGroup\r\n   * @param formData value of controls (Ex: data)\r\n   * @param formConfig object formConfig (Ex: formConfig)\r\n   * @param actionForm action of this Form (Ex: ACTION_FORM.INSERT)\r\n   * @param validateForm validate of FormGroup\r\n   */\r\n  public buildForm(formData: any, formConfig: any, actionForm?: ACTION_FORM, validateForm?: any,): FormGroup {\r\n    if (actionForm) {\r\n      this.actionForm = actionForm;\r\n      // console.log('ActionForm is being built ->', this.actionForm);\r\n    }\r\n    return CommonUtils.createFormNew(this.resource, this.actionForm, formData, formConfig, this.propertyConfigs, validateForm);\r\n  }\r\n\r\n  /**\r\n   * confirmMessage\r\n   */\r\n  confirmMessage(messageCode: string, accept: Function, reject: Function) {\r\n    const message = messageCode || 'Confirm Message';\r\n    const header = 'Xác nhận';\r\n    const btnSave = 'Đồng ý';\r\n    const btnCancel = 'Hủy';\r\n    this.confirmationService.confirm({\r\n      message: message,\r\n      header: header,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: accept,\r\n      reject: reject,\r\n      acceptLabel: btnSave,\r\n      rejectLabel: btnCancel\r\n    });\r\n  }\r\n\r\n  requestIsSuccess(res: any) {\r\n    return res && res.type == 'SUCCESS';\r\n  }\r\n\r\n  havePermission(action: string, resource: string) {\r\n    return CommonUtils.havePermission(action, resource);\r\n  }\r\n}\r\n","<p>base-component works!</p>\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    \n  ],\n  exports: [\n  ]\n})\nexport class SharedDirectiveModule { }\n","import { ReactiveFormsModule, NG_VALIDATORS, FormsModule, FormGroup, FormControl, ValidatorFn, Validator} from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'input[type=\"text\"],input[type=\"email\"],input[type=\"tel\"],input:not([othertype=\"url\"]),textarea',\r\n  providers: [\r\n    {\r\n     provide: NG_VALIDATORS,\r\n     useExisting: InputSpecialDirective,\r\n     multi: true\r\n    }\r\n   ]\r\n})\r\nexport class InputSpecialDirective implements Validator {\r\n  private _type = '';\r\n  private _othertype = '';\r\n  private _onChange!: Function;\r\n\r\n  @Input()\r\n  set type(value: string) {\r\n    this._type = value;\r\n  }\r\n  @Input()\r\n  set othertype(value: string) {\r\n    this._othertype = value;\r\n  }\r\n  validator: ValidatorFn | any;\r\n\r\n  constructor() {\r\n    this.validator = this.validateSpecialCharecter();\r\n  }\r\n\r\n  validate(c: FormControl) {\r\n   return this.validator(c);\r\n  }\r\n\r\n  validateSpecialCharecter() {\r\n    return (c: FormControl) => {\r\n      const text = c.value;\r\n      if (text && (this._type === 'text' || this._type === 'email' || this._type === 'tel') && !this._othertype) {\r\n        const iChars = '!#$^*[]\\\\{}\\\"?<>\\'';\r\n        for (let j = 0; j < text.length; j++) {\r\n          if (iChars.indexOf(text.charAt(j)) >= 0) {\r\n              return { isValidInput: true };\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._onChange = fn;\r\n  }\r\n}\r\n","import { Directive, ElementRef, AfterViewInit, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[autoFocus]'\r\n})\r\nexport class AutoFocusDirective implements AfterViewInit {\r\n  private _value: any;\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  @Input()\r\n  set autoFocus(value: any) {\r\n    this._value = value;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n    if (this._value) {\r\n        this.el.nativeElement.focus();\r\n      }\r\n    }, 400);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl, ValidationErrors } from '@angular/forms';\r\nimport { L10nTranslationService } from 'angular-l10n';\r\n// import { TranslationService } from 'angular-l10n';\r\n@Component({\r\n  selector: 'app-control-messages',\r\n  templateUrl: './control-messages.component.html',\r\n  styleUrls: ['./control-messages.component.scss'],\r\n})\r\nexport class ControlMessagesComponent {\r\n  @Input()\r\n  public control!: FormControl;\r\n  @Input()\r\n  public labelName?: string;\r\n  // tslint:disable-next-line: max-line-length\r\n  private replaceKeys = ['max', 'min', 'maxlength', 'minlength', 'dateNotAffter', 'dateNotBefore', 'duplicateArray', 'beforeCurrentDate', 'required', 'numberNotGreater'];\r\n  // tslint:disable-next-line: max-line-length\r\n  private actualKeys = ['max', 'min', 'requiredLength', 'requiredLength', 'dateNotAffter', 'dateNotBefore', 'duplicateArray', 'beforeCurrentDate', 'required', 'numberNotGreater'];\r\n  private translateKeys = ['dateNotAffter', 'dateNotBefore', 'cannotContainSpace', 'duplicateArray', 'beforeCurrentDate', 'required', 'numberNotGreater'];\r\n\r\n  constructor(\r\n    public translation: L10nTranslationService\r\n  ) { }\r\n\r\n  get errorMessage(): string {\r\n    for (const propertyName in this.control.errors) {\r\n      if (this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\r\n        const messageText = this.translation.translate(`validate.${propertyName}`);\r\n        // const messageText = `validate.${propertyName}`;\r\n        const errors = this.control.errors[propertyName];\r\n        return this.buildMessage(messageText, errors);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  markAsUntouched() {\r\n    this.control.markAsUntouched();\r\n  }\r\n  /**\r\n   * buildMessage\r\n   * @param messageText: string\r\n   * @param errors: ValidationErrors\r\n   */\r\n  buildMessage(messageText: string, errors: ValidationErrors): string {\r\n    for (const i in this.replaceKeys) {\r\n      if (errors && errors.hasOwnProperty(this.actualKeys[i])) {\r\n        let text = errors[this.actualKeys[i]];\r\n        if (this.translateKeys.indexOf(this.actualKeys[i]) !== -1) {\r\n          text = this.translation.translate(text);\r\n          // text = text;\r\n        }\r\n        messageText = messageText.replace(new RegExp('\\\\$\\\\{' + this.replaceKeys[i] + '\\\\}', 'g'), text);\r\n      }\r\n    }\r\n    return messageText;\r\n  }\r\n}\r\n","<div class=\"errorMessageDiv\" [ngClass]=\"{'show': errorMessage !== undefined}\">\r\n  <small *ngIf=\"errorMessage !== undefined\" (click)=\"markAsUntouched()\" class=\"text-danger errorMessage\">\r\n    {{ errorMessage }}\r\n  </small>\r\n</div>\r\n","import { Directive, ElementRef, HostListener, Inject, Input, Optional, Renderer2 } from '@angular/core';\r\nimport { COMPOSITION_BUFFER_MODE, ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: 'input[type=\"text\"], textarea[]',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: InputTrimDirective, multi: true }]\r\n})\r\nexport class InputTrimDirective implements ControlValueAccessor {\r\n  // Get a value of the trim attribute if it was set.\r\n  @Input() trim: string = '';\r\n\r\n  @Input()\r\n  set type(value: string) {\r\n    this._type = value || 'text';\r\n  }\r\n\r\n  /**\r\n   * Keep the type of input element in a cache.\r\n   *\r\n   */\r\n  private _type = 'text';\r\n\r\n  /**\r\n   * Keep the value of input element in a cache.\r\n   *\r\n   */\r\n  private _value: string = '';\r\n\r\n  // Source services to modify elements.\r\n  private _sourceRenderer: Renderer2;\r\n  private _sourceElementRef: ElementRef;\r\n\r\n  /**\r\n   * Updates the value on the blur event.\r\n   */\r\n  @HostListener('blur', ['$event.type', '$event.target.value'])\r\n  onBlur(event: string, value: string): void {\r\n    this.updateValue(event, value.trim());\r\n    this.onTouched();\r\n  }\r\n\r\n  /**\r\n   * Updates the value on the input event.\r\n   */\r\n  @HostListener('input', ['$event.type', '$event.target.value'])\r\n  onInput(event: string, value: string): void {\r\n    this.updateValue(event, value);\r\n  }\r\n\r\n  onChange = (_: any) => {};\r\n\r\n  onTouched = () => {};\r\n\r\n  constructor(\r\n    @Inject(Renderer2) renderer: Renderer2,\r\n    @Inject(ElementRef) elementRef: ElementRef,\r\n    @Optional() @Inject(COMPOSITION_BUFFER_MODE) compositionMode: boolean\r\n  ) {\r\n    this._sourceRenderer = renderer;\r\n    this._sourceElementRef = elementRef;\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => void): void { this.onTouched = fn; }\r\n\r\n  /**\r\n   * Writes a new value to the element based on the type of input element.\r\n   *\r\n   */\r\n  public writeValue(value: any): void {\r\n    //\r\n    // The Template Driven Form doesn't automatically convert undefined values to null. We will do,\r\n    // keeping an empty string as string because the condition `'' || null` returns null what\r\n    // could change the initial state of a model.\r\n    // The Reactive Form does it automatically during initialization.\r\n    //\r\n    // SEE: https://github.com/anein/angular2-trim-directive/issues/18\r\n    //\r\n    this._value = value;\r\n\r\n    this._sourceRenderer.setProperty(this._sourceElementRef.nativeElement, 'value', this._value);\r\n\r\n    // a dirty trick (or magic) goes here:\r\n    // it updates the element value if `setProperty` doesn't set a new value for some reason.\r\n    //\r\n    // SEE: https://github.com/anein/angular2-trim-directive/issues/9\r\n    //\r\n    if (this._type !== 'text') {\r\n      this._sourceRenderer.setAttribute(this._sourceElementRef.nativeElement, 'value', this._value);\r\n    }\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._sourceRenderer.setProperty(this._sourceElementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  /**\r\n   * Trims an input value, and sets it to the model and element.\r\n   *\r\n   */\r\n  private updateValue(event: string, value: string): void {\r\n    // check if the user has set an optional attribute, and Trimmmm!!! Uhahahaha!\r\n    value = event === 'input' ? value : value.trim();\r\n\r\n    const previous = this._value;\r\n\r\n    // write value to the element.\r\n    this.writeValue(value);\r\n\r\n    // Update the model only on getting new value, and prevent firing\r\n    // the `dirty` state when click on empty fields.\r\n    //\r\n    // SEE:\r\n    //    https://github.com/anein/angular2-trim-directive/issues/17\r\n    //    https://github.com/anein/angular2-trim-directive/issues/35\r\n    //    https://github.com/anein/angular2-trim-directive/issues/39\r\n    //\r\n    if ((this._value || previous) && this._value.trim() !== previous) {\r\n      this.onChange(this._value);\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { INPUT_TYPE } from '../../app-config';\r\nimport { BaseControl } from '../../models/base.control';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.scss']\r\n})\r\nexport class TextInputComponent {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n  // style for wrap\r\n  @Input()\r\n  public wrapClass!: string;\r\n  // type of input: TEXT, TEXT-AREA, ...\r\n  @Input()\r\n  public type = INPUT_TYPE.TEXT;\r\n  // max length of input\r\n  @Input()\r\n  public maxLength!: number;\r\n  // rows number of text-area\r\n  @Input()\r\n  public rows!: number;\r\n  // title for lable\r\n  @Input()\r\n  public labelValue!: string;\r\n  // placeHolder\r\n  @Input()\r\n  public placeholder: string = '';\r\n   // input auto focus or not\r\n   @Input()\r\n   public autofocus!: string;\r\n  @Input()\r\n  public disabled: boolean = false;\r\n\r\n  @Input()\r\n  public required: boolean = false;\r\n\r\n  // input just allow view\r\n  @Input()\r\n  public readonly!: string;\r\n  \r\n  @Output() onChange = new EventEmitter<any>();\r\n\r\n  @Output() onBlur = new EventEmitter<any>();\r\n  showPassword: boolean = false;\r\n  onBlurMethod(event: Event) {\r\n    const newValue = (event.target as HTMLInputElement).value?.trim();\r\n    this.onBlur.emit(newValue);\r\n  }\r\n\r\n  onChangeMethod(event: Event) {\r\n    const newValue = (event.target as HTMLInputElement).value;\r\n    this.property.setValue(newValue);\r\n    this.property.markAsTouched();\r\n    this.onChange.emit(newValue);\r\n  }\r\n}\r\n","<div class=\"field\" [ngSwitch]=\"type\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire || required}\">{{ labelValue }}</label>\n    <ng-template [ngSwitchCase]=\"'text-area'\">\n        <textarea autoFocus=\"autoFocus\"\n            [formControl]=\"property\"\n            [maxlength]=\"maxLength\"\n            [autoFocus]=\"autofocus\"\n            [placeholder]=\"placeholder\"\n            [rows]=\"rows\"\n            [attr.disabled]=\"disabled ? true : null\"\n            [readonly]=\"readonly\"\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\n            (blur)=\"property.markAsTouched(); onBlurMethod($event);\"\n            (input)=\"onChangeMethod($event)\"\n            >\n        </textarea>\n    </ng-template>\n    <!-- <ng-template [ngSwitchCase]=\"'number'\">\n        <p-inputNumber inputId=\"integeronly\" [(ngModel)]=\"value1\">\n        </p-inputNumber>\n    </ng-template> -->\n    <ng-template [ngSwitchCase]=\"'password'\">\n        <span class=\"p-input-icon-right w-100\">\n            <i [class]=\"showPassword ? 'pi pi-eye-slash' : 'pi pi-eye'\" (click)=\"showPassword = !showPassword\"></i>\n            <input *ngIf=\"!showPassword\" type=\"password\" [formControl]=\"property\" [placeholder]=\"placeholder\"\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\n            <input *ngIf=\"showPassword\" type=\"text\" [formControl]=\"property\" [placeholder]=\"placeholder\"\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\n        </span>\n    </ng-template>\n    <ng-template ngSwitchDefault>\n        <input type=\"text\" autoFocus=\"autoFocus\"\n            [formControl]=\"property\"\n            [maxlength]=\"maxLength\"\n            [autoFocus]=\"autofocus\"\n            [placeholder]=\"placeholder\"\n            [attr.disabled]=\"disabled ? true : null\"\n            [readonly]=\"readonly\"\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\n            (blur)=\"property.markAsTouched(); onBlurMethod($event);\"\n            (input)=\"onChangeMethod($event)\"\n            >\n    </ng-template>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BaseControl } from '../../models/base.control';\r\n\r\n@Component({\r\n  selector: 'app-drop-down',\r\n  templateUrl: './drop-down.component.html',\r\n  styleUrls: ['./drop-down.component.scss']\r\n})\r\nexport class DropDownComponent {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n\r\n  @Input()\r\n  public options: Array<any> = [];\r\n\r\n  @Input()\r\n  public optionLabel: string = '';\r\n\r\n  @Input()\r\n  public optionValue: string = '';\r\n\r\n  @Input()\r\n  public labelValue: string = '';\r\n\r\n  @Input()\r\n  public showClear: boolean = true;\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  _onChange(event: EventEmitter<any>) {\r\n    this.onChange.emit(event);\r\n  }\r\n}\r\n","<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <p-dropdown\n        [formControl]=\"property\"\n        [options]=\"options\"\n        [optionLabel]=\"optionLabel\"\n        [optionValue]=\"optionValue\"\n        [filter]=\"true\"\n        [autoDisplayFirst]=\"false\"\n        [filterBy]=\"optionLabel\"\n        [showClear]=\"showClear\"\n        appendTo=\"body\"\n        class=\"inline-block w-full\"\n        emptyFilterMessage=\"Không tìm thấy dữ liệu\"\n        emptyMessage=\"Không tìm thấy dữ liệu\"\n        (onChange)=\"_onChange($event)\"></p-dropdown>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>","import { AfterViewInit, Component, EventEmitter, Injector, Input, Output } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\n\r\n@Component({\r\n  selector: 'app-org-tree',\r\n  templateUrl: './org-tree.component.html',\r\n  styleUrls: ['./org-tree.component.scss']\r\n})\r\nexport class OrgTreeComponent implements AfterViewInit{\r\n  @Input()\r\n  public orgService!: any;\r\n\r\n  @Output()\r\n  public onSelectNode: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  orgTree!: TreeNode[];\r\n  loading: boolean = false;\r\n  constructor(\r\n    private _injector: Injector,\r\n    public dialogService: DialogService,\r\n    // public orgService: OrganizationService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.loading = true;\r\n    this.orgService.initOrgTree().subscribe((res: any) => {\r\n      this.orgTree = res?.data;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  nodeExpand(event: any) {\r\n    if (!!event.node.children) {\r\n      return;\r\n    }\r\n    if (event.node) {\r\n      this.loading = true;\r\n      setTimeout(() => {\r\n        this.orgService.getChildOrg(event.node.key).subscribe((res: any) => {\r\n          event.node.children = res.data;\r\n        });\r\n        this.loading = false;\r\n        // this.cd.markForCheck();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  nodeSelect(event: any) {\r\n    this.onSelectNode.emit(event.node);\r\n  }\r\n\r\n}\r\n","<p-tree class=\"w-full md:w-30rem\" [value]=\"orgTree\" selectionMode=\"single\" [loading]=\"loading\"\n    (onNodeExpand)=\"nodeExpand($event)\" (onNodeSelect)=\"nodeSelect($event)\"></p-tree>","import { Component, Injector } from '@angular/core';\r\nimport { L10nTranslationService } from 'angular-l10n';\r\nimport { DialogService, DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BaseService } from '../../services/basic.service';\r\n\r\n@Component({\r\n  selector: 'app-org-selector-dialog',\r\n  templateUrl: './org-selector-dialog.component.html',\r\n  styleUrls: ['./org-selector-dialog.component.scss']\r\n})\r\nexport class OrgSelectorDialogComponent extends BaseComponent {\r\n  formConfig = {\r\n    id: [''],\r\n    code: [''],\r\n    name: [''],\r\n  };\r\n  dataTable: any = {};\r\n  selectedOrg = null;\r\n  formSearch: FormGroup;\r\n  orgService: BaseService;\r\n  constructor(\r\n    private _injector: Injector,\r\n    public dialogService: DialogService,\r\n    public translate: L10nTranslationService,\r\n    // public orgService: OrganizationService,\r\n    public dynamicDialogRef: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n  ) {\r\n    super(_injector);\r\n    this.formSearch = this.buildForm({}, this.formConfig);\r\n    this.orgService = this.config.data?.orgService;\r\n    this.doSearchOrg();\r\n  }\r\n\r\n  doSearchOrg(event?: any) {\r\n    if (!event) {\r\n      event = { rows: 10, resetTable: true };\r\n    }\r\n    this.orgService.search(this.formSearch.value, event)\r\n      .subscribe((res: any) => {\r\n        this.dataTable = res?.data || [];\r\n      });\r\n  }\r\n\r\n  onRowSelect(event: any) {\r\n    if (!!event.data) {\r\n      this.dynamicDialogRef.close(event.data);\r\n    }\r\n  }\r\n\r\n  onSelectNode(event: any) {\r\n    console.log(' >>> onSelectNode', event)\r\n    this.f['id'].setValue(event.key);\r\n    this.doSearchOrg();\r\n  }\r\n\r\n  get f() {\r\n    return this.formSearch.controls;\r\n  }\r\n}\r\n","<div class=\"grid\">\r\n    <div class=\"md:col-4 col-12\">\r\n        <p-panel>\r\n            <ng-template pTemplate=\"header\" class=\"block\">\r\n                <div class=\"flex justify-content-between flex-wrap\">\r\n                    <b class=\"flex align-items-center\">{{ 'mngOrganization.organization.treeTitle' | translateAsync\r\n                        }}</b>\r\n                </div>\r\n            </ng-template>\r\n            <div>\r\n                <app-org-tree (onSelectNode)=\"onSelectNode($event)\" [orgService]=\"orgService\"/>\r\n            </div>\r\n        </p-panel>\r\n    </div>\r\n    <div class=\"md:col-8 col-12\">\r\n        <div class=\"grid\">\r\n            <app-text-input class=\"mr-3 md:col-8 col-12\" [placeholder]=\"'Đơn vị'\" [property]=\"f['name']\"></app-text-input>\r\n            <p-button icon=\"pi pi-search\" class=\"md:col-3 col-12\" [label]=\"'common.label.search' | translateAsync\" (onClick)=\"doSearchOrg()\"></p-button>\r\n        </div>\r\n        <div>\r\n            <p-table [value]=\"dataTable?.data\" [paginator]=\"dataTable?.data && dataTable?.data?.length\" [rows]=\"10\"\r\n                styleClass=\"p-datatable-sm\" [lazy]=\"true\" [totalRecords]=\"dataTable?.recordsTotal\"\r\n                (onLazyLoad)=\"doSearchOrg($event)\"\r\n                [showCurrentPageReport]=\"true\"\r\n                selectionMode=\"single\"\r\n                (onRowSelect)=\"onRowSelect($event)\"\r\n                currentPageReportTemplate=\"Tìm thấy {totalRecords} kết quả, hiển thị từ {first} - {last}\">\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th style=\"width: 5%;\">STT</th>\r\n                        <th style=\"width: 15%\">\r\n                            {{ 'mngOrganization.organization.code' | translateAsync }}\r\n                        </th>\r\n                        <th style=\"width: 30%\">\r\n                            {{ 'mngOrganization.organization.name' | translateAsync }}\r\n                        </th>\r\n                        <th style=\"width: 20%\">\r\n                            {{ 'mngOrganization.organization.establishDate' | translateAsync }}\r\n                        </th>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item let-index=\"rowIndex\">\r\n                    <tr [pSelectableRow]=\"item\">\r\n                        <td><span class=\"p-column-title\">STT</span>{{ index + 1 }}</td>\r\n                        <td><span class=\"p-column-title\">{{ 'mngOrganization.organization.code' | translateAsync }}</span>{{ item.code }}</td>\r\n                        <td><span class=\"p-column-title\">{{ 'mngOrganization.organization.name' | translateAsync }}</span>{{ item.name }}</td>\r\n                        <td><span class=\"p-column-title\">{{ 'mngOrganization.organization.establishDate' | translateAsync }}</span>{{ item.establishDate | date:'dd/MM/yyyy' }}</td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"6\">{{ 'common.table.dataNotFound' | translateAsync }}</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, EventEmitter, Injector, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { OrgSelectorDialogComponent } from '../org-selector-dialog/org-selector-dialog.component';\r\nimport { L10nTranslationService } from 'angular-l10n';\r\nimport { CommonUtils } from '../../services/common-utils.service';\r\nimport { BaseControl } from '../../models/base.control';\r\n\r\n@Component({\r\n  selector: 'app-org-selector',\r\n  templateUrl: './org-selector.component.html',\r\n  styleUrls: ['./org-selector.component.scss']\r\n})\r\nexport class OrgSelectorComponent extends BaseComponent implements OnInit, AfterViewInit, OnChanges {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n  // title for lable\r\n  @Input()\r\n  public labelValue!: string;\r\n\r\n  @Input()\r\n  public orgService!: any;\r\n\r\n  @Input()\r\n  public fieldValue!: string;\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ref: DynamicDialogRef | undefined;\r\n  dataTable: any = {};\r\n  orgName = '';\r\n  constructor(\r\n    private _injector: Injector,\r\n    public dialogService: DialogService,\r\n    public translate: L10nTranslationService,\r\n    // public orgService: OrganizationService\r\n  ) {\r\n    super(_injector);\r\n  }\r\n\r\n\r\n  /**\r\n   * ngOnInit\r\n   */\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  onSelect() {\r\n    this.ref = this.dialogService.open(OrgSelectorDialogComponent, {\r\n      header: this.translate.translate('common.orgSelector.select'),\r\n      width: CommonUtils.setWidthDiaglog('60%'),\r\n      contentStyle: { overflow: 'auto' },\r\n      baseZIndex: 99999,\r\n      maximizable: true,\r\n      data: {\r\n        orgService: this.orgService\r\n      }\r\n    });\r\n    this.ref.onClose.subscribe((node) => {\r\n      if (node) {\r\n        this.orgName = node.name;\r\n        this.property.setValue(!!this.fieldValue ? node[this.fieldValue] : node.id);\r\n        // callback on chose item\r\n        this.onChange.emit(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ngOnChanges\r\n   */\r\n  ngOnChanges() {\r\n    this.onChangeOrgId();\r\n  }\r\n\r\n  public onChangeOrgId() {\r\n    if (!this.property) {\r\n      return;\r\n    }\r\n    if (!this.property.value || this.property.value == 0) {\r\n      return;\r\n    }\r\n    if (this.fieldValue == 'code') {\r\n      this.orgService.getByCode(this.property.value)\r\n        .subscribe((res: any) => {\r\n          const data = res.data;\r\n          if (data) {\r\n            this.orgName = data.name;\r\n          }\r\n        });\r\n    } else {\r\n      // thuc hien lay ten don vi de hien thi\r\n      this.orgService.findOne(this.property.value)\r\n        .subscribe((res: any) => {\r\n          const data = res.data;\r\n          if (data) {\r\n            this.orgName = data.name;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onClear() {\r\n    this.orgName = '';\r\n    this.property.setValue(null);\r\n    this.onChange.emit(null);\r\n  }\r\n}\r\n","<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <div class=\"p-inputgroup w-full\">\n        <input class=\"flex-1\" type=\"text\" pInputText [(ngModel)]=\"orgName\" [pTooltip]=\"orgName\" (click)=\"onSelect()\"/>\n        <button\n            type=\"button\"\n            pButton\n            icon=\"pi pi-times\"\n            class=\"p-button-danger\"\n            [pTooltip]=\"'common.orgSelector.clear' | translateAsync\"\n            (click)=\"onClear()\"></button>\n        <button\n            type=\"button\"\n            pButton\n            icon=\"pi pi-check\"\n            class=\"p-button-info\"\n            [pTooltip]=\"'common.orgSelector.select' | translateAsync\"\n            (click)=\"onSelect()\"></button>\n    </div>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent {\n\n}\n","<p>auth-layout works!</p>\n","import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Injector, Input, Output } from '@angular/core';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { BaseControl } from '../../models/base.control';\r\n\r\n@Component({\r\n  selector: 'app-category-selector',\r\n  templateUrl: './category-selector.component.html',\r\n  styleUrls: ['./category-selector.component.scss']\r\n})\r\nexport class CategorySelectorComponent extends BaseComponent implements AfterViewInit{\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n\r\n  // title for lable\r\n  @Input()\r\n  public labelValue!: string;\r\n\r\n  @Input()\r\n  public fieldValue!: string;\r\n\r\n  @Input()\r\n  public categoryService!: any;\r\n\r\n  @Input()\r\n  public typeCode: string = '';\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  catogoryOptions = [];\r\n  optionValue = 'id';\r\n  constructor(\r\n    private _injector: Injector,\r\n    // public categoryService: CategoryService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super(_injector);\r\n    \r\n    \r\n  }\r\n  \r\n  ngAfterViewInit(): void {\r\n    this.loadCategoryOption();\r\n    if (!!this.fieldValue) {\r\n      this.optionValue = this.fieldValue;\r\n    }\r\n  }\r\n\r\n  loadCategoryOption() {\r\n    this.categoryService.findByTypeCode(this.typeCode)\r\n      .subscribe((res: any) => {\r\n        this.catogoryOptions = res.data;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  _onChange(event: EventEmitter<any>) {\r\n    this.onChange.emit(event);\r\n  }\r\n}\r\n","<app-drop-down [property]=\"property\" [labelValue]=\"labelValue\" [showClear]=\"true\"\n    [options]=\"catogoryOptions\" optionLabel=\"name\" [optionValue]=\"optionValue\" (onChange)=\"_onChange($event)\"></app-drop-down>","import { Component, Injector } from '@angular/core';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { ValidationService } from '../../services/validation.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { L10nTranslationService } from 'angular-l10n';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { CommonUtils } from '../../services/common-utils.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password-form',\r\n  templateUrl: './change-password-form.component.html',\r\n  styleUrls: ['./change-password-form.component.scss']\r\n})\r\nexport class ChangePasswordFormComponent extends BaseComponent {\r\n  formConfig = {\r\n    currentPassword: ['', [ValidationService.required]],\r\n    newPassword: ['', [ValidationService.required]],\r\n    confirmPassword: ['', [ValidationService.required]],\r\n  };\r\n  formSave: FormGroup;\r\n\r\n  constructor(\r\n    public _injector: Injector,\r\n    actr: ActivatedRoute,\r\n    public translate: L10nTranslationService,\r\n    public dynamicDialogRef: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n    // public authService: AuthService,\r\n  ) {\r\n    super(_injector, actr, '');\r\n    this.formSave = this.buildForm(config?.data || {}, this.formConfig);\r\n  }\r\n\r\n  get f() {\r\n    return this.formSave.controls;\r\n  }\r\n\r\n  onSave() {\r\n    if (!CommonUtils.isValidForm(this.formSave)) {\r\n      return;\r\n    }\r\n    this.confirmMessage(this.translate.translate('common.label.confirmSave'), () => {// on accepted\r\n      this.config.data?.authService.changePassword(this.formSave.value)\r\n        .subscribe((res: any) => {\r\n          if (this.requestIsSuccess(res)) {\r\n            this.dynamicDialogRef.close(res);\r\n          }\r\n        });\r\n    }, () => {// on rejected\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.dynamicDialogRef.close();\r\n  }\r\n}\r\n","<form [formGroup]=\"formSave\">\n    <div class=\"formgrid grid\">\n        <app-text-input [property]=\"f['currentPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'Mật khẩu hiện tại'\"\n        ></app-text-input>\n        <app-text-input [property]=\"f['newPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'Mật khẩu mới'\"\n        ></app-text-input>\n        <app-text-input [property]=\"f['confirmPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'Xác nhận mật khẩu mới'\"\n        ></app-text-input>\n    </div>\n    <div class=\"flex justify-content-center app-dialog-footer\">\n        <p-button icon=\"pi pi-times\" [label]=\"'common.label.quit' | translateAsync\" styleClass=\"p-button-outlined\" (onClick)=\"onClose()\"></p-button>\n        <p-button icon=\"pi pi-save\" [label]=\"'common.label.save' | translateAsync\" (onClick)=\"onSave()\"></p-button>\n    </div>\n</form>","import { Component, Injector } from '@angular/core';\nimport { DialogService, DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-import-error-list',\n  templateUrl: './import-error-list.component.html',\n  styleUrls: ['./import-error-list.component.scss']\n})\nexport class ImportErrorListComponent {\n  errorList = [];\n  constructor(\n    private _injector: Injector,\n    public dynamicDialogRef: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n  ) {\n    this.errorList = config.data.errorList;\n  }\n\n  onCancel() {\n    this.dynamicDialogRef.close();\n  }\n}\n","<p-table [value]=\"errorList\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th style=\"width: 5%;\">#</th>\n            <th style=\"width: 15%;\">Dòng</th>\n            <th style=\"width: 15%;\">Cột</th>\n            <th style=\"width: 65%;\">Lỗi</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item let-index=\"rowIndex\">\n        <tr>\n            <td><span class=\"p-column-title\">STT</span>{{ index + 1 }}</td>\n            <td><span class=\"p-column-title\">Dòng</span>{{ item.row }}</td>\n            <td><span class=\"p-column-title\">Cột</span>{{ item.columnLabel }}</td>\n            <td><span class=\"p-column-title\">Lỗi</span><span [innerHtml]='item?.description'></span></td>\n        </tr>\n    </ng-template>\n</p-table>\n<div class=\"pt-3 d-flex justify-content-center\">\n    <p-button icon=\"pi pi-times\" [label]=\"'common.label.cancel' | translateAsync\"\n        styleClass=\"p-button-outlined\" (onClick)=\"onCancel()\"></p-button>\n</div>","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HelperService } from './helper.service';\r\nimport { CommonUtils } from './common-utils.service';\r\n\r\n\r\n@Injectable()\r\nexport class BaseService {\r\n  protected baseUrl: String;\r\n  protected httpClient!: HttpClient;\r\n  public helperService!: HelperService;\r\n  public commonUtil!: CommonUtils;\r\n  public baseObject!: String;\r\n  constructor(public injector: Injector,\r\n              baseUrl: String,\r\n              baseObject: String\r\n    ) {\r\n    this.baseUrl = baseUrl;\r\n    this.baseObject = baseObject;\r\n    this.httpClient = this.injector.get(HttpClient);\r\n    this.helperService = this.injector.get(HelperService);\r\n    this.commonUtil = this.injector.get(CommonUtils);\r\n  }\r\n\r\n  // tslint:disable-next-line: ban-types\r\n  public getBaseUrl(): String {\r\n    return this.baseUrl;\r\n  }\r\n\r\n  public search(data?: any, event?: any): Observable<any> {\r\n    const searchData = this.commonUtil.convertData(data);\r\n    if (event) {\r\n      searchData._search = event;\r\n    }\r\n    const buildParams = this.commonUtil.buildParams(searchData);\r\n    const url = `${this.baseUrl}/search?`;\r\n    return this.getRequest(url, {params: buildParams});\r\n  }\r\n\r\n  public getConfigSearch(): Observable<any> {\r\n    const url = `http://localhost:8685/v1/config-search/${this.baseObject}`;\r\n    return this.getRequest(url);\r\n  }\r\n\r\n  /**\r\n   * findAll\r\n   */\r\n  public findAll(): Observable<any> {\r\n    const url = `${this.baseUrl}`;\r\n    return this.getRequest(url);\r\n  }\r\n\r\n  /**\r\n   * findAllByFillter\r\n   */\r\n  public findAllByFillter(data?: any): Observable<any> {\r\n    const url = `${this.baseUrl}/filter`;\r\n    return this.postRequestNoToast(url, this.commonUtil.convertData(data || {}));\r\n  }\r\n\r\n  /**\r\n   * findAllByFillterAndGroupCode\r\n   */\r\n  public findAllByFillterAndGroupCode(data: any, groupCode: string): Observable<any> {\r\n    const url = `${this.baseUrl}/filter/${groupCode}`;\r\n    return this.postRequestNoToast(url, this.commonUtil.convertData(data || {}));\r\n  }\r\n\r\n  /**\r\n   * findOne\r\n   * param id\r\n   */\r\n  public findOne(id: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${id}`;\r\n    return this.getRequest(url);\r\n  }\r\n  /**\r\n   * saveOrUpdate\r\n   */\r\n  public saveOrUpdate(item: any): Observable<any> {\r\n    const url = `${this.baseUrl}`;\r\n    return this.postRequest(url, this.commonUtil.convertData(item));\r\n  }\r\n\r\n  /**\r\n   * saveOrUpdate\r\n   */\r\n   public saveOrUpdateConfigSearch(item: any): Observable<any> {\r\n    const url = `http://localhost:8685/v1/config-search/save-config`;\r\n    return this.postRequestNoneProcessing(url, this.commonUtil.convertData(item));\r\n  }\r\n\r\n  /**\r\n   * saveOrUpdateFormFile\r\n   */\r\n  public saveOrUpdateFormFile(item: any): Observable<any> {\r\n    const formdata = this.commonUtil.convertFormFile(item);\r\n    const url = `${this.baseUrl}/form-data`;\r\n    return this.postRequest(url, formdata);\r\n  }\r\n  /**\r\n   * deleteById\r\n   * param id\r\n   */\r\n  public deleteById(id: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${id}`;\r\n    return this.deleteRequest(url);\r\n  }\r\n\r\n  /**\r\n   * deleteByListId\r\n   * param id\r\n   */\r\n     public deleteItemsSelected(data: any): Observable<any> {\r\n      const url = `${this.baseUrl}/delete-all`;\r\n      return this.postRequest(url, this.commonUtil.convertData(data));\r\n    }\r\n  /*******************************/\r\n\r\n  /**\r\n   * make get request\r\n   */\r\n   protected getRequest(url: string, options?: any): Observable<any> {\r\n    this.helperService.PROCESS_LOADER.next(true);\r\n    return this.httpClient.get(url, options)\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          res => {\r\n            // this.helperService.MESSAGE_TOASTER.next(res);\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            // if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            // }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  /**\r\n   * make post request\r\n   */\r\n   protected postRequest(url: string, data?: any): Observable<any> {\r\n    this.helperService.PROCESS_LOADER.next(true);\r\n    return this.httpClient.post(url, data)\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          (res: any) => {\r\n            if (res.type === 'WARNING') {\r\n              this.commonUtil.toastMessage('warn', res.code, res.data);\r\n            } else {\r\n              this.commonUtil.toastMessage('success', res.code);\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  protected postRequestNoToast(url: string, data?: any): Observable<any> {\r\n    this.helperService.PROCESS_LOADER.next(true);\r\n    return this.httpClient.post(url, data)\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          (res: any) => {\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * make post request for file\r\n   */\r\n   protected postRequestFile(url: string, data?: any): Observable<any> {\r\n    this.helperService.PROCESS_LOADER.next(true);\r\n    return this.httpClient.post(url, data, {responseType: 'blob'})\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          res => {\r\n            // this.helperService.MESSAGE_TOASTER.next(res);\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * make get request\r\n   */\r\n   protected deleteRequest(url: string): Observable<any> {\r\n    this.helperService.PROCESS_LOADER.next(true);\r\n    return this.httpClient.delete(url)\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          (res: any) => {\r\n            if (res.type === 'WARN') {\r\n              this.commonUtil.toastMessage('warn', res.code, res.data);\r\n            } else if (res.type === 'SUCSSES') {\r\n              this.commonUtil.toastMessage('success', res.code);\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * getRequestNoneProcessing\r\n   */\r\n   protected getRequestNoneProcessing(url: string, options?: any): Observable<any> {\r\n    return this.httpClient.get(url, options)\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          res => {\r\n            // this.helperService.MESSAGE_TOASTER.next(res);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * postRequestNoneProcessing\r\n   */\r\n   protected postRequestNoneProcessing(url: string, data?: any): Observable<any> {\r\n    return this.httpClient.post(url, data)\r\n    .pipe(\r\n      tap( // Log the result or error\r\n        res => {\r\n          // this.helperService.MESSAGE_TOASTER.next(res);\r\n        },\r\n        error => {\r\n          if (error.status !== 401 && error.status !== 403) {\r\n            this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n          }\r\n        }\r\n      ),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * postRequestFileNoneProcessing\r\n   */\r\n   protected postRequestFileNoneProcessing(url: string, data?: any): Observable<any> {\r\n    this.helperService.PROCESS_LOADER.next(true);\r\n    return this.httpClient.post(url, data, {responseType: 'blob'})\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          res => {\r\n            // this.helperService.MESSAGE_TOASTER.next(res);\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * deleteRequestNoneProcessing\r\n   */\r\n   protected deleteRequestNoneProcessing(url: string): Observable<any> {\r\n    return this.httpClient.delete(url)\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          res => {\r\n            // this.helperService.MESSAGE_TOASTER.next(res);\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          },\r\n          error => {\r\n            if (error.status !== 401 && error.status !== 403) {\r\n              this.commonUtil.toastMessage('error', 'common.toast.haveError');\r\n            }\r\n            this.helperService.PROCESS_LOADER.next(false);\r\n          }\r\n        ),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  private handleError(error: any) {\r\n    const errorMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    return throwError(errorMsg);\r\n  }\r\n}\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BaseService } from \"./basic.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ImportFormService extends BaseService {\r\n    constructor(public _injector: Injector) {\r\n        super(_injector, '', '');\r\n    }\r\n\r\n    public downloadTemplate(service: BaseService, urlEndpoint: string, extraValue?: any) {\r\n        const url = `${service.getBaseUrl()}/${urlEndpoint}`;\r\n        // return this.getRequest(url);\r\n        const buildParams = this.commonUtil.buildParams(extraValue || {});\r\n        return this.getRequest(url, { params: buildParams, responseType: 'blob' });\r\n    }\r\n\r\n    //   public doDownloadFileByName(fileName: string) {\r\n    //     const url = UrlConstant.API_VERSION + '/download/temp-file?fileName=' + fileName;\r\n    //     return this.getRequestFile(url);\r\n    //   }\r\n\r\n    public doImport(service: BaseService, endpoint: string, data: FormData): Observable<any> {\r\n        const url = `${service.getBaseUrl()}/${endpoint}`;\r\n        return this.postRequest(url, data);\r\n    }\r\n}\r\n``","import {\r\n    Directive,\r\n    HostBinding,\r\n    HostListener,\r\n    Output,\r\n    EventEmitter\r\n} from \"@angular/core\";\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\n\r\nexport interface FileHandle {\r\n    file: File,\r\n    url: SafeUrl\r\n}\r\n\r\n@Directive({\r\n    selector: \"[appDrag]\"\r\n})\r\nexport class DragDirective {\r\n    @Output() files: EventEmitter<FileHandle[]> = new EventEmitter();\r\n\r\n    @HostBinding(\"style.background\") private background = \"#fff\";\r\n    @HostBinding(\"style.borderColor\") private borderColor = \"#E9EAFF\";\r\n\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n\r\n    @HostListener(\"dragover\", [\"$event\"]) public onDragOver(evt: DragEvent) {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        this.background = \"#E9EAFF\";\r\n        this.borderColor = \"#141ED2\";\r\n    }\r\n\r\n    @HostListener(\"dragleave\", [\"$event\"]) public onDragLeave(evt: DragEvent) {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        this.background = \"#fff\";\r\n        this.borderColor = \"#E9EAFF\";\r\n    }\r\n\r\n    @HostListener('drop', ['$event']) public onDrop(evt: DragEvent) {\r\n        if (!evt || !evt.dataTransfer) {\r\n            return;\r\n        }\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        this.background = '#fff';\r\n        this.borderColor = \"#E9EAFF\";\r\n\r\n        let files: FileHandle[] = [];\r\n        for (let i = 0; i < evt.dataTransfer.files.length; i++) {\r\n            const file = evt.dataTransfer.files[i];\r\n            const url = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(file));\r\n            files.push({ file, url });\r\n        }\r\n        if (files.length > 0) {\r\n            this.files.emit(files);\r\n        }\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\nimport { FileHandle } from '../../directive/drag-drop.directive';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { CommonUtils } from '../../services/common-utils.service';\r\nimport { DialogService, DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { saveAs } from 'file-saver';\r\nimport { ImportFormService } from '../../services/import-form.service';\r\nimport { ImportErrorListComponent } from '../import-error-list/import-error-list.component';\r\nimport { BaseService } from '../../services/basic.service';\r\n\r\n@Component({\r\n  selector: 'app-choose-file-import-dialog',\r\n  templateUrl: './choose-file-import-dialog.component.html',\r\n  styleUrls: ['./choose-file-import-dialog.component.scss']\r\n})\r\nexport class ChooseFileImportDialogComponent extends BaseComponent {\r\n  selectedFile: File | null = null;\r\n  urlApiDownloadTemp = '';\r\n  urlApiImport = '';\r\n  extraValue = {};\r\n  errorList = [];\r\n  ref: DynamicDialogRef | undefined;\r\n  actionType = 'THEM_MOI';\r\n  showActionType = false;\r\n  fileName = null;\r\n  serviceAPI: BaseService;\r\n  constructor(\r\n    private _injector: Injector,\r\n    public dynamicDialogRef: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n    private importFormService: ImportFormService,\r\n    public dialogService: DialogService,\r\n  ) {\r\n    super(_injector);\r\n    this.urlApiDownloadTemp = config.data.urlApiDownloadTemp;\r\n    this.urlApiImport = config.data.urlApiImport;\r\n    this.fileName = config.data.fileName;\r\n    this.serviceAPI = config.data.serviceAPI;\r\n    this.extraValue = config.data.extraValue || {};\r\n    this.showActionType = config.data.showActionType;\r\n  }\r\n\r\n  filesDropped(event: FileHandle[]) {\r\n    if (event && event.length > 1) {\r\n      this.commonUtil.toastMessage('warn', 'common.toast.importMultiFile');\r\n    }\r\n    // validate file type\r\n    // for (let i = 0; i < event.length; i++) {\r\n    //   const file = event[i];\r\n    //   console.log(' 12>>', file.file.name)\r\n     \r\n    // }\r\n    this.selectedFile = event[0].file;\r\n  }\r\n\r\n  onFileInput(event: Event) {\r\n    const element = event.currentTarget as HTMLInputElement;\r\n    let fileList: FileList | null = element.files;\r\n    if (!fileList || fileList.length > 1) {\r\n      this.commonUtil.toastMessage('warn', 'common.toast.importMultiFile');\r\n    }\r\n    if (fileList == null || fileList.length == 0) {\r\n      return;\r\n    }\r\n    this.selectedFile = fileList[0];\r\n  }\r\n\r\n  onRemoveFile(event: Event) {\r\n    event.stopPropagation();\r\n    this.selectedFile = null;\r\n  }\r\n\r\n  onCancel() {\r\n    this.dynamicDialogRef.close();\r\n  }\r\n\r\n  onDownloadTemplate() {\r\n    this.importFormService.downloadTemplate(this.serviceAPI, this.urlApiDownloadTemp, this.extraValue).subscribe(res => {\r\n      // const reportFile = new Blob([res], { type: getTypeExport('xlsx') });\r\n      saveAs(res, `${ this.fileName || 'template' }.xlsx`);\r\n    });\r\n  }\r\n\r\n  onImport() {\r\n    if (!this.selectedFile) {\r\n      return;\r\n    }\r\n    // let formData = new FormData();\r\n    // formData.append('file', this.selectedFile);\r\n    const formData = CommonUtils.convertFormFile({\r\n      ...this.extraValue,\r\n      file: this.selectedFile,\r\n      actionType: this.actionType\r\n    })\r\n    this.importFormService.doImport(this.serviceAPI, this.urlApiImport, formData).subscribe(res => {\r\n      if (!CommonUtils.isSuccessRequest(res)) {\r\n        this.ref = this.dialogService.open(ImportErrorListComponent, {\r\n          header: 'Danh sách lỗi',\r\n          width: CommonUtils.setWidthDiaglog('40%'),\r\n          contentStyle: { overflow: 'auto' },\r\n          baseZIndex: 99999,\r\n          maximizable: true,\r\n          data: {\r\n            errorList: res.data.errorList\r\n          }\r\n        });\r\n      } else {\r\n        this.dynamicDialogRef.close(true);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"showActionType\">\n    <div class=\"field\">\n        <label class=\"font-semibold\">Tùy chọn</label>\n        <div class=\"d-flex\">\n            <div class=\"field-checkbox mr-3\">\n                <p-radioButton [(ngModel)]=\"actionType\" inputId=\"THEM_MOI\" name=\"actionType\"\n                    [value]=\"'THEM_MOI'\"></p-radioButton>\n                <label for=\"THEM_MOI\" class=\"ml-2\">Thêm mới</label>\n            </div>\n            <div class=\"field-checkbox mr-3\">\n                <p-radioButton [(ngModel)]=\"actionType\" inputId=\"BO_SUNG\" name=\"actionType\"\n                    [value]=\"'BO_SUNG'\"></p-radioButton>\n                <label for=\"BO_SUNG\" class=\"ml-2\">Bổ sung</label>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"mb-2 p-2 download-template\">\n    <a (click)=\"onDownloadTemplate()\"><i class=\"fa fa-download mr-2\"></i> Download file mẫu</a>\n</div>\n<div class=\"image-upload-wrap d-flex align-items-center\" appDrag (files)=\"filesDropped($event)\"\n    (click)=\"fileInput.click()\">\n    <input #fileInput class=\"file-upload-input\" type='file' hidden (change)=\"onFileInput($event)\" accept=\".xls,.xlsx\" />\n    <div class=\"drag-text text-center flex-1\">\n        <div>\n            <img src=\"assets/images/svg/excel-file.svg\" alt=\"Upload file\" width=\"70px\">\n        </div>\n        <ng-container *ngIf=\"!selectedFile\">\n            <h5>Tải tệp lên hoặc thả tệp tại đây</h5>\n        </ng-container>\n        <ng-container *ngIf=\"!!selectedFile\">\n            <div>\n                <span>{{ selectedFile.name }}</span>\n            </div>\n            <div>\n                <button pButton pRipple label=\"Xóa\" class=\"p-button-danger p-button-rounded\"\n                    (click)=\"onRemoveFile($event)\"></button>\n            </div>\n        </ng-container>\n    </div>\n</div>\n<div class=\"pt-3 d-flex justify-content-center\">\n    <p-button icon=\"pi pi-times\" [label]=\"'common.label.cancel' | translateAsync\" styleClass=\"p-button-outlined\"\n        class=\"mr-2\" (onClick)=\"onCancel()\"></p-button>\n    <p-button icon=\"pi pi-upload\" [label]=\"'common.label.import' | translateAsync\" (onClick)=\"onImport()\"></p-button>\n</div>","import { Component, Injector } from '@angular/core';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { DialogService, DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\n@Component({\r\n  selector: 'app-employee-picker-dialog',\r\n  templateUrl: './employee-picker-dialog.component.html',\r\n  styleUrls: ['./employee-picker-dialog.component.scss']\r\n})\r\nexport class EmployeePickerDialogComponent extends BaseComponent {\r\n  code: string = '';\r\n  fullname: string = '';\r\n  dataTable: any = {};\r\n  selectedEmployee = null;\r\n\r\n  constructor(\r\n    private _injector: Injector,\r\n    public dialogService: DialogService,\r\n    // public employeeService: EmployeeService,\r\n    public config: DynamicDialogConfig,\r\n    public dynamicDialogRef: DynamicDialogRef,\r\n  ) {\r\n    super(_injector);\r\n    this.doSearch();\r\n  }\r\n\r\n  doSearch(event?: any) {\r\n    if (!event) {\r\n      event = {rows : 10, resetTable: true};\r\n    }\r\n    this.config.data?.employeeService.search({code: this.code, fullname: this.fullname}, event)\r\n    .subscribe((res: any) => {\r\n      const source = res?.data || {};\r\n      this.dataTable = source;\r\n    });\r\n  }\r\n\r\n  onRowSelect(event: any) {\r\n    this.dynamicDialogRef.close(event.data);\r\n  }\r\n}\r\n","<div>\r\n    <div class=\"d-flex\">\r\n        <form class=\"p-inputgroup\">\r\n            <input [(ngModel)]=\"code\" name=\"code\" class=\"flex-1\" type=\"text\" pInputText\r\n                [placeholder]=\"'Số hiệu'\" />\r\n            <input [(ngModel)]=\"fullname\" name=\"fullname\" class=\"flex-1\" type=\"text\" pInputText\r\n                [placeholder]=\"'Họ và tên'\" />\r\n            <button type=\"submit\" pButton icon=\"pi pi-search\" styleClass=\"p-button-warn\"\r\n                [pTooltip]=\"'common.label.search' | translateAsync\" (click)=\"doSearch()\"></button>\r\n        </form>\r\n    </div>\r\n    <div class=\"mt-2\">\r\n        <p-table [value]=\"dataTable?.data\" [paginator]=\"dataTable?.data && dataTable?.data?.length\" [rows]=\"10\"\r\n        styleClass=\"p-datatable-sm\" [lazy]=\"true\"\r\n        [totalRecords]=\"dataTable?.recordsTotal\" (onLazyLoad)=\"doSearch($event)\" [showCurrentPageReport]=\"true\"\r\n        currentPageReportTemplate=\"Tìm thấy {totalRecords} kết quả, hiển thị từ {first} - {last}\"\r\n        [scrollable]=\"true\" scrollHeight=\"450px\" pageLinks=\"1\"\r\n        selectionMode=\"single\" [(selection)]=\"selectedEmployee\" dataKey=\"code\" (onRowSelect)=\"onRowSelect($event)\">\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th style=\"width: 5%\" >STT</th>\r\n                <th style=\"width: 20%\">\r\n                    Số hiệu\r\n                </th>\r\n                <th style=\"width: 30%\">\r\n                    Họ và tên\r\n                </th>\r\n                <!-- <th style=\"width: 15%\">\r\n                   Ngày sinh\r\n                </th>\r\n                <th style=\"width: 15%\">\r\n                    Giới tính\r\n                 </th> -->\r\n                 <th style=\"width: 15%\">\r\n                    Đơn vị\r\n                 </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item let-index=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"item\">\r\n                <td>{{ index + 1 }}</td>\r\n                <td>{{ item.code }}</td>\r\n                <td>{{ item.fullname }}</td>\r\n                <!-- <td>{{ item.dateOfBirth | date:'dd/MM/yyyy' }}</td>\r\n                <td>{{ item.gender == 1 ? 'Nam' : 'Nữ' }}</td> -->\r\n                <td>{{ item.organizationName }}</td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"6\">{{ 'common.table.dataNotFound' | translateAsync }}</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, EventEmitter, Injector, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { BaseComponent } from '../base-component/base-component.component';\r\nimport { BaseControl } from '../../public-api';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { L10nTranslationService } from 'angular-l10n';\r\nimport { EmployeePickerDialogComponent } from '../employee-picker-dialog/employee-picker-dialog.component';\r\nimport { CommonUtils } from '../../services/common-utils.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-picker',\r\n  templateUrl: './employee-picker.component.html',\r\n  styleUrls: ['./employee-picker.component.scss']\r\n})\r\nexport class EmployeePickerComponent extends BaseComponent implements OnInit, AfterViewInit, OnChanges {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n  // title for lable\r\n  @Input()\r\n  public labelValue!: string;\r\n\r\n  @Input()\r\n  public employeeService!: any;\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ref: DynamicDialogRef | undefined;\r\n  dataTable: any = {};\r\n  empName = '';\r\n  constructor(\r\n    private _injector: Injector,\r\n    public dialogService: DialogService,\r\n    public translate: L10nTranslationService,\r\n    // public employeeService: EmployeeService\r\n  ) {\r\n    super(_injector);\r\n  }\r\n\r\n  \r\n  /**\r\n   * ngOnInit\r\n   */\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  onSelect() {\r\n    this.ref = this.dialogService.open(EmployeePickerDialogComponent, {\r\n      header: 'Chọn cán bộ/học viên',\r\n      width: CommonUtils.setWidthDiaglog('40%'),\r\n      contentStyle: { overflow: 'auto' },\r\n      baseZIndex: 99999,\r\n      maximizable: true,\r\n      data: {\r\n        employeeService: this.employeeService\r\n      }\r\n    });\r\n    this.ref.onClose.subscribe((node) => {\r\n      if (node) {\r\n        this.empName = `${node.code} - ${node.fullname}`;\r\n        this.property.setValue(node.id);\r\n        // callback on chose item\r\n        this.onChange.emit(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ngOnChanges\r\n   */\r\n  ngOnChanges() {\r\n    this.onChangeOrgId();\r\n  }\r\n\r\n  public onChangeOrgId() {\r\n    if (!this.property) {\r\n      return;\r\n    }\r\n    if(!this.property.value || this.property.value == 0){\r\n      return;\r\n    }\r\n     // thuc hien lay ten de hien thi\r\n    this.employeeService.findOne(this.property.value)\r\n    .subscribe((res: any) => {\r\n      const data = res.data;\r\n      if (data) {\r\n        this.empName = `${data.code} - ${data.fullname}`;\r\n      }\r\n    });\r\n      \r\n  }\r\n\r\n  onClear() {\r\n    this.empName = '';\r\n    this.property.setValue(null);\r\n    this.onChange.emit(null);\r\n  }\r\n}\r\n","<div class=\"field\">\r\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\r\n    <div class=\"p-inputgroup w-full\">\r\n        <input class=\"flex-1\" type=\"text\" pInputText [(ngModel)]=\"empName\" [pTooltip]=\"empName\" (click)=\"onSelect()\"/>\r\n        <button\r\n            type=\"button\"\r\n            pButton\r\n            icon=\"pi pi-times\"\r\n            class=\"p-button-danger\"\r\n            [pTooltip]=\"'common.orgSelector.clear' | translateAsync\"\r\n            (click)=\"onClear()\"></button>\r\n        <button\r\n            type=\"button\"\r\n            pButton\r\n            icon=\"pi pi-check\"\r\n            class=\"p-button-info\"\r\n            [pTooltip]=\"'common.orgSelector.select' | translateAsync\"\r\n            (click)=\"onSelect()\"></button>\r\n    </div>\r\n    <app-control-messages [control]=\"property\"></app-control-messages>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BaseControl } from '../../public-api';\r\n\r\n@Component({\r\n  selector: 'app-input-switch',\r\n  templateUrl: './input-switch.component.html',\r\n  styleUrls: ['./input-switch.component.scss']\r\n})\r\nexport class InputSwitchComponent {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n\r\n  @Input()\r\n  public labelValue: string = '';\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n  _onChange(event: any) {\r\n    this.onChange.emit(event)\r\n  }\r\n}\r\n","<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <div class=\"d-flex\">\n        <p-inputSwitch [formControl]=\"property\" (onChange)=\"_onChange($event)\"></p-inputSwitch>\n    </div>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BaseControl } from '../../public-api';\r\n\r\n@Component({\r\n  selector: 'app-multi-select',\r\n  templateUrl: './multi-select.component.html',\r\n  styleUrls: ['./multi-select.component.scss']\r\n})\r\nexport class MultiSelectComponent {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n\r\n  @Input()\r\n  public options: Array<any> = [];\r\n\r\n  @Input()\r\n  public optionLabel: string = '';\r\n\r\n  @Input()\r\n  public optionValue: string = '';\r\n\r\n  @Input()\r\n  public labelValue: string = '';\r\n\r\n  @Input()\r\n  public showClear: boolean = true;\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  _onChange(event: EventEmitter<any>) {\r\n    this.onChange.emit(event);\r\n  }\r\n}\r\n","<div class=\"field\">\r\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\r\n    <p-multiSelect\r\n        [formControl]=\"property\"\r\n        [options]=\"options\"\r\n        [optionLabel]=\"optionLabel\"\r\n        [optionValue]=\"optionValue\"\r\n        [filter]=\"true\"\r\n        [filterBy]=\"optionLabel\"\r\n        [showClear]=\"showClear\"\r\n        display=\"chip\"\r\n        appendTo=\"body\"\r\n        class=\"inline-block w-full\"\r\n        emptyFilterMessage=\"Không tìm thấy dữ liệu\"\r\n        emptyMessage=\"Không tìm thấy dữ liệu\"\r\n        [displaySelectedLabel]=\"true\"\r\n        (onChange)=\"_onChange($event)\"></p-multiSelect>\r\n    <app-control-messages [control]=\"property\"></app-control-messages>\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BaseControl } from '../../public-api';\r\n\r\n@Component({\r\n  selector: 'app-radio-button',\r\n  templateUrl: './radio-button.component.html',\r\n  styleUrls: ['./radio-button.component.scss']\r\n})\r\nexport class RadioButtonComponent {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n\r\n  @Input()\r\n  public options: Array<any> = [];\r\n\r\n  @Input()\r\n  public optionLabel: string = '';\r\n\r\n  @Input()\r\n  public optionValue: string = '';\r\n\r\n  @Input()\r\n  public labelValue: string = '';\r\n\r\n  @Output()\r\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n  _onClick(event: any) {\r\n    this.onChange.emit(event);\r\n  }\r\n}\r\n","<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <div class=\"d-flex\">\n        <div *ngFor=\"let category of options\" class=\"field-checkbox mr-3\">\n            <p-radioButton (onClick)=\"_onClick($event)\" [inputId]=\"category[optionValue]\" [name]=\"property.propertyName\" [value]=\"category[optionValue]\" [formControl]=\"property\"></p-radioButton>\n            <label [for]=\"category[optionValue]\" class=\"ml-2\">{{ category[optionLabel] }}</label>\n        </div>\n    </div>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>","import { Component } from '@angular/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { HelperService } from '../../services/helper.service';\nimport { L10nTranslationService } from 'angular-l10n';\n\n@Component({\n  selector: 'shared-plugin',\n  templateUrl: './shared-plugin.component.html',\n  providers: [ConfirmationService, MessageService]\n})\nexport class SharedPluginComponent {\n  constructor(\n    public translate: L10nTranslationService,\n    public helperService: HelperService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) {\n    this.helperService.MESSAGE_TOASTER.subscribe(res => {\n      if (res) {\n        const summary = this.translate.translate('common.toast.messageSummary');\n        const detail = this.translate.translate(res.code || 'empty', res.value || {data: ''});\n        this.messageService.add({ severity: res.severity, summary, detail });\n      }\n    });\n  }\n}\n","<p-toast position=\"bottom-right\" [baseZIndex]=\"10000\"></p-toast>\n","import { Directive, OnInit, ElementRef, TemplateRef, ViewContainerRef, Input } from '@angular/core';\r\nimport { CommonUtils } from '../services/common-utils.service';\r\n\r\n@Directive({\r\n  selector: '[hasNotPermission]'\r\n})\r\nexport class HasNotPermissionDirective implements OnInit {\r\n  private _value: any;\r\n  constructor(\r\n    private element: ElementRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef\r\n  ) {\r\n\r\n  }\r\n\r\n  @Input()\r\n  set hasNotPermission(value: any) {\r\n    this._value = value;\r\n    this.updateView(this._value);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  private updateView(value: any) {\r\n    // if (!value[0].permissions || value[0].permissions.length <= 0) {\r\n    //   this.viewContainer.createEmbeddedView(this.templateRef);\r\n    // } else {\r\n    //   const rsSearch = value[0].permissions.findIndex((x: any) => x.operationCode === CommonUtils.getPermissionCode(value[1]));\r\n    //   if (rsSearch >= 0) {\r\n    //     this.viewContainer.clear();\r\n    //   } else {\r\n    //     this.viewContainer.createEmbeddedView(this.templateRef);\r\n    //   }\r\n    // }\r\n    if (!CommonUtils.havePermission(value[1], value[2])) {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n}\r\n","import { Directive, OnInit, ElementRef, TemplateRef, ViewContainerRef, Input } from '@angular/core';\r\nimport { CommonUtils } from '../services/common-utils.service';\r\n\r\n@Directive({\r\n  selector: '[hasPermission]'\r\n})\r\nexport class HasPermissionDirective implements OnInit {\r\n  private _value: any;\r\n  constructor(\r\n    private element: ElementRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef\r\n  ) {\r\n\r\n  }\r\n\r\n  @Input()\r\n  set hasPermission(value: any) {\r\n    this._value = value;\r\n    this.updateView(this._value);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private updateView(value: any) {\r\n    if (value[2]) {//resource key\r\n      if (CommonUtils.havePermission(value[1], value[2])) {\r\n        this.viewContainer.createEmbeddedView(this.templateRef);\r\n      } else {\r\n        this.viewContainer.clear();\r\n      }\r\n    }\r\n    else{\r\n      if (!value[0].permissions || value[0].permissions.length <= 0) {\r\n        this.viewContainer.clear();\r\n      } else {\r\n        const rsSearch = value[0].permissions.findIndex((x: any) => x.operationCode === CommonUtils.getPermissionCode(value[1]));\r\n        if (rsSearch < 0) {\r\n          this.viewContainer.clear();\r\n        } else {\r\n          this.viewContainer.createEmbeddedView(this.templateRef);\r\n        }\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n}\r\n","export class LanguageBean {\r\n  tableName?: string;\r\n  columnName?: string;\r\n  objectId?: number;\r\n  languageId?: number;\r\n  name?: string;\r\n  languageCode?: string;\r\n  value?: string;\r\n  sortOrder?: number;\r\n}\r\n","\r\nexport class Filter {\r\n    key?: string;\r\n    value?: any;\r\n    operator?: 'in' | 'gt' | 'lt' | 'gte' | 'lte' | 'neq' | 'eq' | 'ma' | 'mae';\r\n    or?: Filter[];\r\n    constructor(init?: Partial<Filter>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\nexport class Order {\r\n    key?: string;\r\n    direction?: string;\r\n    constructor(init?: Partial<Order>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class Page {\r\n    pageSize?: number;\r\n    pageNumber?: number;\r\n    constructor(init?: Partial<Page>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\nexport class FilterModel {\r\n    filters?: Filter[];\r\n    orders?: Order[];\r\n    pageInfo?: Page;\r\n    constructor(init?: Partial<FilterModel>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n","export class SysPropertyDetailBean {\r\n  constructor(_sysProperty: any, _marketCompany: any) {\r\n    this.propertyId = _sysProperty.propertyId;\r\n    this.propertyCode = _sysProperty.code;\r\n    this.propertyName = _sysProperty.name;\r\n    this.actionForm = _sysProperty.actionForm;\r\n    this.resourceCode = _sysProperty.resourceCode;\r\n    this.tableName = _sysProperty.tableName;\r\n    this.columnName = _sysProperty.columnName;\r\n    this.marketCompanyId = _marketCompany.marketCompanyId;\r\n    this.marketCompanyCode = _marketCompany.code;\r\n    this.marketCompanyName = _marketCompany.name;\r\n  }\r\n    actionForm?: string;\r\n    resourceCode?: string;\r\n    propertyCode?: string;\r\n    propertyName?: string;\r\n    marketCompanyCode?: string;\r\n    marketCompanyName?: string;\r\n    propertyDetailId?:  number;\r\n    isHide?:            boolean;\r\n    isTranslation?:     boolean;\r\n    align?:             string;\r\n    dateFormat?:        string;\r\n    numberFormat?:      string;\r\n    moneyFormat?:       string;\r\n    css?:               string;\r\n    js?:                string;\r\n    propertyId?:        number;\r\n    marketCompanyId?:   number;\r\n    isRequire?:         boolean;\r\n    isUrl?:             boolean;\r\n    isNumber?:          boolean;\r\n    isEmail?:           boolean;\r\n    isIp?:              boolean;\r\n    emailFormat?:       boolean;\r\n    minLength?:         number;\r\n    maxLength?:         number;\r\n    numberMin?:         number;\r\n    numberMax?:         number;\r\n    tableName?:         string;\r\n    columnName?:        string;\r\n    numberType?:        string;\r\n    password?:          boolean;\r\n    phone?:             boolean;\r\n    mobileNumber?:      boolean;\r\n    personalIdNumber?:  boolean;\r\n    beforeCurrentDate?: boolean;\r\n  }\r\n\r\n","export class UserPermission {\r\n  grantedDomain?: string;\r\n  operationCode?: string;\r\n  resourceCode?: string;\r\n  permission?: string;\r\n  defaultDomain?: number;\r\n}\r\n\r\nexport class UserMenu {\r\n  name?: string;\r\n  code?: string;\r\n  url?: string;\r\n  reourceKey?: string;\r\n  sortOrder?: number;\r\n  sysMenuId?: string;\r\n  parentId?: string;\r\n}\r\n\r\nexport class UserToken {\r\n  access_token?: string;\r\n  email?: string;\r\n  employeeCode?: string;\r\n  expires_in?: number;\r\n  fullname?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  loginName?: string;\r\n  phoneNumber?: string;\r\n  userId?: number;\r\n  loginTime?: number;\r\n  tokenExpiresIn?: number;\r\n  userPermissionList?: UserPermission[];\r\n  userMenuList?: UserMenu[];\r\n  userInfo?: any;\r\n}\r\n","/*\r\n * Public API Surface of angularx-score\r\n */\r\n\r\n\r\nexport * from './shared.module';\r\nexport * from './components/public-api';\r\nexport * from './directive/public-api';\r\nexport * from './models/public-api';\r\nexport * from './services/public-api';","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { BaseControl } from '../../public-api';\r\nimport { CommonUtils } from '../../services/common-utils.service';\r\nimport { ControlContainer } from '@angular/forms';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-date-picker',\r\n  templateUrl: './date-picker.component.html',\r\n  styleUrls: ['./date-picker.component.scss']\r\n})\r\nexport class DatePickerComponent implements OnChanges {\r\n  // formControl of this input\r\n  @Input()\r\n  public property: BaseControl = new BaseControl();\r\n  // title for lable\r\n  @Input()\r\n  public labelValue!: string;\r\n\r\n  @Input()\r\n  public dateFormat: string = 'dd/mm/yy';\r\n\r\n  @Input()\r\n  public onChange: Function | undefined;\r\n  \r\n  @Output()\r\n  public onChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  public dateValue: any = null;\r\n  private oldPos = 0;\r\n  private dateMask: string = '';\r\n\r\n  constructor(\r\n    private controlContainer: ControlContainer,\r\n    private primengConfig: PrimeNGConfig\r\n  ) {\r\n    // TODO\r\n    this.primengConfig.setTranslation({\r\n      dayNames: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\r\n      dayNamesShort: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\r\n      dayNamesMin: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\r\n      monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],\r\n      monthNamesShort: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],\r\n      today: 'Hôm nay',\r\n      clear: 'Làm mới'\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.property.value) {\r\n      this.dateValue = new Date(this.property.value);\r\n    } else {\r\n      this.dateValue = null;\r\n    }\r\n  }\r\n\r\n  onBlur(event: any) {\r\n    if (!this.dateValue && event.currentTarget.value !== '') {\r\n      // this.helperService.APP_TOAST_MESSAGE.next({ type: 'ERROR', code: 'dateInvalid', message: null });\r\n    }\r\n\r\n    // Xu ly neu nguoi dung xoa het gia tri ngay thang\r\n    if (event.currentTarget.value === '' && this.dateValue !== null) {\r\n      this.dateValue = null;\r\n      this.onInput(null);\r\n    }\r\n    if (event.currentTarget.value === '' && this.dateValue == null) {\r\n      this.onChanged.emit(event);\r\n    }\r\n  }\r\n\r\n  onInput(event: any): void {\r\n    let parseFormat = this.initDateFormatPosition(CommonUtils.getDateFormat());\r\n    if(this.dateFormat == 'mm/yy'){\r\n      parseFormat = this.initDateFormatPosition('MM/yyyy');\r\n    }\r\n    \r\n    if (event) {\r\n      let cursorPosition = event.target.selectionEnd;\r\n      // if (event.inputType === 'deleteContentBackward' && parseFormat.isBackward(cursorPosition)) {\r\n      //   event.target.value = event.target.value.substring(0, cursorPosition - 1) + event.target.value.substring(cursorPosition);\r\n      //   cursorPosition --;\r\n      // }\r\n      // if (event.inputType === 'insertText' && (event.target.value.length > parseFormat.maxLength)) {\r\n      //     event.target.value = event.target.value.substring(0, event.target.value.length - 1);\r\n      // }\r\n      if (this.oldPos > cursorPosition && parseFormat.isBackward(cursorPosition)) {\r\n        event.target.value = event.target.value.substring(0, cursorPosition - 1) + event.target.value.substring(cursorPosition);\r\n        cursorPosition--;\r\n      }\r\n      if (this.oldPos < cursorPosition && (event.target.value.length > parseFormat.maxLength)) {\r\n        event.target.value = event.target.value.substring(0, event.target.value.length - 1);\r\n      }\r\n      this.oldPos = event.target.selectionEnd;\r\n\r\n      this.dateMask = event.target.value.toString();\r\n      this.dateMask = this.dateMask?.replace(/\\D/g, '');\r\n      let mask = '';\r\n      for (let i = 0; i < this.dateMask.length; i++) {\r\n        mask += this.dateMask[i];\r\n        if (parseFormat.isForward(i)) {\r\n          mask += '/';\r\n          if (parseFormat.isBackward(cursorPosition)) {\r\n            cursorPosition++;\r\n            this.oldPos++;\r\n          }\r\n        }\r\n      }\r\n\r\n      event.target.value = mask.toString();\r\n      event.target.selectionStart = cursorPosition;\r\n      event.target.selectionEnd = cursorPosition;\r\n\r\n    }\r\n\r\n    if (this.dateValue) {\r\n      this.property.setValue(this.dateValue.getTime());\r\n    } else {\r\n      this.property.setValue(null);\r\n    }\r\n    if (this.onChange) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  initDateFormatPosition(dateFormat: string) {\r\n    const maxLength = dateFormat.length;\r\n    const iMask: any = [];\r\n    for (let i = 0; i < dateFormat.length; i++) {\r\n      const char = dateFormat[i];\r\n      if ('/' === char) {\r\n        iMask.push(i - iMask.length > 0 ? (i - iMask.length - 1) : (i - iMask.length));\r\n      }\r\n    }\r\n    const parse = {\r\n      maxLength: maxLength\r\n      , isBackward: (cursorPosition: any) => {\r\n        const char = dateFormat.substr(cursorPosition, 1);\r\n        return char === '/';\r\n      }, isForward: (i: any) => {\r\n        return iMask.indexOf(i) >= 0;\r\n      }\r\n    };\r\n    return parse;\r\n  }\r\n\r\n  onSelect(event: any) {\r\n    if (this.dateValue) {\r\n      this.property.setValue(this.dateValue.getTime());\r\n    } else {\r\n      this.property.setValue(null);\r\n    }\r\n    if (this.onChange) {\r\n      this.onChange();\r\n    }\r\n    this.onChanged.emit(event);\r\n  }\r\n}\r\n","<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <p-calendar [(ngModel)]=\"dateValue\" [showIcon]=\"true\"\n        [dateFormat]=\"dateFormat\"\n        class=\"w-full inline-block\"\n        appendTo=\"body\"\n        (onInput)=\"onInput($event)\"\n        (onSelect)=\"onSelect($event)\"\n        (onBlur)=\"onBlur($event)\"></p-calendar>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { TableModule } from 'primeng/table';\r\nimport { BaseComponent } from './components/base-component/base-component.component';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { SharedDirectiveModule } from './directive/shared-directive.module';\r\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { InputSpecialDirective } from './directive/input-special.directive';\r\nimport { AutoFocusDirective } from './directive/auto-focus.directive';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ControlMessagesComponent } from './components/control-messages/control-messages.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TextInputComponent } from './components/text-input/text-input.component';\r\nimport { InputTrimDirective } from './directive/input-trim.directive';\r\nimport { L10nTranslateAsyncPipe } from 'angular-l10n';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DropDownComponent } from './components/drop-down/drop-down.component';\r\nimport { OrgSelectorComponent } from './components/org-selector/org-selector.component';\r\nimport { OrgSelectorDialogComponent } from './components/org-selector-dialog/org-selector-dialog.component';\r\nimport { DatePickerComponent } from './components/date-picker/date-picker.component';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrgTreeComponent } from './components/org-tree/org-tree.component';\r\nimport { RadioButtonComponent } from './components/radio-button/radio-button.component';\r\nimport { CategorySelectorComponent } from './components/category-selector/category-selector.component';\r\nimport { ChooseFileImportDialogComponent } from './components/choose-file-import-dialog/choose-file-import-dialog.component';\r\nimport { DragDirective } from './directive/drag-drop.directive';\r\nimport { ImportErrorListComponent } from './components/import-error-list/import-error-list.component';\r\nimport { InputSwitchComponent } from './components/input-switch/input-switch.component';\r\nimport { EmployeePickerComponent } from './components/employee-picker/employee-picker.component';\r\nimport { EmployeePickerDialogComponent } from './components/employee-picker-dialog/employee-picker-dialog.component';\r\nimport { MultiSelectComponent } from './components/multi-select/multi-select.component';\r\nimport { HasPermissionDirective } from './directive/has-permission.directive';\r\nimport { HasNotPermissionDirective } from './directive/has-not-permission.directive';\r\nimport { ChangePasswordFormComponent } from './components/change-password-form/change-password-form.component';\r\nimport { SharedPluginComponent } from './components/shared-plugin/shared-plugin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DragDirective,\r\n    BaseComponent,\r\n    ControlMessagesComponent,\r\n    InputSpecialDirective,\r\n    AutoFocusDirective,\r\n    InputTrimDirective,\r\n    HasPermissionDirective,\r\n    HasNotPermissionDirective,\r\n    SharedPluginComponent,\r\n    TextInputComponent,\r\n    DropDownComponent,\r\n    OrgSelectorComponent,\r\n    OrgSelectorDialogComponent,\r\n    DatePickerComponent,\r\n    OrgTreeComponent,\r\n    RadioButtonComponent,\r\n    CategorySelectorComponent,\r\n    ChooseFileImportDialogComponent,\r\n    ImportErrorListComponent,\r\n    InputSwitchComponent,\r\n    EmployeePickerComponent,\r\n    EmployeePickerDialogComponent,\r\n    MultiSelectComponent,\r\n    ChangePasswordFormComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    BreadcrumbModule,\r\n    PanelModule,\r\n    TableModule,\r\n    DialogModule,\r\n    SharedDirectiveModule,\r\n    DynamicDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OverlayPanelModule,\r\n    ConfirmDialogModule,\r\n    HttpClientModule,\r\n    ToastModule,\r\n    L10nTranslateAsyncPipe,\r\n    DropdownModule,\r\n    CalendarModule,\r\n    TreeModule,\r\n    RadioButtonModule,\r\n    ProgressSpinnerModule,\r\n    InputSwitchModule,\r\n    TabViewModule,\r\n    InputNumberModule,\r\n    CheckboxModule,\r\n    InputTextModule,\r\n    SplitButtonModule,\r\n    ScrollPanelModule,\r\n    MultiSelectModule,\r\n    ButtonModule,\r\n  ],\r\n  exports: [\r\n    ButtonModule,\r\n    BreadcrumbModule,\r\n    PanelModule,\r\n    TableModule,\r\n    DialogModule,\r\n    SharedDirectiveModule,\r\n    DynamicDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OverlayPanelModule,\r\n    InputSpecialDirective,\r\n    AutoFocusDirective,\r\n    InputTrimDirective,\r\n    HasPermissionDirective,\r\n    HasNotPermissionDirective,\r\n    ConfirmDialogModule,\r\n    ControlMessagesComponent,\r\n    HttpClientModule,\r\n    ToastModule,\r\n    SharedPluginComponent,\r\n    TextInputComponent,\r\n    L10nTranslateAsyncPipe,\r\n    DropdownModule,\r\n    DropDownComponent,\r\n    OrgSelectorComponent,\r\n    DatePickerComponent,\r\n    CalendarModule,\r\n    TreeModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    ProgressSpinnerModule,\r\n    InputSwitchModule,\r\n    TabViewModule,\r\n    InputNumberModule,\r\n    CheckboxModule,\r\n    InputTextModule,\r\n    SplitButtonModule,\r\n    ScrollPanelModule,\r\n    MultiSelectModule,\r\n    OrgTreeComponent,\r\n    RadioButtonComponent,\r\n    CategorySelectorComponent,\r\n    InputSwitchComponent,\r\n    EmployeePickerComponent,\r\n    MultiSelectComponent\r\n  ],\r\n  providers: [\r\n    DialogService\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class SCoreModule { }\r\n","/*\r\n * Public API Surface of angularx-score\r\n */\r\n\r\nexport * from './lib/s-core.module';\r\nexport * from './lib/shared/public-api';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.HelperService","i2.ACTION_FORM","i1","i2","i3.ControlMessagesComponent","i4.InputSpecialDirective","i5.AutoFocusDirective","i6.InputTrimDirective","i4.ControlMessagesComponent","i3","i4","i6","i7.TextInputComponent","i8.OrgTreeComponent","i9","i5","i8.ControlMessagesComponent","i9.InputSpecialDirective","i10.InputTrimDirective","i1.DropDownComponent","i6.TextInputComponent","i2.ImportFormService","i7.DragDirective","i8.InputSpecialDirective","i9.InputTrimDirective","i10","i2.HelperService","i5.ControlMessagesComponent"],"mappings":"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"}