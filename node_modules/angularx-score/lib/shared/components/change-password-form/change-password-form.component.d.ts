import { Injector } from '@angular/core';
import { BaseComponent } from '../base-component/base-component.component';
import { ValidationService } from '../../services/validation.service';
import { FormGroup } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';
import { L10nTranslationService } from 'angular-l10n';
import { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';
import * as i0 from "@angular/core";
export declare class ChangePasswordFormComponent extends BaseComponent {
    _injector: Injector;
    translate: L10nTranslationService;
    dynamicDialogRef: DynamicDialogRef;
    config: DynamicDialogConfig;
    formConfig: {
        currentPassword: (string | (typeof ValidationService.required)[])[];
        newPassword: (string | (typeof ValidationService.required)[])[];
        confirmPassword: (string | (typeof ValidationService.required)[])[];
    };
    formSave: FormGroup;
    constructor(_injector: Injector, actr: ActivatedRoute, translate: L10nTranslationService, dynamicDialogRef: DynamicDialogRef, config: DynamicDialogConfig);
    get f(): {
        [key: string]: import("@angular/forms").AbstractControl<any, any>;
    };
    onSave(): void;
    onClose(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChangePasswordFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChangePasswordFormComponent, "app-change-password-form", never, {}, {}, never, never, false, never>;
}
