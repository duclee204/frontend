import { AfterViewInit, ChangeDetectorRef, EventEmitter, Injector } from '@angular/core';
import { BaseComponent } from '../base-component/base-component.component';
import { BaseControl } from '../../models/base.control';
import * as i0 from "@angular/core";
export declare class CategorySelectorComponent extends BaseComponent implements AfterViewInit {
    private _injector;
    private cdr;
    property: BaseControl;
    labelValue: string;
    fieldValue: string;
    categoryService: any;
    typeCode: string;
    onChange: EventEmitter<any>;
    catogoryOptions: never[];
    optionValue: string;
    constructor(_injector: Injector, cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    loadCategoryOption(): void;
    _onChange(event: EventEmitter<any>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CategorySelectorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CategorySelectorComponent, "app-category-selector", never, { "property": { "alias": "property"; "required": false; }; "labelValue": { "alias": "labelValue"; "required": false; }; "fieldValue": { "alias": "fieldValue"; "required": false; }; "categoryService": { "alias": "categoryService"; "required": false; }; "typeCode": { "alias": "typeCode"; "required": false; }; }, { "onChange": "onChange"; }, never, never, false, never>;
}
