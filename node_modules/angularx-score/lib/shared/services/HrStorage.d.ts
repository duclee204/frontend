import { UserToken } from './user-token.model';
import * as i0 from "@angular/core";
declare class StorageData {
    userToken?: UserToken;
    navState?: boolean;
    navFlipState?: boolean;
    searchState?: any;
    listLang?: any;
    listMarket?: any;
    currentUrl?: any;
    intro?: any;
    static ɵfac: i0.ɵɵFactoryDeclaration<StorageData, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StorageData>;
}
export declare class HrStorage {
    static data: StorageData;
    private static expriteIn;
    private static instanceName;
    private static storage;
    /**
     * init
     */
    static init(): void;
    /**
     * isExprited
     */
    static isExprited(): boolean;
    /**
     * clear
     */
    static clear(): void;
    /**
     * storedData
     */
    static storedData(): StorageData;
    /**
     * get
     */
    static get(key: string): any;
    /**
     * get
     */
    static set(key: string, val: any): any;
    /**
     * getUserToken
     */
    static getUserToken(): UserToken;
    /**
     * setUserToken
     */
    static setUserToken(userToken: UserToken): any;
    /**
     * getNavState
     */
    static getNavState(): boolean;
    /**
     * setNavState
     */
    static setNavState(navState: boolean): void;
    /**
     * getNavFlipState
     */
    static getNavFlipState(): boolean;
    /**
     * setNavFlipState
     */
    static setNavFlipState(navFlipState: boolean): void;
    /**
     * getSearchState
     */
    static getSearchState(): any;
    /**
     * setNavFlipState
     */
    static setSearchState(searchState: any): void;
    /**
     * getSelectedLang
     */
    static getSelectedLang(): any;
    /**
    * setSelectedLang
    */
    static setSelectedLang(object: any): void;
    /**
     * getListLang
     */
    static getListLang(): any;
    /**
     * setListLang
     */
    static setListLang(listLang: any): void;
    /**
     * getCurrentMarket
     */
    static getSelectedMarket(): any;
    /**
     * setSelectedMarket
     */
    static setSelectedMarket(object: any): void;
    /**
     * getListMarket
     */
    static getListMarket(): any;
    /**
     * setListMarket
     */
    static setListMarket(listMarket: any): void;
    /**
     * getCurrentUrl
     */
    static getCurrentUrl(): any;
    /**
     * setCurrentUrl
     */
    static setCurrentUrl(currentUrl: any): void;
    /**
     * getIntro
     */
    static getIntro(): any;
    /**
     * setIntro
     */
    static setIntro(intro: any): void;
    /**
     * introIsDone
     * @ param screenCode
     */
    static introIsDone(screenCode: string): boolean;
    /**
     * introIsDone
     * @ param screenCode
     */
    static introSetDone(screenCode: string): void;
    /**
     * getTheme
     */
    static getTheme(): any;
    /**
     * setTheme
     */
    static setTheme(theme: any): void;
    /**
     * setSessionId
     */
    static setSessionId(id: any): void;
    /**
    * getSessionId
    */
    static getSessionId(): any;
}
export {};
