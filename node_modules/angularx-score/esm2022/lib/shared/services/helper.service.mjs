import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class HelperService {
    constructor() {
        this.ORGANIZATION = new BehaviorSubject([]);
        this.APP_TOAST_MESSAGE = new BehaviorSubject([]);
        this.APP_CONFIRM_DELETE = new BehaviorSubject(null);
        this.APP_SHOW_HIDE_LEFT_MENU = new BehaviorSubject([]);
        this.APP_SHOW_PROCESSING = new BehaviorSubject([]);
        this.EMPLOYEE_URL = new BehaviorSubject([]);
        this.INSERT_WORK_PROCESS = new BehaviorSubject([]);
        this.CHECK_WORK_PROCESS = new BehaviorSubject([]);
        this.LANGUAGE_CHANGE = new BehaviorSubject(null);
        this.PROCESS_LOADER = new BehaviorSubject(null);
        this.MESSAGE_TOASTER = new BehaviorSubject(null);
        this.CONFIRM = new BehaviorSubject(null);
        this.LOAD_USER = new BehaviorSubject(null);
    }
    /**
     * afterSaveOrganization
     * param data
     */
    afterSaveOrganization(data) {
        this.ORGANIZATION.next(data);
    }
    /**
     * createMessage
     * param data
     */
    processReturnMessage(data) {
        this.APP_TOAST_MESSAGE.next(data);
    }
    /**
     * processing
     * param data
     */
    isProcessing(isProcessing) {
        this.APP_SHOW_PROCESSING.next(isProcessing);
    }
    /**
     * confirmDelete
     * param data
     */
    confirmDelete(data) {
        this.APP_CONFIRM_DELETE.next(data);
        // this.APP_CONFIRM_DELETE.pipe(data);
    }
    refreshConfirmDelete() {
        this.APP_CONFIRM_DELETE = new BehaviorSubject(null);
    }
    /**
     * Load lại cây đơn vị
     */
    reloadTreeOrganization(data) {
        this.ORGANIZATION.next({ type: 'RELOAD_TREE', data: data });
    }
    reloadGridOrganization(data) {
        this.ORGANIZATION.next({ type: 'RELOAD_GRID', data: data });
    }
    resolveUrlEmployee(data) {
        this.EMPLOYEE_URL.next(data);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: HelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: HelperService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: HelperService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyeC1zY29yZS9zcmMvbGliL3NoYXJlZC9zZXJ2aWNlcy9oZWxwZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQVcsTUFBTSxNQUFNLENBQUM7O0FBS2hELE1BQU0sT0FBTyxhQUFhO0lBY3hCO1FBYk8saUJBQVksR0FBRyxJQUFJLGVBQWUsQ0FBTSxFQUFFLENBQUMsQ0FBQztRQUM1QyxzQkFBaUIsR0FBRyxJQUFJLGVBQWUsQ0FBTSxFQUFFLENBQUMsQ0FBQztRQUNqRCx1QkFBa0IsR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQyw0QkFBdUIsR0FBRyxJQUFJLGVBQWUsQ0FBTSxFQUFFLENBQUMsQ0FBQztRQUN2RCx3QkFBbUIsR0FBRyxJQUFJLGVBQWUsQ0FBTSxFQUFFLENBQUMsQ0FBQztRQUNuRCxpQkFBWSxHQUFHLElBQUksZUFBZSxDQUFNLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLHdCQUFtQixHQUFHLElBQUksZUFBZSxDQUFNLEVBQUUsQ0FBQyxDQUFDO1FBQ25ELHVCQUFrQixHQUFHLElBQUksZUFBZSxDQUFNLEVBQUUsQ0FBQyxDQUFDO1FBQ2xELG9CQUFlLEdBQWlCLElBQUksZUFBZSxDQUFNLElBQUksQ0FBQyxDQUFDO1FBQy9ELG1CQUFjLEdBQWlCLElBQUksZUFBZSxDQUFNLElBQUksQ0FBQyxDQUFDO1FBQzlELG9CQUFlLEdBQWlCLElBQUksZUFBZSxDQUFNLElBQUksQ0FBQyxDQUFDO1FBQy9ELFlBQU8sR0FBaUIsSUFBSSxlQUFlLENBQU0sSUFBSSxDQUFDLENBQUM7UUFDdkQsY0FBUyxHQUFpQixJQUFJLGVBQWUsQ0FBTSxJQUFJLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBQ2pCOzs7T0FHRztJQUNILHFCQUFxQixDQUFDLElBQVM7UUFDN0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUNEOzs7T0FHRztJQUNILG9CQUFvQixDQUFDLElBQVM7UUFDNUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0gsWUFBWSxDQUFDLFlBQXFCO1FBQ2hDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUNEOzs7T0FHRztJQUNILGFBQWEsQ0FBQyxJQUFTO1FBQ3JCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkMsc0NBQXNDO0lBQ3hDLENBQUM7SUFFRCxvQkFBb0I7UUFDbEIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3JELENBQUM7SUFDRDs7T0FFRztJQUNILHNCQUFzQixDQUFDLElBQVM7UUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxzQkFBc0IsQ0FBQyxJQUFTO1FBQzlCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUMsSUFBSSxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQsa0JBQWtCLENBQUMsSUFBUztRQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDOzhHQTdEVSxhQUFhO2tIQUFiLGFBQWEsY0FGWixNQUFNOzsyRkFFUCxhQUFhO2tCQUh6QixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBIZWxwZXJTZXJ2aWNlIHtcclxuICBwdWJsaWMgT1JHQU5JWkFUSU9OID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KFtdKTtcclxuICBwdWJsaWMgQVBQX1RPQVNUX01FU1NBR0UgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4oW10pO1xyXG4gIHB1YmxpYyBBUFBfQ09ORklSTV9ERUxFVEUgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KG51bGwpO1xyXG4gIHB1YmxpYyBBUFBfU0hPV19ISURFX0xFRlRfTUVOVSA9IG5ldyBCZWhhdmlvclN1YmplY3Q8YW55PihbXSk7XHJcbiAgcHVibGljIEFQUF9TSE9XX1BST0NFU1NJTkcgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4oW10pO1xyXG4gIHB1YmxpYyBFTVBMT1lFRV9VUkwgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4oW10pO1xyXG4gIHB1YmxpYyBJTlNFUlRfV09SS19QUk9DRVNTID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KFtdKTtcclxuICBwdWJsaWMgQ0hFQ0tfV09SS19QUk9DRVNTID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KFtdKTtcclxuICBwdWJsaWMgTEFOR1VBR0VfQ0hBTkdFOiBTdWJqZWN0PGFueT4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4obnVsbCk7XHJcbiAgcHVibGljIFBST0NFU1NfTE9BREVSOiBTdWJqZWN0PGFueT4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4obnVsbCk7XHJcbiAgcHVibGljIE1FU1NBR0VfVE9BU1RFUjogU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KG51bGwpO1xyXG4gIHB1YmxpYyBDT05GSVJNOiBTdWJqZWN0PGFueT4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4obnVsbCk7XHJcbiAgcHVibGljIExPQURfVVNFUjogU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KG51bGwpO1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcbiAgLyoqXHJcbiAgICogYWZ0ZXJTYXZlT3JnYW5pemF0aW9uXHJcbiAgICogcGFyYW0gZGF0YVxyXG4gICAqL1xyXG4gIGFmdGVyU2F2ZU9yZ2FuaXphdGlvbihkYXRhOiBhbnkpIHtcclxuICAgIHRoaXMuT1JHQU5JWkFUSU9OLm5leHQoZGF0YSk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIGNyZWF0ZU1lc3NhZ2VcclxuICAgKiBwYXJhbSBkYXRhXHJcbiAgICovXHJcbiAgcHJvY2Vzc1JldHVybk1lc3NhZ2UoZGF0YTogYW55KSB7XHJcbiAgICB0aGlzLkFQUF9UT0FTVF9NRVNTQUdFLm5leHQoZGF0YSk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIHByb2Nlc3NpbmdcclxuICAgKiBwYXJhbSBkYXRhXHJcbiAgICovXHJcbiAgaXNQcm9jZXNzaW5nKGlzUHJvY2Vzc2luZzogYm9vbGVhbikge1xyXG4gICAgdGhpcy5BUFBfU0hPV19QUk9DRVNTSU5HLm5leHQoaXNQcm9jZXNzaW5nKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogY29uZmlybURlbGV0ZVxyXG4gICAqIHBhcmFtIGRhdGFcclxuICAgKi9cclxuICBjb25maXJtRGVsZXRlKGRhdGE6IGFueSkge1xyXG4gICAgdGhpcy5BUFBfQ09ORklSTV9ERUxFVEUubmV4dChkYXRhKTtcclxuICAgIC8vIHRoaXMuQVBQX0NPTkZJUk1fREVMRVRFLnBpcGUoZGF0YSk7XHJcbiAgfVxyXG5cclxuICByZWZyZXNoQ29uZmlybURlbGV0ZSgpIHtcclxuICAgIHRoaXMuQVBQX0NPTkZJUk1fREVMRVRFID0gbmV3IEJlaGF2aW9yU3ViamVjdChudWxsKVxyXG4gIH1cclxuICAvKipcclxuICAgKiBMb2FkIGzhuqFpIGPDonkgxJHGoW4gduG7i1xyXG4gICAqL1xyXG4gIHJlbG9hZFRyZWVPcmdhbml6YXRpb24oZGF0YTogYW55KSB7XHJcbiAgICB0aGlzLk9SR0FOSVpBVElPTi5uZXh0KHt0eXBlOiAnUkVMT0FEX1RSRUUnLCBkYXRhOiBkYXRhfSk7XHJcbiAgfVxyXG5cclxuICByZWxvYWRHcmlkT3JnYW5pemF0aW9uKGRhdGE6IGFueSkge1xyXG4gICAgdGhpcy5PUkdBTklaQVRJT04ubmV4dCh7dHlwZTogJ1JFTE9BRF9HUklEJywgZGF0YTogZGF0YX0pO1xyXG4gIH1cclxuICBcclxuICByZXNvbHZlVXJsRW1wbG95ZWUoZGF0YTogYW55KSB7XHJcbiAgICB0aGlzLkVNUExPWUVFX1VSTC5uZXh0KGRhdGEpO1xyXG4gIH1cclxufVxyXG4iXX0=