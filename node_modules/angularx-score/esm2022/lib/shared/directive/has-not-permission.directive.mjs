import { Directive, Input } from '@angular/core';
import { CommonUtils } from '../services/common-utils.service';
import * as i0 from "@angular/core";
export class HasNotPermissionDirective {
    constructor(element, templateRef, viewContainer) {
        this.element = element;
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
    }
    set hasNotPermission(value) {
        this._value = value;
        this.updateView(this._value);
    }
    ngOnInit() {
    }
    updateView(value) {
        // if (!value[0].permissions || value[0].permissions.length <= 0) {
        //   this.viewContainer.createEmbeddedView(this.templateRef);
        // } else {
        //   const rsSearch = value[0].permissions.findIndex((x: any) => x.operationCode === CommonUtils.getPermissionCode(value[1]));
        //   if (rsSearch >= 0) {
        //     this.viewContainer.clear();
        //   } else {
        //     this.viewContainer.createEmbeddedView(this.templateRef);
        //   }
        // }
        if (!CommonUtils.havePermission(value[1], value[2])) {
            this.viewContainer.createEmbeddedView(this.templateRef);
        }
        else {
            this.viewContainer.clear();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: HasNotPermissionDirective, deps: [{ token: i0.ElementRef }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.5", type: HasNotPermissionDirective, selector: "[hasNotPermission]", inputs: { hasNotPermission: "hasNotPermission" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: HasNotPermissionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[hasNotPermission]'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { hasNotPermission: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzLW5vdC1wZXJtaXNzaW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXJ4LXNjb3JlL3NyYy9saWIvc2hhcmVkL2RpcmVjdGl2ZS9oYXMtbm90LXBlcm1pc3Npb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFELEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0FBSy9ELE1BQU0sT0FBTyx5QkFBeUI7SUFFcEMsWUFDVSxPQUFtQixFQUNuQixXQUE2QixFQUM3QixhQUErQjtRQUYvQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQ25CLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7SUFHekMsQ0FBQztJQUVELElBQ0ksZ0JBQWdCLENBQUMsS0FBVTtRQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsUUFBUTtJQUVSLENBQUM7SUFFTyxVQUFVLENBQUMsS0FBVTtRQUMzQixtRUFBbUU7UUFDbkUsNkRBQTZEO1FBQzdELFdBQVc7UUFDWCw4SEFBOEg7UUFDOUgseUJBQXlCO1FBQ3pCLGtDQUFrQztRQUNsQyxhQUFhO1FBQ2IsK0RBQStEO1FBQy9ELE1BQU07UUFDTixJQUFJO1FBQ0osSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ25ELElBQUksQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ3pEO2FBQU07WUFDTCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQzVCO0lBQ0gsQ0FBQzs4R0FwQ1UseUJBQXlCO2tHQUF6Qix5QkFBeUI7OzJGQUF6Qix5QkFBeUI7a0JBSHJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtpQkFDL0I7MEpBWUssZ0JBQWdCO3NCQURuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBPbkluaXQsIEVsZW1lbnRSZWYsIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25VdGlscyB9IGZyb20gJy4uL3NlcnZpY2VzL2NvbW1vbi11dGlscy5zZXJ2aWNlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2hhc05vdFBlcm1pc3Npb25dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSGFzTm90UGVybWlzc2lvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgcHJpdmF0ZSBfdmFsdWU6IGFueTtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcclxuICAgIHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sXHJcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWZcclxuICApIHtcclxuXHJcbiAgfVxyXG5cclxuICBASW5wdXQoKVxyXG4gIHNldCBoYXNOb3RQZXJtaXNzaW9uKHZhbHVlOiBhbnkpIHtcclxuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XHJcbiAgICB0aGlzLnVwZGF0ZVZpZXcodGhpcy5fdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB1cGRhdGVWaWV3KHZhbHVlOiBhbnkpIHtcclxuICAgIC8vIGlmICghdmFsdWVbMF0ucGVybWlzc2lvbnMgfHwgdmFsdWVbMF0ucGVybWlzc2lvbnMubGVuZ3RoIDw9IDApIHtcclxuICAgIC8vICAgdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUmVmKTtcclxuICAgIC8vIH0gZWxzZSB7XHJcbiAgICAvLyAgIGNvbnN0IHJzU2VhcmNoID0gdmFsdWVbMF0ucGVybWlzc2lvbnMuZmluZEluZGV4KCh4OiBhbnkpID0+IHgub3BlcmF0aW9uQ29kZSA9PT0gQ29tbW9uVXRpbHMuZ2V0UGVybWlzc2lvbkNvZGUodmFsdWVbMV0pKTtcclxuICAgIC8vICAgaWYgKHJzU2VhcmNoID49IDApIHtcclxuICAgIC8vICAgICB0aGlzLnZpZXdDb250YWluZXIuY2xlYXIoKTtcclxuICAgIC8vICAgfSBlbHNlIHtcclxuICAgIC8vICAgICB0aGlzLnZpZXdDb250YWluZXIuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVSZWYpO1xyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9XHJcbiAgICBpZiAoIUNvbW1vblV0aWxzLmhhdmVQZXJtaXNzaW9uKHZhbHVlWzFdLCB2YWx1ZVsyXSkpIHtcclxuICAgICAgdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUmVmKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMudmlld0NvbnRhaW5lci5jbGVhcigpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=