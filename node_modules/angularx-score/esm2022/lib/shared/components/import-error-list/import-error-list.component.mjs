import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "primeng/dynamicdialog";
import * as i2 from "primeng/button";
import * as i3 from "primeng/api";
import * as i4 from "primeng/table";
import * as i5 from "angular-l10n";
export class ImportErrorListComponent {
    constructor(_injector, dynamicDialogRef, config) {
        this._injector = _injector;
        this.dynamicDialogRef = dynamicDialogRef;
        this.config = config;
        this.errorList = [];
        this.errorList = config.data.errorList;
    }
    onCancel() {
        this.dynamicDialogRef.close();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: ImportErrorListComponent, deps: [{ token: i0.Injector }, { token: i1.DynamicDialogRef }, { token: i1.DynamicDialogConfig }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.5", type: ImportErrorListComponent, selector: "app-import-error-list", ngImport: i0, template: "<p-table [value]=\"errorList\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th style=\"width: 5%;\">#</th>\n            <th style=\"width: 15%;\">D\u00F2ng</th>\n            <th style=\"width: 15%;\">C\u1ED9t</th>\n            <th style=\"width: 65%;\">L\u1ED7i</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item let-index=\"rowIndex\">\n        <tr>\n            <td><span class=\"p-column-title\">STT</span>{{ index + 1 }}</td>\n            <td><span class=\"p-column-title\">D\u00F2ng</span>{{ item.row }}</td>\n            <td><span class=\"p-column-title\">C\u1ED9t</span>{{ item.columnLabel }}</td>\n            <td><span class=\"p-column-title\">L\u1ED7i</span><span [innerHtml]='item?.description'></span></td>\n        </tr>\n    </ng-template>\n</p-table>\n<div class=\"pt-3 d-flex justify-content-center\">\n    <p-button icon=\"pi pi-times\" [label]=\"'common.label.cancel' | translateAsync\"\n        styleClass=\"p-button-outlined\" (onClick)=\"onCancel()\"></p-button>\n</div>", styles: [""], dependencies: [{ kind: "component", type: i2.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "directive", type: i3.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "component", type: i4.Table, selector: "p-table", inputs: ["frozenColumns", "frozenValue", "style", "styleClass", "tableStyle", "tableStyleClass", "paginator", "pageLinks", "rowsPerPageOptions", "alwaysShowPaginator", "paginatorPosition", "paginatorStyleClass", "paginatorDropdownAppendTo", "paginatorDropdownScrollHeight", "currentPageReportTemplate", "showCurrentPageReport", "showJumpToPageDropdown", "showJumpToPageInput", "showFirstLastIcon", "showPageLinks", "defaultSortOrder", "sortMode", "resetPageOnSort", "selectionMode", "selectionPageOnly", "contextMenuSelection", "contextMenuSelectionMode", "dataKey", "metaKeySelection", "rowSelectable", "rowTrackBy", "lazy", "lazyLoadOnInit", "compareSelectionBy", "csvSeparator", "exportFilename", "filters", "globalFilterFields", "filterDelay", "filterLocale", "expandedRowKeys", "editingRowKeys", "rowExpandMode", "scrollable", "scrollDirection", "rowGroupMode", "scrollHeight", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "virtualScrollDelay", "frozenWidth", "responsive", "contextMenu", "resizableColumns", "columnResizeMode", "reorderableColumns", "loading", "loadingIcon", "showLoader", "rowHover", "customSort", "showInitialSortBadge", "autoLayout", "exportFunction", "exportHeader", "stateKey", "stateStorage", "editMode", "groupRowsBy", "groupRowsByOrder", "responsiveLayout", "breakpoint", "paginatorLocale", "value", "columns", "first", "rows", "totalRecords", "sortField", "sortOrder", "multiSortMeta", "selection", "selectAll", "virtualRowHeight"], outputs: ["contextMenuSelectionChange", "selectAllChange", "selectionChange", "onRowSelect", "onRowUnselect", "onPage", "onSort", "onFilter", "onLazyLoad", "onRowExpand", "onRowCollapse", "onContextMenuSelect", "onColResize", "onColReorder", "onRowReorder", "onEditInit", "onEditComplete", "onEditCancel", "onHeaderCheckboxToggle", "sortFunction", "firstChange", "rowsChange", "onStateSave", "onStateRestore"] }, { kind: "pipe", type: i5.L10nTranslateAsyncPipe, name: "translateAsync" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: ImportErrorListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-import-error-list', template: "<p-table [value]=\"errorList\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th style=\"width: 5%;\">#</th>\n            <th style=\"width: 15%;\">D\u00F2ng</th>\n            <th style=\"width: 15%;\">C\u1ED9t</th>\n            <th style=\"width: 65%;\">L\u1ED7i</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item let-index=\"rowIndex\">\n        <tr>\n            <td><span class=\"p-column-title\">STT</span>{{ index + 1 }}</td>\n            <td><span class=\"p-column-title\">D\u00F2ng</span>{{ item.row }}</td>\n            <td><span class=\"p-column-title\">C\u1ED9t</span>{{ item.columnLabel }}</td>\n            <td><span class=\"p-column-title\">L\u1ED7i</span><span [innerHtml]='item?.description'></span></td>\n        </tr>\n    </ng-template>\n</p-table>\n<div class=\"pt-3 d-flex justify-content-center\">\n    <p-button icon=\"pi pi-times\" [label]=\"'common.label.cancel' | translateAsync\"\n        styleClass=\"p-button-outlined\" (onClick)=\"onCancel()\"></p-button>\n</div>" }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.DynamicDialogRef }, { type: i1.DynamicDialogConfig }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wb3J0LWVycm9yLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhcngtc2NvcmUvc3JjL2xpYi9zaGFyZWQvY29tcG9uZW50cy9pbXBvcnQtZXJyb3ItbGlzdC9pbXBvcnQtZXJyb3ItbGlzdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyeC1zY29yZS9zcmMvbGliL3NoYXJlZC9jb21wb25lbnRzL2ltcG9ydC1lcnJvci1saXN0L2ltcG9ydC1lcnJvci1saXN0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVksTUFBTSxlQUFlLENBQUM7Ozs7Ozs7QUFRcEQsTUFBTSxPQUFPLHdCQUF3QjtJQUVuQyxZQUNVLFNBQW1CLEVBQ3BCLGdCQUFrQyxFQUNsQyxNQUEyQjtRQUYxQixjQUFTLEdBQVQsU0FBUyxDQUFVO1FBQ3BCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsV0FBTSxHQUFOLE1BQU0sQ0FBcUI7UUFKcEMsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQU1iLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDekMsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDaEMsQ0FBQzs4R0FaVSx3QkFBd0I7a0dBQXhCLHdCQUF3Qiw2RENSckMsNGhDQXFCTTs7MkZEYk8sd0JBQXdCO2tCQUxwQyxTQUFTOytCQUNFLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UsIER5bmFtaWNEaWFsb2dDb25maWcsIER5bmFtaWNEaWFsb2dSZWYgfSBmcm9tICdwcmltZW5nL2R5bmFtaWNkaWFsb2cnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtaW1wb3J0LWVycm9yLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW1wb3J0LWVycm9yLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbXBvcnQtZXJyb3ItbGlzdC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEltcG9ydEVycm9yTGlzdENvbXBvbmVudCB7XG4gIGVycm9yTGlzdCA9IFtdO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9pbmplY3RvcjogSW5qZWN0b3IsXG4gICAgcHVibGljIGR5bmFtaWNEaWFsb2dSZWY6IER5bmFtaWNEaWFsb2dSZWYsXG4gICAgcHVibGljIGNvbmZpZzogRHluYW1pY0RpYWxvZ0NvbmZpZyxcbiAgKSB7XG4gICAgdGhpcy5lcnJvckxpc3QgPSBjb25maWcuZGF0YS5lcnJvckxpc3Q7XG4gIH1cblxuICBvbkNhbmNlbCgpIHtcbiAgICB0aGlzLmR5bmFtaWNEaWFsb2dSZWYuY2xvc2UoKTtcbiAgfVxufVxuIiwiPHAtdGFibGUgW3ZhbHVlXT1cImVycm9yTGlzdFwiPlxuICAgIDxuZy10ZW1wbGF0ZSBwVGVtcGxhdGU9XCJoZWFkZXJcIj5cbiAgICAgICAgPHRyPlxuICAgICAgICAgICAgPHRoIHN0eWxlPVwid2lkdGg6IDUlO1wiPiM8L3RoPlxuICAgICAgICAgICAgPHRoIHN0eWxlPVwid2lkdGg6IDE1JTtcIj5Ew7JuZzwvdGg+XG4gICAgICAgICAgICA8dGggc3R5bGU9XCJ3aWR0aDogMTUlO1wiPkPhu5l0PC90aD5cbiAgICAgICAgICAgIDx0aCBzdHlsZT1cIndpZHRoOiA2NSU7XCI+TOG7l2k8L3RoPlxuICAgICAgICA8L3RyPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPG5nLXRlbXBsYXRlIHBUZW1wbGF0ZT1cImJvZHlcIiBsZXQtaXRlbSBsZXQtaW5kZXg9XCJyb3dJbmRleFwiPlxuICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9XCJwLWNvbHVtbi10aXRsZVwiPlNUVDwvc3Bhbj57eyBpbmRleCArIDEgfX08L3RkPlxuICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPVwicC1jb2x1bW4tdGl0bGVcIj5Ew7JuZzwvc3Bhbj57eyBpdGVtLnJvdyB9fTwvdGQ+XG4gICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9XCJwLWNvbHVtbi10aXRsZVwiPkPhu5l0PC9zcGFuPnt7IGl0ZW0uY29sdW1uTGFiZWwgfX08L3RkPlxuICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPVwicC1jb2x1bW4tdGl0bGVcIj5M4buXaTwvc3Bhbj48c3BhbiBbaW5uZXJIdG1sXT0naXRlbT8uZGVzY3JpcHRpb24nPjwvc3Bhbj48L3RkPlxuICAgICAgICA8L3RyPlxuICAgIDwvbmctdGVtcGxhdGU+XG48L3AtdGFibGU+XG48ZGl2IGNsYXNzPVwicHQtMyBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlclwiPlxuICAgIDxwLWJ1dHRvbiBpY29uPVwicGkgcGktdGltZXNcIiBbbGFiZWxdPVwiJ2NvbW1vbi5sYWJlbC5jYW5jZWwnIHwgdHJhbnNsYXRlQXN5bmNcIlxuICAgICAgICBzdHlsZUNsYXNzPVwicC1idXR0b24tb3V0bGluZWRcIiAob25DbGljayk9XCJvbkNhbmNlbCgpXCI+PC9wLWJ1dHRvbj5cbjwvZGl2PiJdfQ==