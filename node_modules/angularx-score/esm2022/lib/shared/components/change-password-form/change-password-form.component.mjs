import { Component } from '@angular/core';
import { BaseComponent } from '../base-component/base-component.component';
import { ValidationService } from '../../services/validation.service';
import { CommonUtils } from '../../services/common-utils.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "angular-l10n";
import * as i3 from "primeng/dynamicdialog";
import * as i4 from "primeng/button";
import * as i5 from "@angular/forms";
import * as i6 from "../text-input/text-input.component";
export class ChangePasswordFormComponent extends BaseComponent {
    constructor(_injector, actr, translate, dynamicDialogRef, config) {
        super(_injector, actr, '');
        this._injector = _injector;
        this.translate = translate;
        this.dynamicDialogRef = dynamicDialogRef;
        this.config = config;
        this.formConfig = {
            currentPassword: ['', [ValidationService.required]],
            newPassword: ['', [ValidationService.required]],
            confirmPassword: ['', [ValidationService.required]],
        };
        this.formSave = this.buildForm(config?.data || {}, this.formConfig);
    }
    get f() {
        return this.formSave.controls;
    }
    onSave() {
        if (!CommonUtils.isValidForm(this.formSave)) {
            return;
        }
        this.confirmMessage(this.translate.translate('common.label.confirmSave'), () => {
            this.config.data?.authService.changePassword(this.formSave.value)
                .subscribe((res) => {
                if (this.requestIsSuccess(res)) {
                    this.dynamicDialogRef.close(res);
                }
            });
        }, () => {
        });
    }
    onClose() {
        this.dynamicDialogRef.close();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: ChangePasswordFormComponent, deps: [{ token: i0.Injector }, { token: i1.ActivatedRoute }, { token: i2.L10nTranslationService }, { token: i3.DynamicDialogRef }, { token: i3.DynamicDialogConfig }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.5", type: ChangePasswordFormComponent, selector: "app-change-password-form", usesInheritance: true, ngImport: i0, template: "<form [formGroup]=\"formSave\">\n    <div class=\"formgrid grid\">\n        <app-text-input [property]=\"f['currentPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'M\u1EADt kh\u1EA9u hi\u1EC7n t\u1EA1i'\"\n        ></app-text-input>\n        <app-text-input [property]=\"f['newPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'M\u1EADt kh\u1EA9u m\u1EDBi'\"\n        ></app-text-input>\n        <app-text-input [property]=\"f['confirmPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'X\u00E1c nh\u1EADn m\u1EADt kh\u1EA9u m\u1EDBi'\"\n        ></app-text-input>\n    </div>\n    <div class=\"flex justify-content-center app-dialog-footer\">\n        <p-button icon=\"pi pi-times\" [label]=\"'common.label.quit' | translateAsync\" styleClass=\"p-button-outlined\" (onClick)=\"onClose()\"></p-button>\n        <p-button icon=\"pi pi-save\" [label]=\"'common.label.save' | translateAsync\" (onClick)=\"onSave()\"></p-button>\n    </div>\n</form>", styles: [""], dependencies: [{ kind: "component", type: i4.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "directive", type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "component", type: i6.TextInputComponent, selector: "app-text-input", inputs: ["property", "wrapClass", "type", "maxLength", "rows", "labelValue", "placeholder", "autofocus", "disabled", "required", "readonly"], outputs: ["onChange", "onBlur"] }, { kind: "pipe", type: i2.L10nTranslateAsyncPipe, name: "translateAsync" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: ChangePasswordFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-change-password-form', template: "<form [formGroup]=\"formSave\">\n    <div class=\"formgrid grid\">\n        <app-text-input [property]=\"f['currentPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'M\u1EADt kh\u1EA9u hi\u1EC7n t\u1EA1i'\"\n        ></app-text-input>\n        <app-text-input [property]=\"f['newPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'M\u1EADt kh\u1EA9u m\u1EDBi'\"\n        ></app-text-input>\n        <app-text-input [property]=\"f['confirmPassword']\"\n            class=\"col-12 md:col-12\"\n            [type]=\"INPUT_TYPE.PASSWORD\"\n            [labelValue]=\"'X\u00E1c nh\u1EADn m\u1EADt kh\u1EA9u m\u1EDBi'\"\n        ></app-text-input>\n    </div>\n    <div class=\"flex justify-content-center app-dialog-footer\">\n        <p-button icon=\"pi pi-times\" [label]=\"'common.label.quit' | translateAsync\" styleClass=\"p-button-outlined\" (onClick)=\"onClose()\"></p-button>\n        <p-button icon=\"pi pi-save\" [label]=\"'common.label.save' | translateAsync\" (onClick)=\"onSave()\"></p-button>\n    </div>\n</form>" }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.ActivatedRoute }, { type: i2.L10nTranslationService }, { type: i3.DynamicDialogRef }, { type: i3.DynamicDialogConfig }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLXBhc3N3b3JkLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhcngtc2NvcmUvc3JjL2xpYi9zaGFyZWQvY29tcG9uZW50cy9jaGFuZ2UtcGFzc3dvcmQtZm9ybS9jaGFuZ2UtcGFzc3dvcmQtZm9ybS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyeC1zY29yZS9zcmMvbGliL3NoYXJlZC9jb21wb25lbnRzL2NoYW5nZS1wYXNzd29yZC1mb3JtL2NoYW5nZS1wYXNzd29yZC1mb3JtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBS3RFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQzs7Ozs7Ozs7QUFPbEUsTUFBTSxPQUFPLDJCQUE0QixTQUFRLGFBQWE7SUFRNUQsWUFDUyxTQUFtQixFQUMxQixJQUFvQixFQUNiLFNBQWlDLEVBQ2pDLGdCQUFrQyxFQUNsQyxNQUEyQjtRQUdsQyxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztRQVBwQixjQUFTLEdBQVQsU0FBUyxDQUFVO1FBRW5CLGNBQVMsR0FBVCxTQUFTLENBQXdCO1FBQ2pDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsV0FBTSxHQUFOLE1BQU0sQ0FBcUI7UUFacEMsZUFBVSxHQUFHO1lBQ1gsZUFBZSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDbkQsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDL0MsZUFBZSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDcEQsQ0FBQztRQVlBLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVELElBQUksQ0FBQztRQUNILE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU07UUFDSixJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDM0MsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQyxFQUFFLEdBQUcsRUFBRTtZQUM3RSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO2lCQUM5RCxTQUFTLENBQUMsQ0FBQyxHQUFRLEVBQUUsRUFBRTtnQkFDdEIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQzlCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ2xDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ1IsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzhHQXpDVSwyQkFBMkI7a0dBQTNCLDJCQUEyQix1RkNkeEMscXBDQXNCTzs7MkZEUk0sMkJBQTJCO2tCQUx2QyxTQUFTOytCQUNFLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UtY29tcG9uZW50L2Jhc2UtY29tcG9uZW50LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFZhbGlkYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdmFsaWRhdGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IEwxMG5UcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICdhbmd1bGFyLWwxMG4nO1xyXG5pbXBvcnQgeyBEeW5hbWljRGlhbG9nQ29uZmlnLCBEeW5hbWljRGlhbG9nUmVmIH0gZnJvbSAncHJpbWVuZy9keW5hbWljZGlhbG9nJztcclxuaW1wb3J0IHsgQ29tbW9uVXRpbHMgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9jb21tb24tdXRpbHMuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1jaGFuZ2UtcGFzc3dvcmQtZm9ybScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NoYW5nZS1wYXNzd29yZC1mb3JtLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jaGFuZ2UtcGFzc3dvcmQtZm9ybS5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGFuZ2VQYXNzd29yZEZvcm1Db21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcclxuICBmb3JtQ29uZmlnID0ge1xyXG4gICAgY3VycmVudFBhc3N3b3JkOiBbJycsIFtWYWxpZGF0aW9uU2VydmljZS5yZXF1aXJlZF1dLFxyXG4gICAgbmV3UGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRpb25TZXJ2aWNlLnJlcXVpcmVkXV0sXHJcbiAgICBjb25maXJtUGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRpb25TZXJ2aWNlLnJlcXVpcmVkXV0sXHJcbiAgfTtcclxuICBmb3JtU2F2ZTogRm9ybUdyb3VwO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyBfaW5qZWN0b3I6IEluamVjdG9yLFxyXG4gICAgYWN0cjogQWN0aXZhdGVkUm91dGUsXHJcbiAgICBwdWJsaWMgdHJhbnNsYXRlOiBMMTBuVHJhbnNsYXRpb25TZXJ2aWNlLFxyXG4gICAgcHVibGljIGR5bmFtaWNEaWFsb2dSZWY6IER5bmFtaWNEaWFsb2dSZWYsXHJcbiAgICBwdWJsaWMgY29uZmlnOiBEeW5hbWljRGlhbG9nQ29uZmlnLFxyXG4gICAgLy8gcHVibGljIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSxcclxuICApIHtcclxuICAgIHN1cGVyKF9pbmplY3RvciwgYWN0ciwgJycpO1xyXG4gICAgdGhpcy5mb3JtU2F2ZSA9IHRoaXMuYnVpbGRGb3JtKGNvbmZpZz8uZGF0YSB8fCB7fSwgdGhpcy5mb3JtQ29uZmlnKTtcclxuICB9XHJcblxyXG4gIGdldCBmKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZm9ybVNhdmUuY29udHJvbHM7XHJcbiAgfVxyXG5cclxuICBvblNhdmUoKSB7XHJcbiAgICBpZiAoIUNvbW1vblV0aWxzLmlzVmFsaWRGb3JtKHRoaXMuZm9ybVNhdmUpKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMuY29uZmlybU1lc3NhZ2UodGhpcy50cmFuc2xhdGUudHJhbnNsYXRlKCdjb21tb24ubGFiZWwuY29uZmlybVNhdmUnKSwgKCkgPT4gey8vIG9uIGFjY2VwdGVkXHJcbiAgICAgIHRoaXMuY29uZmlnLmRhdGE/LmF1dGhTZXJ2aWNlLmNoYW5nZVBhc3N3b3JkKHRoaXMuZm9ybVNhdmUudmFsdWUpXHJcbiAgICAgICAgLnN1YnNjcmliZSgocmVzOiBhbnkpID0+IHtcclxuICAgICAgICAgIGlmICh0aGlzLnJlcXVlc3RJc1N1Y2Nlc3MocmVzKSkge1xyXG4gICAgICAgICAgICB0aGlzLmR5bmFtaWNEaWFsb2dSZWYuY2xvc2UocmVzKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sICgpID0+IHsvLyBvbiByZWplY3RlZFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBvbkNsb3NlKCkge1xyXG4gICAgdGhpcy5keW5hbWljRGlhbG9nUmVmLmNsb3NlKCk7XHJcbiAgfVxyXG59XHJcbiIsIjxmb3JtIFtmb3JtR3JvdXBdPVwiZm9ybVNhdmVcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZm9ybWdyaWQgZ3JpZFwiPlxuICAgICAgICA8YXBwLXRleHQtaW5wdXQgW3Byb3BlcnR5XT1cImZbJ2N1cnJlbnRQYXNzd29yZCddXCJcbiAgICAgICAgICAgIGNsYXNzPVwiY29sLTEyIG1kOmNvbC0xMlwiXG4gICAgICAgICAgICBbdHlwZV09XCJJTlBVVF9UWVBFLlBBU1NXT1JEXCJcbiAgICAgICAgICAgIFtsYWJlbFZhbHVlXT1cIidN4bqtdCBraOG6qXUgaGnhu4duIHThuqFpJ1wiXG4gICAgICAgID48L2FwcC10ZXh0LWlucHV0PlxuICAgICAgICA8YXBwLXRleHQtaW5wdXQgW3Byb3BlcnR5XT1cImZbJ25ld1Bhc3N3b3JkJ11cIlxuICAgICAgICAgICAgY2xhc3M9XCJjb2wtMTIgbWQ6Y29sLTEyXCJcbiAgICAgICAgICAgIFt0eXBlXT1cIklOUFVUX1RZUEUuUEFTU1dPUkRcIlxuICAgICAgICAgICAgW2xhYmVsVmFsdWVdPVwiJ03huq10IGto4bqpdSBt4bubaSdcIlxuICAgICAgICA+PC9hcHAtdGV4dC1pbnB1dD5cbiAgICAgICAgPGFwcC10ZXh0LWlucHV0IFtwcm9wZXJ0eV09XCJmWydjb25maXJtUGFzc3dvcmQnXVwiXG4gICAgICAgICAgICBjbGFzcz1cImNvbC0xMiBtZDpjb2wtMTJcIlxuICAgICAgICAgICAgW3R5cGVdPVwiSU5QVVRfVFlQRS5QQVNTV09SRFwiXG4gICAgICAgICAgICBbbGFiZWxWYWx1ZV09XCInWMOhYyBuaOG6rW4gbeG6rXQga2jhuql1IG3hu5tpJ1wiXG4gICAgICAgID48L2FwcC10ZXh0LWlucHV0PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIgYXBwLWRpYWxvZy1mb290ZXJcIj5cbiAgICAgICAgPHAtYnV0dG9uIGljb249XCJwaSBwaS10aW1lc1wiIFtsYWJlbF09XCInY29tbW9uLmxhYmVsLnF1aXQnIHwgdHJhbnNsYXRlQXN5bmNcIiBzdHlsZUNsYXNzPVwicC1idXR0b24tb3V0bGluZWRcIiAob25DbGljayk9XCJvbkNsb3NlKClcIj48L3AtYnV0dG9uPlxuICAgICAgICA8cC1idXR0b24gaWNvbj1cInBpIHBpLXNhdmVcIiBbbGFiZWxdPVwiJ2NvbW1vbi5sYWJlbC5zYXZlJyB8IHRyYW5zbGF0ZUFzeW5jXCIgKG9uQ2xpY2spPVwib25TYXZlKClcIj48L3AtYnV0dG9uPlxuICAgIDwvZGl2PlxuPC9mb3JtPiJdfQ==