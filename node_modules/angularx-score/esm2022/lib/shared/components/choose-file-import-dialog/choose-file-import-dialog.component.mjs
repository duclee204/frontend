import { Component } from '@angular/core';
import { BaseComponent } from '../base-component/base-component.component';
import { CommonUtils } from '../../services/common-utils.service';
import { saveAs } from 'file-saver';
import { ImportErrorListComponent } from '../import-error-list/import-error-list.component';
import * as i0 from "@angular/core";
import * as i1 from "primeng/dynamicdialog";
import * as i2 from "../../services/import-form.service";
import * as i3 from "@angular/common";
import * as i4 from "primeng/button";
import * as i5 from "@angular/forms";
import * as i6 from "primeng/radiobutton";
import * as i7 from "../../directive/drag-drop.directive";
import * as i8 from "../../directive/input-special.directive";
import * as i9 from "angular-l10n";
export class ChooseFileImportDialogComponent extends BaseComponent {
    constructor(_injector, dynamicDialogRef, config, importFormService, dialogService) {
        super(_injector);
        this._injector = _injector;
        this.dynamicDialogRef = dynamicDialogRef;
        this.config = config;
        this.importFormService = importFormService;
        this.dialogService = dialogService;
        this.selectedFile = null;
        this.urlApiDownloadTemp = '';
        this.urlApiImport = '';
        this.extraValue = {};
        this.errorList = [];
        this.actionType = 'THEM_MOI';
        this.showActionType = false;
        this.fileName = null;
        this.urlApiDownloadTemp = config.data.urlApiDownloadTemp;
        this.urlApiImport = config.data.urlApiImport;
        this.fileName = config.data.fileName;
        this.serviceAPI = config.data.serviceAPI;
        this.extraValue = config.data.extraValue || {};
        this.showActionType = config.data.showActionType;
    }
    filesDropped(event) {
        if (event && event.length > 1) {
            this.commonUtil.toastMessage('warn', 'common.toast.importMultiFile');
        }
        // validate file type
        // for (let i = 0; i < event.length; i++) {
        //   const file = event[i];
        //   console.log(' 12>>', file.file.name)
        // }
        this.selectedFile = event[0].file;
    }
    onFileInput(event) {
        const element = event.currentTarget;
        let fileList = element.files;
        if (!fileList || fileList.length > 1) {
            this.commonUtil.toastMessage('warn', 'common.toast.importMultiFile');
        }
        if (fileList == null || fileList.length == 0) {
            return;
        }
        this.selectedFile = fileList[0];
    }
    onRemoveFile(event) {
        event.stopPropagation();
        this.selectedFile = null;
    }
    onCancel() {
        this.dynamicDialogRef.close();
    }
    onDownloadTemplate() {
        this.importFormService.downloadTemplate(this.serviceAPI, this.urlApiDownloadTemp, this.extraValue).subscribe(res => {
            // const reportFile = new Blob([res], { type: getTypeExport('xlsx') });
            saveAs(res, `${this.fileName || 'template'}.xlsx`);
        });
    }
    onImport() {
        if (!this.selectedFile) {
            return;
        }
        // let formData = new FormData();
        // formData.append('file', this.selectedFile);
        const formData = CommonUtils.convertFormFile({
            ...this.extraValue,
            file: this.selectedFile,
            actionType: this.actionType
        });
        this.importFormService.doImport(this.serviceAPI, this.urlApiImport, formData).subscribe(res => {
            if (!CommonUtils.isSuccessRequest(res)) {
                this.ref = this.dialogService.open(ImportErrorListComponent, {
                    header: 'Danh sách lỗi',
                    width: CommonUtils.setWidthDiaglog('40%'),
                    contentStyle: { overflow: 'auto' },
                    baseZIndex: 99999,
                    maximizable: true,
                    data: {
                        errorList: res.data.errorList
                    }
                });
            }
            else {
                this.dynamicDialogRef.close(true);
            }
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: ChooseFileImportDialogComponent, deps: [{ token: i0.Injector }, { token: i1.DynamicDialogRef }, { token: i1.DynamicDialogConfig }, { token: i2.ImportFormService }, { token: i1.DialogService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.5", type: ChooseFileImportDialogComponent, selector: "app-choose-file-import-dialog", usesInheritance: true, ngImport: i0, template: "<div *ngIf=\"showActionType\">\n    <div class=\"field\">\n        <label class=\"font-semibold\">T\u00F9y ch\u1ECDn</label>\n        <div class=\"d-flex\">\n            <div class=\"field-checkbox mr-3\">\n                <p-radioButton [(ngModel)]=\"actionType\" inputId=\"THEM_MOI\" name=\"actionType\"\n                    [value]=\"'THEM_MOI'\"></p-radioButton>\n                <label for=\"THEM_MOI\" class=\"ml-2\">Th\u00EAm m\u1EDBi</label>\n            </div>\n            <div class=\"field-checkbox mr-3\">\n                <p-radioButton [(ngModel)]=\"actionType\" inputId=\"BO_SUNG\" name=\"actionType\"\n                    [value]=\"'BO_SUNG'\"></p-radioButton>\n                <label for=\"BO_SUNG\" class=\"ml-2\">B\u1ED5 sung</label>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"mb-2 p-2 download-template\">\n    <a (click)=\"onDownloadTemplate()\"><i class=\"fa fa-download mr-2\"></i> Download file m\u1EABu</a>\n</div>\n<div class=\"image-upload-wrap d-flex align-items-center\" appDrag (files)=\"filesDropped($event)\"\n    (click)=\"fileInput.click()\">\n    <input #fileInput class=\"file-upload-input\" type='file' hidden (change)=\"onFileInput($event)\" accept=\".xls,.xlsx\" />\n    <div class=\"drag-text text-center flex-1\">\n        <div>\n            <img src=\"assets/images/svg/excel-file.svg\" alt=\"Upload file\" width=\"70px\">\n        </div>\n        <ng-container *ngIf=\"!selectedFile\">\n            <h5>T\u1EA3i t\u1EC7p l\u00EAn ho\u1EB7c th\u1EA3 t\u1EC7p t\u1EA1i \u0111\u00E2y</h5>\n        </ng-container>\n        <ng-container *ngIf=\"!!selectedFile\">\n            <div>\n                <span>{{ selectedFile.name }}</span>\n            </div>\n            <div>\n                <button pButton pRipple label=\"X\u00F3a\" class=\"p-button-danger p-button-rounded\"\n                    (click)=\"onRemoveFile($event)\"></button>\n            </div>\n        </ng-container>\n    </div>\n</div>\n<div class=\"pt-3 d-flex justify-content-center\">\n    <p-button icon=\"pi pi-times\" [label]=\"'common.label.cancel' | translateAsync\" styleClass=\"p-button-outlined\"\n        class=\"mr-2\" (onClick)=\"onCancel()\"></p-button>\n    <p-button icon=\"pi pi-upload\" [label]=\"'common.label.import' | translateAsync\" (onClick)=\"onImport()\"></p-button>\n</div>", styles: ["::ng-deep app-choose-file-import-dialog .image-upload-wrap{height:200px;border:#E9EAFF dashed 1px;border-radius:8px}::ng-deep app-choose-file-import-dialog .image-upload-wrap:hover{background-color:#e9eaff!important;cursor:pointer;border:#141ED2 dashed 1px}::ng-deep app-choose-file-import-dialog .download-template{border:solid 1px #E9EAFF;border-radius:8px}::ng-deep app-choose-file-import-dialog .download-template a:hover{cursor:pointer;text-decoration:underline!important;color:#141ed2!important}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.ButtonDirective, selector: "[pButton]", inputs: ["iconPos", "loadingIcon", "label", "icon", "loading"] }, { kind: "component", type: i4.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i6.RadioButton, selector: "p-radioButton", inputs: ["value", "formControlName", "name", "disabled", "label", "tabindex", "inputId", "ariaLabelledBy", "ariaLabel", "style", "styleClass", "labelStyleClass"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "directive", type: i7.DragDirective, selector: "[appDrag]", outputs: ["files"] }, { kind: "directive", type: i8.InputSpecialDirective, selector: "input[type=\"text\"],input[type=\"email\"],input[type=\"tel\"],input:not([othertype=\"url\"]),textarea", inputs: ["type", "othertype"] }, { kind: "pipe", type: i9.L10nTranslateAsyncPipe, name: "translateAsync" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: ChooseFileImportDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-choose-file-import-dialog', template: "<div *ngIf=\"showActionType\">\n    <div class=\"field\">\n        <label class=\"font-semibold\">T\u00F9y ch\u1ECDn</label>\n        <div class=\"d-flex\">\n            <div class=\"field-checkbox mr-3\">\n                <p-radioButton [(ngModel)]=\"actionType\" inputId=\"THEM_MOI\" name=\"actionType\"\n                    [value]=\"'THEM_MOI'\"></p-radioButton>\n                <label for=\"THEM_MOI\" class=\"ml-2\">Th\u00EAm m\u1EDBi</label>\n            </div>\n            <div class=\"field-checkbox mr-3\">\n                <p-radioButton [(ngModel)]=\"actionType\" inputId=\"BO_SUNG\" name=\"actionType\"\n                    [value]=\"'BO_SUNG'\"></p-radioButton>\n                <label for=\"BO_SUNG\" class=\"ml-2\">B\u1ED5 sung</label>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"mb-2 p-2 download-template\">\n    <a (click)=\"onDownloadTemplate()\"><i class=\"fa fa-download mr-2\"></i> Download file m\u1EABu</a>\n</div>\n<div class=\"image-upload-wrap d-flex align-items-center\" appDrag (files)=\"filesDropped($event)\"\n    (click)=\"fileInput.click()\">\n    <input #fileInput class=\"file-upload-input\" type='file' hidden (change)=\"onFileInput($event)\" accept=\".xls,.xlsx\" />\n    <div class=\"drag-text text-center flex-1\">\n        <div>\n            <img src=\"assets/images/svg/excel-file.svg\" alt=\"Upload file\" width=\"70px\">\n        </div>\n        <ng-container *ngIf=\"!selectedFile\">\n            <h5>T\u1EA3i t\u1EC7p l\u00EAn ho\u1EB7c th\u1EA3 t\u1EC7p t\u1EA1i \u0111\u00E2y</h5>\n        </ng-container>\n        <ng-container *ngIf=\"!!selectedFile\">\n            <div>\n                <span>{{ selectedFile.name }}</span>\n            </div>\n            <div>\n                <button pButton pRipple label=\"X\u00F3a\" class=\"p-button-danger p-button-rounded\"\n                    (click)=\"onRemoveFile($event)\"></button>\n            </div>\n        </ng-container>\n    </div>\n</div>\n<div class=\"pt-3 d-flex justify-content-center\">\n    <p-button icon=\"pi pi-times\" [label]=\"'common.label.cancel' | translateAsync\" styleClass=\"p-button-outlined\"\n        class=\"mr-2\" (onClick)=\"onCancel()\"></p-button>\n    <p-button icon=\"pi pi-upload\" [label]=\"'common.label.import' | translateAsync\" (onClick)=\"onImport()\"></p-button>\n</div>", styles: ["::ng-deep app-choose-file-import-dialog .image-upload-wrap{height:200px;border:#E9EAFF dashed 1px;border-radius:8px}::ng-deep app-choose-file-import-dialog .image-upload-wrap:hover{background-color:#e9eaff!important;cursor:pointer;border:#141ED2 dashed 1px}::ng-deep app-choose-file-import-dialog .download-template{border:solid 1px #E9EAFF;border-radius:8px}::ng-deep app-choose-file-import-dialog .download-template a:hover{cursor:pointer;text-decoration:underline!important;color:#141ed2!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.DynamicDialogRef }, { type: i1.DynamicDialogConfig }, { type: i2.ImportFormService }, { type: i1.DialogService }]; } });
//# sourceMappingURL=data:application/json;base64,