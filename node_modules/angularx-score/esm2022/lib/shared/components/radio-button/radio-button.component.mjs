import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseControl } from '../../public-api';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "primeng/radiobutton";
import * as i4 from "../control-messages/control-messages.component";
export class RadioButtonComponent {
    constructor() {
        // formControl of this input
        this.property = new BaseControl();
        this.options = [];
        this.optionLabel = '';
        this.optionValue = '';
        this.labelValue = '';
        this.onChange = new EventEmitter();
    }
    _onClick(event) {
        this.onChange.emit(event);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: RadioButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.5", type: RadioButtonComponent, selector: "app-radio-button", inputs: { property: "property", options: "options", optionLabel: "optionLabel", optionValue: "optionValue", labelValue: "labelValue" }, outputs: { onChange: "onChange" }, ngImport: i0, template: "<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <div class=\"d-flex\">\n        <div *ngFor=\"let category of options\" class=\"field-checkbox mr-3\">\n            <p-radioButton (onClick)=\"_onClick($event)\" [inputId]=\"category[optionValue]\" [name]=\"property.propertyName\" [value]=\"category[optionValue]\" [formControl]=\"property\"></p-radioButton>\n            <label [for]=\"category[optionValue]\" class=\"ml-2\">{{ category[optionLabel] }}</label>\n        </div>\n    </div>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>", styles: [""], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.RadioButton, selector: "p-radioButton", inputs: ["value", "formControlName", "name", "disabled", "label", "tabindex", "inputId", "ariaLabelledBy", "ariaLabel", "style", "styleClass", "labelStyleClass"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "component", type: i4.ControlMessagesComponent, selector: "app-control-messages", inputs: ["control", "labelName"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.5", ngImport: i0, type: RadioButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-radio-button', template: "<div class=\"field\">\n    <label class=\"font-semibold\" [ngClass]=\"{'required': property.isRequire}\">{{ labelValue }}</label>\n    <div class=\"d-flex\">\n        <div *ngFor=\"let category of options\" class=\"field-checkbox mr-3\">\n            <p-radioButton (onClick)=\"_onClick($event)\" [inputId]=\"category[optionValue]\" [name]=\"property.propertyName\" [value]=\"category[optionValue]\" [formControl]=\"property\"></p-radioButton>\n            <label [for]=\"category[optionValue]\" class=\"ml-2\">{{ category[optionLabel] }}</label>\n        </div>\n    </div>\n    <app-control-messages [control]=\"property\"></app-control-messages>\n</div>" }]
        }], propDecorators: { property: [{
                type: Input
            }], options: [{
                type: Input
            }], optionLabel: [{
                type: Input
            }], optionValue: [{
                type: Input
            }], labelValue: [{
                type: Input
            }], onChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXJ4LXNjb3JlL3NyYy9saWIvc2hhcmVkL2NvbXBvbmVudHMvcmFkaW8tYnV0dG9uL3JhZGlvLWJ1dHRvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyeC1zY29yZS9zcmMvbGliL3NoYXJlZC9jb21wb25lbnRzL3JhZGlvLWJ1dHRvbi9yYWRpby1idXR0b24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7OztBQU8vQyxNQUFNLE9BQU8sb0JBQW9CO0lBTGpDO1FBTUUsNEJBQTRCO1FBRXJCLGFBQVEsR0FBZ0IsSUFBSSxXQUFXLEVBQUUsQ0FBQztRQUcxQyxZQUFPLEdBQWUsRUFBRSxDQUFDO1FBR3pCLGdCQUFXLEdBQVcsRUFBRSxDQUFDO1FBR3pCLGdCQUFXLEdBQVcsRUFBRSxDQUFDO1FBR3pCLGVBQVUsR0FBVyxFQUFFLENBQUM7UUFHeEIsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0tBTTlEO0lBSEMsUUFBUSxDQUFDLEtBQVU7UUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQzs4R0F2QlUsb0JBQW9CO2tHQUFwQixvQkFBb0IsbU9DUmpDLGtwQkFTTTs7MkZERE8sb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLGtCQUFrQjs4QkFPckIsUUFBUTtzQkFEZCxLQUFLO2dCQUlDLE9BQU87c0JBRGIsS0FBSztnQkFJQyxXQUFXO3NCQURqQixLQUFLO2dCQUlDLFdBQVc7c0JBRGpCLEtBQUs7Z0JBSUMsVUFBVTtzQkFEaEIsS0FBSztnQkFJQyxRQUFRO3NCQURkLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCYXNlQ29udHJvbCB9IGZyb20gJy4uLy4uL3B1YmxpYy1hcGknO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtcmFkaW8tYnV0dG9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9yYWRpby1idXR0b24uY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUmFkaW9CdXR0b25Db21wb25lbnQge1xyXG4gIC8vIGZvcm1Db250cm9sIG9mIHRoaXMgaW5wdXRcclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBwcm9wZXJ0eTogQmFzZUNvbnRyb2wgPSBuZXcgQmFzZUNvbnRyb2woKTtcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgb3B0aW9uczogQXJyYXk8YW55PiA9IFtdO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBvcHRpb25MYWJlbDogc3RyaW5nID0gJyc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIG9wdGlvblZhbHVlOiBzdHJpbmcgPSAnJztcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgbGFiZWxWYWx1ZTogc3RyaW5nID0gJyc7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIHB1YmxpYyBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcblxyXG4gIF9vbkNsaWNrKGV2ZW50OiBhbnkpIHtcclxuICAgIHRoaXMub25DaGFuZ2UuZW1pdChldmVudCk7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJmaWVsZFwiPlxuICAgIDxsYWJlbCBjbGFzcz1cImZvbnQtc2VtaWJvbGRcIiBbbmdDbGFzc109XCJ7J3JlcXVpcmVkJzogcHJvcGVydHkuaXNSZXF1aXJlfVwiPnt7IGxhYmVsVmFsdWUgfX08L2xhYmVsPlxuICAgIDxkaXYgY2xhc3M9XCJkLWZsZXhcIj5cbiAgICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgY2F0ZWdvcnkgb2Ygb3B0aW9uc1wiIGNsYXNzPVwiZmllbGQtY2hlY2tib3ggbXItM1wiPlxuICAgICAgICAgICAgPHAtcmFkaW9CdXR0b24gKG9uQ2xpY2spPVwiX29uQ2xpY2soJGV2ZW50KVwiIFtpbnB1dElkXT1cImNhdGVnb3J5W29wdGlvblZhbHVlXVwiIFtuYW1lXT1cInByb3BlcnR5LnByb3BlcnR5TmFtZVwiIFt2YWx1ZV09XCJjYXRlZ29yeVtvcHRpb25WYWx1ZV1cIiBbZm9ybUNvbnRyb2xdPVwicHJvcGVydHlcIj48L3AtcmFkaW9CdXR0b24+XG4gICAgICAgICAgICA8bGFiZWwgW2Zvcl09XCJjYXRlZ29yeVtvcHRpb25WYWx1ZV1cIiBjbGFzcz1cIm1sLTJcIj57eyBjYXRlZ29yeVtvcHRpb25MYWJlbF0gfX08L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8YXBwLWNvbnRyb2wtbWVzc2FnZXMgW2NvbnRyb2xdPVwicHJvcGVydHlcIj48L2FwcC1jb250cm9sLW1lc3NhZ2VzPlxuPC9kaXY+Il19